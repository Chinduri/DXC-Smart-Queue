com.facebook.internal.PlatformServiceClient:
    protected android.content.Context getContext()
kotlin.jvm.functions.Function0
com.facebook.internal.NativeProtocol:
    public static android.content.Intent createTokenRefreshIntent(android.content.Context)
    public static android.os.Bundle getBridgeArgumentsFromIntent(android.content.Intent)
    public static android.os.Bundle getSuccessResultsFromIntent(android.content.Intent)
    public static boolean isErrorResult(android.content.Intent)
    public static android.os.Bundle getErrorDataFromResultIntent(android.content.Intent)
    public static final int NO_PROTOCOL_AVAILABLE
    private static final java.lang.String FACEBOOK_PROXY_AUTH_ACTIVITY
    private static final java.lang.String FACEBOOK_TOKEN_REFRESH_ACTIVITY
    public static final java.lang.String FACEBOOK_PROXY_AUTH_PERMISSIONS_KEY
    public static final java.lang.String FACEBOOK_PROXY_AUTH_APP_ID_KEY
    public static final java.lang.String FACEBOOK_PROXY_AUTH_E2E_KEY
    public static final java.lang.String FACEBOOK_SDK_VERSION_KEY
    static final java.lang.String INTENT_ACTION_PLATFORM_ACTIVITY
    static final java.lang.String INTENT_ACTION_PLATFORM_SERVICE
    public static final int PROTOCOL_VERSION_20121101
    public static final int PROTOCOL_VERSION_20130502
    public static final int PROTOCOL_VERSION_20130618
    public static final int PROTOCOL_VERSION_20131107
    public static final int PROTOCOL_VERSION_20140204
    public static final int PROTOCOL_VERSION_20140324
    public static final int PROTOCOL_VERSION_20140701
    public static final int PROTOCOL_VERSION_20141001
    public static final int PROTOCOL_VERSION_20141028
    public static final int PROTOCOL_VERSION_20141107
    public static final int PROTOCOL_VERSION_20141218
    public static final int PROTOCOL_VERSION_20160327
    public static final int PROTOCOL_VERSION_20170213
    public static final int PROTOCOL_VERSION_20170411
    public static final int PROTOCOL_VERSION_20170417
    public static final int PROTOCOL_VERSION_20171115
    public static final java.lang.String EXTRA_PROTOCOL_VERSION
    public static final java.lang.String EXTRA_PROTOCOL_ACTION
    public static final java.lang.String EXTRA_PROTOCOL_CALL_ID
    public static final java.lang.String EXTRA_GET_INSTALL_DATA_PACKAGE
    public static final java.lang.String EXTRA_PROTOCOL_BRIDGE_ARGS
    public static final java.lang.String EXTRA_PROTOCOL_METHOD_ARGS
    public static final java.lang.String EXTRA_PROTOCOL_METHOD_RESULTS
    public static final java.lang.String BRIDGE_ARG_APP_NAME_STRING
    public static final java.lang.String BRIDGE_ARG_ACTION_ID_STRING
    public static final java.lang.String BRIDGE_ARG_ERROR_BUNDLE
    public static final java.lang.String EXTRA_DIALOG_COMPLETE_KEY
    public static final java.lang.String EXTRA_DIALOG_COMPLETION_GESTURE_KEY
    public static final java.lang.String RESULT_ARGS_DIALOG_COMPLETE_KEY
    public static final java.lang.String RESULT_ARGS_DIALOG_COMPLETION_GESTURE_KEY
    public static final int MESSAGE_GET_ACCESS_TOKEN_REQUEST
    public static final int MESSAGE_GET_ACCESS_TOKEN_REPLY
    static final int MESSAGE_GET_PROTOCOL_VERSIONS_REQUEST
    static final int MESSAGE_GET_PROTOCOL_VERSIONS_REPLY
    public static final int MESSAGE_GET_INSTALL_DATA_REQUEST
    public static final int MESSAGE_GET_INSTALL_DATA_REPLY
    public static final int MESSAGE_GET_LIKE_STATUS_REQUEST
    public static final int MESSAGE_GET_LIKE_STATUS_REPLY
    public static final int MESSAGE_GET_AK_SEAMLESS_TOKEN_REQUEST
    public static final int MESSAGE_GET_AK_SEAMLESS_TOKEN_REPLY
    public static final int MESSAGE_GET_LOGIN_STATUS_REQUEST
    public static final int MESSAGE_GET_LOGIN_STATUS_REPLY
    static final java.lang.String EXTRA_PROTOCOL_VERSIONS
    public static final java.lang.String ACTION_FEED_DIALOG
    public static final java.lang.String ACTION_MESSAGE_DIALOG
    public static final java.lang.String ACTION_OGACTIONPUBLISH_DIALOG
    public static final java.lang.String ACTION_OGMESSAGEPUBLISH_DIALOG
    public static final java.lang.String ACTION_LIKE_DIALOG
    public static final java.lang.String ACTION_APPINVITE_DIALOG
    public static final java.lang.String ACTION_CAMERA_EFFECT
    public static final java.lang.String ACTION_SHARE_STORY
    public static final java.lang.String EXTRA_PERMISSIONS
    public static final java.lang.String EXTRA_APPLICATION_ID
    public static final java.lang.String EXTRA_APPLICATION_NAME
    public static final java.lang.String EXTRA_USER_ID
    public static final java.lang.String EXTRA_LOGGER_REF
    public static final java.lang.String EXTRA_TOAST_DURATION_MS
    public static final java.lang.String EXTRA_GRAPH_API_VERSION
    public static final java.lang.String EXTRA_ACCESS_TOKEN
    public static final java.lang.String EXTRA_EXPIRES_SECONDS_SINCE_EPOCH
    public static final java.lang.String EXTRA_DATA_ACCESS_EXPIRATION_TIME
    public static final java.lang.String RESULT_ARGS_ACCESS_TOKEN
    public static final java.lang.String RESULT_ARGS_SIGNED_REQUEST
    public static final java.lang.String RESULT_ARGS_EXPIRES_SECONDS_SINCE_EPOCH
    public static final java.lang.String RESULT_ARGS_PERMISSIONS
    public static final java.lang.String EXTRA_ARGS_PROFILE
    public static final java.lang.String EXTRA_ARGS_PROFILE_NAME
    public static final java.lang.String EXTRA_ARGS_PROFILE_LAST_NAME
    public static final java.lang.String EXTRA_ARGS_PROFILE_FIRST_NAME
    public static final java.lang.String EXTRA_ARGS_PROFILE_MIDDLE_NAME
    public static final java.lang.String EXTRA_ARGS_PROFILE_LINK
    public static final java.lang.String EXTRA_ARGS_PROFILE_USER_ID
    public static final java.lang.String OPEN_GRAPH_CREATE_OBJECT_KEY
    public static final java.lang.String IMAGE_USER_GENERATED_KEY
    public static final java.lang.String IMAGE_URL_KEY
    public static final java.lang.String STATUS_ERROR_TYPE
    public static final java.lang.String STATUS_ERROR_DESCRIPTION
    public static final java.lang.String STATUS_ERROR_CODE
    public static final java.lang.String STATUS_ERROR_SUBCODE
    public static final java.lang.String STATUS_ERROR_JSON
    public static final java.lang.String BRIDGE_ARG_ERROR_TYPE
    public static final java.lang.String BRIDGE_ARG_ERROR_DESCRIPTION
    public static final java.lang.String BRIDGE_ARG_ERROR_CODE
    public static final java.lang.String BRIDGE_ARG_ERROR_SUBCODE
    public static final java.lang.String BRIDGE_ARG_ERROR_JSON
    public static final java.lang.String ERROR_UNKNOWN_ERROR
    public static final java.lang.String ERROR_PROTOCOL_ERROR
    public static final java.lang.String ERROR_USER_CANCELED
    public static final java.lang.String ERROR_APPLICATION_ERROR
    public static final java.lang.String ERROR_NETWORK_ERROR
    public static final java.lang.String ERROR_PERMISSION_DENIED
    public static final java.lang.String ERROR_SERVICE_DISABLED
    public static final java.lang.String WEB_DIALOG_URL
    public static final java.lang.String WEB_DIALOG_ACTION
    public static final java.lang.String WEB_DIALOG_PARAMS
    public static final java.lang.String WEB_DIALOG_IS_FALLBACK
    public static final java.lang.String AUDIENCE_ME
    public static final java.lang.String AUDIENCE_FRIENDS
    public static final java.lang.String AUDIENCE_EVERYONE
    private static final java.lang.String CONTENT_SCHEME
    private static final java.lang.String PLATFORM_PROVIDER
    private static final java.lang.String PLATFORM_PROVIDER_VERSIONS
    private static final java.lang.String PLATFORM_PROVIDER_VERSION_COLUMN
androidx.recyclerview.widget.ThreadUtil
okhttp3.internal.cache.FaultHidingSink
com.squareup.picasso.Utils$ActivityManagerHoneycomb:
    private void <init>()
com.facebook.share.ShareApi$12
kotlin.jvm.internal.PropertyReference1Impl
kotlin.collections.EmptyIterator
androidx.core.text.util.FindAddress
com.facebook.share.widget.JoinAppGroupDialog$2
okio.ForwardingSink
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23
androidx.recyclerview.R$string
kotlin.jvm.JvmField
kotlin.jvm.functions.Function12
androidx.media.MediaBrowserServiceCompat$ServiceHandler
kotlin.ranges.UIntProgression
bolts.CancellationTokenRegistration
com.google.zxing.oned.EANManufacturerOrgSupport
com.twitter.Autolink$LinkAttributeModifier
com.google.zxing.common.detector.MonochromeRectangleDetector
com.twitter.sdk.android.tweetui.AbstractTweetView
com.facebook.internal.CollectionMapper$2
androidx.browser.customtabs.CustomTabsService
kotlin.coroutines.jvm.internal.CoroutineStackFrame
androidx.core.provider.FontsContractCompat$4$2
androidx.fragment.R$styleable
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl
com.twitter.sdk.android.tweetui.internal.TweetMediaView:
    public void setRoundedCornersRadii(int,int,int,int)
    public void setTweetMediaEntities(com.twitter.sdk.android.core.models.Tweet,java.util.List)
    void initializeImageViews(java.util.List)
    java.lang.String getSizedImagePath(com.twitter.sdk.android.core.models.MediaEntity)
    static final int MAX_IMAGE_VIEW_COUNT
    static final java.lang.String SIZED_IMAGE_SMALL
com.twitter.sdk.android.core.identity.TwitterLoginButton$1
io.flutter.plugins.packageinfo.R$id
androidx.slidingpanelayout.R$style
com.facebook.internal.WorkQueue$WorkNode
kotlin.jvm.internal.TypeReference$asString$args$1
androidx.recyclerview.widget.MessageThreadUtil$1
com.dxc.mtahackathon.BuildConfig
androidx.collection.SimpleArrayMap:
    public void <init>(androidx.collection.SimpleArrayMap)
    public void putAll(androidx.collection.SimpleArrayMap)
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean CONCURRENT_MODIFICATION_EXCEPTIONS
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
androidx.core.graphics.TypefaceCompat:
    private void <init>()
    private static final java.lang.String TAG
kotlin.contracts.ContractBuilderKt
kotlin.sequences.DropSequence
androidx.media.R$drawable
io.flutter.plugins.deviceinfo.R$integer
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    public void clearSelection()
    public synthetic bridge int lookForSelectablePosition(int,boolean)
kotlin.coroutines.jvm.internal.Boxing
com.facebook.internal.NativeProtocol$FBLiteAppInfo:
    static final java.lang.String FBLITE_PACKAGE
    static final java.lang.String FACEBOOK_LITE_ACTIVITY
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2
androidx.browser.customtabs.CustomTabsSessionToken$MockCallback
bolts.CancellationTokenSource$1
com.facebook.internal.AnalyticsEvents
com.iyaffle.launchreview.R$styleable
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3
androidx.appcompat.app.AlertController$AlertParams$2
com.facebook.login.NativeAppLoginMethodHandler:
    abstract boolean tryAuthorize(com.facebook.login.LoginClient$Request)
android.support.v4.media.MediaDescriptionCompat:
    public java.lang.String getMediaId()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public java.lang.CharSequence getDescription()
    public android.graphics.Bitmap getIconBitmap()
    public android.net.Uri getIconUri()
    public android.os.Bundle getExtras()
    public android.net.Uri getMediaUri()
    public static final java.lang.String EXTRA_BT_FOLDER_TYPE
    public static final long BT_FOLDER_TYPE_MIXED
    public static final long BT_FOLDER_TYPE_TITLES
    public static final long BT_FOLDER_TYPE_ALBUMS
    public static final long BT_FOLDER_TYPE_ARTISTS
    public static final long BT_FOLDER_TYPE_GENRES
    public static final long BT_FOLDER_TYPE_PLAYLISTS
    public static final long BT_FOLDER_TYPE_YEARS
    public static final java.lang.String EXTRA_DOWNLOAD_STATUS
    public static final long STATUS_NOT_DOWNLOADED
    public static final long STATUS_DOWNLOADING
    public static final long STATUS_DOWNLOADED
    public static final java.lang.String DESCRIPTION_KEY_MEDIA_URI
    public static final java.lang.String DESCRIPTION_KEY_NULL_BUNDLE_FLAG
androidx.viewpager.R$integer
kotlin.concurrent.ThreadsKt
androidx.media.AudioAttributesImplBase:
    void <init>(int,int,int,int)
    public static androidx.media.AudioAttributesImpl fromBundle(android.os.Bundle)
    public java.lang.Object getAudioAttributes()
    public int getVolumeControlStream()
    public int getRawLegacyStreamType()
    public android.os.Bundle toBundle()
androidx.appcompat.widget.ActionMenuView$LayoutParams:
    void <init>(int,int,boolean)
com.facebook.common.R$style:
    private void <init>()
kotlin.collections.ArraysKt___ArraysJvmKt
androidx.core.text.util.LinkifyCompat$LinkifyMask
androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper
com.twitter.sdk.android.core.internal.TwitterApi:
    public static final java.lang.String BASE_HOST
    public static final java.lang.String BASE_HOST_URL
com.facebook.share.internal.LikeActionController$GetOGObjectLikesRequestWrapper
io.flutter.plugins.sharedpreferences.R$style
okhttp3.internal.framed.FrameReader$Handler:
    public abstract void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
androidx.appcompat.widget.PopupMenu$OnDismissListener
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$3
kotlin.collections.ByteIterator
androidx.appcompat.app.AlertController$2
okhttp3.Connection:
    public abstract java.net.Socket socket()
    public abstract okhttp3.Handshake handshake()
    public abstract okhttp3.Protocol protocol()
androidx.vectordrawable.R$layout
com.dxc.mtahackathon.R$bool
kotlin.coroutines.experimental.SequenceBuilder
com.twitter.sdk.android.tweetui.BasicTimelineFilter
com.squareup.picasso.DeferredRequestCreator:
    void <init>(com.squareup.picasso.RequestCreator,android.widget.ImageView)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat
com.twitter.sdk.android.tweetui.internal.VideoView:
    private static final int STATE_ERROR
    private static final int STATE_IDLE
    private static final int STATE_PREPARING
    private static final int STATE_PREPARED
    private static final int STATE_PLAYING
    private static final int STATE_PAUSED
    private static final int STATE_PLAYBACK_COMPLETED
com.facebook.appevents.AppEventQueue:
    private static final int NUM_LOG_EVENTS_TO_TRY_TO_FLUSH_AFTER
    private static final int FLUSH_PERIOD_IN_SECONDS
com.facebook.FacebookBroadcastReceiver
com.facebook.share.internal.LikeActionController$8
com.google.zxing.LuminanceSource
androidx.media.R$dimen
com.twitter.sdk.android.tweetui.SearchTimeline$ResultType
android.support.v4.media.session.PlaybackStateCompat$Builder
androidx.drawerlayout.R$string
com.facebook.share.model.GameRequestContent$1
androidx.appcompat.widget.DrawableUtils:
    private void <init>()
    public static android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)
    private static final java.lang.String TAG
    private static final java.lang.String VECTOR_DRAWABLE_CLAZZ_NAME
androidx.core.app.ComponentActivity:
    public void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
    public androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
android.support.v4.media.MediaMetadataCompatApi21$Builder
kotlin.jvm.internal.ArrayIntIterator
com.facebook.share.model.ShareOpenGraphContent:
    private void <init>(com.facebook.share.model.ShareOpenGraphContent$Builder)
    synthetic void <init>(com.facebook.share.model.ShareOpenGraphContent$Builder,com.facebook.share.model.ShareOpenGraphContent$1)
kotlin.coroutines.CombinedContext$Serialized
androidx.core.view.ScrollingView
com.facebook.share.internal.ShareInternalUtility$2:
    public boolean onActivityResult(int,android.content.Intent)
com.facebook.internal.ImageDownloader
kotlin.jvm.JvmMultifileClass
com.twitter.sdk.android.tweetui.internal.AnimationUtils:
    void <init>()
androidx.media.MediaBrowserServiceCompat$2
com.facebook.appevents.AppEventsLoggerImpl:
    static void functionDEPRECATED(java.lang.String)
    static void setFlushBehavior(com.facebook.appevents.AppEventsLogger$FlushBehavior)
    static void setPushNotificationsRegistrationId(java.lang.String)
    static void augmentWebView(android.webkit.WebView,android.content.Context)
    static void updateUserProperties(android.os.Bundle,java.lang.String,com.facebook.GraphRequest$Callback)
    static synthetic java.lang.String access$000()
    void logEvent(java.lang.String)
    void logEvent(java.lang.String,double)
    void logEventFromSE(java.lang.String)
    void logPurchase(java.math.BigDecimal,java.util.Currency)
    void logPurchase(java.math.BigDecimal,java.util.Currency,android.os.Bundle)
    void logPushNotificationOpen(android.os.Bundle,java.lang.String)
    void logProductItem(java.lang.String,com.facebook.appevents.AppEventsLogger$ProductAvailability,com.facebook.appevents.AppEventsLogger$ProductCondition,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal,java.util.Currency,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
    boolean isValidForAccessToken(com.facebook.AccessToken)
    void logSdkEvent(java.lang.String,java.lang.Double,android.os.Bundle)
    public java.lang.String getApplicationId()
    private static final int APP_SUPPORTS_ATTRIBUTION_ID_RECHECK_PERIOD_IN_SECONDS
    private static final java.lang.String PUSH_PAYLOAD_KEY
    private static final java.lang.String PUSH_PAYLOAD_CAMPAIGN_KEY
    private static final java.lang.String APP_EVENT_NAME_PUSH_OPENED
    private static final java.lang.String APP_EVENT_PUSH_PARAMETER_CAMPAIGN
    private static final java.lang.String APP_EVENT_PUSH_PARAMETER_ACTION
    private static final java.lang.String ACCOUNT_KIT_EVENT_NAME_PREFIX
    private static final java.lang.String APP_EVENT_PREFERENCES
    private static final java.lang.String APP_EVENTS_KILLSWITCH
kotlin.internal.ProgressionUtilKt
androidx.legacy.coreui.R$drawable
androidx.appcompat.R$color:
    private void <init>()
androidx.lifecycle.MediatorLiveData$Source
com.facebook.GraphRequest:
    public void <init>(com.facebook.AccessToken,java.lang.String)
    public void <init>(com.facebook.AccessToken,java.lang.String,android.os.Bundle,com.facebook.HttpMethod)
    void <init>(com.facebook.AccessToken,java.net.URL)
    public static com.facebook.GraphRequest newDeleteObjectRequest(com.facebook.AccessToken,java.lang.String,com.facebook.GraphRequest$Callback)
    public static com.facebook.GraphRequest newMeRequest(com.facebook.AccessToken,com.facebook.GraphRequest$GraphJSONObjectCallback)
    public static com.facebook.GraphRequest newMyFriendsRequest(com.facebook.AccessToken,com.facebook.GraphRequest$GraphJSONArrayCallback)
    public static com.facebook.GraphRequest newPlacesSearchRequest(com.facebook.AccessToken,android.location.Location,int,int,java.lang.String,com.facebook.GraphRequest$GraphJSONArrayCallback)
    public static com.facebook.GraphRequest newUploadPhotoRequest(com.facebook.AccessToken,java.lang.String,android.graphics.Bitmap,java.lang.String,android.os.Bundle,com.facebook.GraphRequest$Callback)
    public static com.facebook.GraphRequest newUploadPhotoRequest(com.facebook.AccessToken,java.lang.String,java.io.File,java.lang.String,android.os.Bundle,com.facebook.GraphRequest$Callback)
    public static com.facebook.GraphRequest newUploadPhotoRequest(com.facebook.AccessToken,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,com.facebook.GraphRequest$Callback)
    public static com.facebook.GraphRequest newCustomAudienceThirdPartyIdRequest(com.facebook.AccessToken,android.content.Context,java.lang.String,com.facebook.GraphRequest$Callback)
    public static com.facebook.GraphRequest newCustomAudienceThirdPartyIdRequest(com.facebook.AccessToken,android.content.Context,com.facebook.GraphRequest$Callback)
    public static final java.lang.String getDefaultBatchApplicationId()
    public static final void setDefaultBatchApplicationId(java.lang.String)
    public static varargs java.net.HttpURLConnection toHttpConnection(com.facebook.GraphRequest[])
    public static java.net.HttpURLConnection toHttpConnection(java.util.Collection)
    public static java.util.List executeConnectionAndWait(java.net.HttpURLConnection,java.util.Collection)
    public static com.facebook.GraphRequestAsyncTask executeConnectionAsync(java.net.HttpURLConnection,com.facebook.GraphRequestBatch)
    public static com.facebook.GraphRequestAsyncTask executeConnectionAsync(android.os.Handler,java.net.HttpURLConnection,com.facebook.GraphRequestBatch)
    private static java.lang.String getDefaultPhotoPathIfNull(java.lang.String)
    public final void setGraphPath(java.lang.String)
    public final void setVersion(java.lang.String)
    public final void setAccessToken(com.facebook.AccessToken)
    public final java.lang.String getBatchEntryName()
    public final void setBatchEntryName(java.lang.String)
    public final java.lang.String getBatchEntryDependsOn()
    public final void setBatchEntryDependsOn(java.lang.String)
    public final boolean getBatchEntryOmitResultOnSuccess()
    public final void setBatchEntryOmitResultOnSuccess(boolean)
    public static final int MAXIMUM_BATCH_SIZE
    private static final java.lang.String VIDEOS_SUFFIX
    private static final java.lang.String ME
    private static final java.lang.String MY_FRIENDS
    private static final java.lang.String MY_PHOTOS
    private static final java.lang.String SEARCH
    private static final java.lang.String USER_AGENT_BASE
    private static final java.lang.String USER_AGENT_HEADER
    private static final java.lang.String CONTENT_TYPE_HEADER
    private static final java.lang.String ACCEPT_LANGUAGE_HEADER
    private static final java.lang.String CONTENT_ENCODING_HEADER
    private static final java.lang.String FORMAT_PARAM
    private static final java.lang.String FORMAT_JSON
    private static final java.lang.String SDK_PARAM
    private static final java.lang.String SDK_ANDROID
    public static final java.lang.String ACCESS_TOKEN_PARAM
    private static final java.lang.String BATCH_ENTRY_NAME_PARAM
    private static final java.lang.String BATCH_ENTRY_OMIT_RESPONSE_ON_SUCCESS_PARAM
    private static final java.lang.String BATCH_ENTRY_DEPENDS_ON_PARAM
    private static final java.lang.String BATCH_APP_ID_PARAM
    private static final java.lang.String BATCH_RELATIVE_URL_PARAM
    private static final java.lang.String BATCH_BODY_PARAM
    private static final java.lang.String BATCH_METHOD_PARAM
    private static final java.lang.String BATCH_PARAM
    private static final java.lang.String ATTACHMENT_FILENAME_PREFIX
    private static final java.lang.String ATTACHED_FILES_PARAM
    private static final java.lang.String ISO_8601_FORMAT_STRING
    private static final java.lang.String DEBUG_PARAM
    private static final java.lang.String DEBUG_SEVERITY_INFO
    private static final java.lang.String DEBUG_SEVERITY_WARNING
    private static final java.lang.String DEBUG_KEY
    private static final java.lang.String DEBUG_MESSAGES_KEY
    private static final java.lang.String DEBUG_MESSAGE_KEY
    private static final java.lang.String DEBUG_MESSAGE_TYPE_KEY
    private static final java.lang.String DEBUG_MESSAGE_LINK_KEY
    private static final java.lang.String PICTURE_PARAM
    private static final java.lang.String CAPTION_PARAM
    public static final java.lang.String FIELDS_PARAM
    private static final java.lang.String GRAPH_PATH_FORMAT
android.support.v4.media.session.PlaybackStateCompat:
    public static int toKeyCode(long)
    public int getState()
    public long getPosition()
    public long getLastPositionUpdateTime()
    public long getCurrentPosition(java.lang.Long)
    public long getBufferedPosition()
    public float getPlaybackSpeed()
    public long getActions()
    public java.util.List getCustomActions()
    public int getErrorCode()
    public java.lang.CharSequence getErrorMessage()
    public long getActiveQueueItemId()
    public android.os.Bundle getExtras()
    public java.lang.Object getPlaybackState()
    public static final long ACTION_STOP
    public static final long ACTION_PAUSE
    public static final long ACTION_PLAY
    public static final long ACTION_REWIND
    public static final long ACTION_SKIP_TO_PREVIOUS
    public static final long ACTION_SKIP_TO_NEXT
    public static final long ACTION_FAST_FORWARD
    public static final long ACTION_SET_RATING
    public static final long ACTION_SEEK_TO
    public static final long ACTION_PLAY_PAUSE
    public static final long ACTION_PLAY_FROM_MEDIA_ID
    public static final long ACTION_PLAY_FROM_SEARCH
    public static final long ACTION_SKIP_TO_QUEUE_ITEM
    public static final long ACTION_PLAY_FROM_URI
    public static final long ACTION_PREPARE
    public static final long ACTION_PREPARE_FROM_MEDIA_ID
    public static final long ACTION_PREPARE_FROM_SEARCH
    public static final long ACTION_PREPARE_FROM_URI
    public static final long ACTION_SET_REPEAT_MODE
    public static final long ACTION_SET_SHUFFLE_MODE_ENABLED
    public static final long ACTION_SET_CAPTIONING_ENABLED
    public static final long ACTION_SET_SHUFFLE_MODE
    public static final int STATE_NONE
    public static final int STATE_STOPPED
    public static final int STATE_PAUSED
    public static final int STATE_PLAYING
    public static final int STATE_FAST_FORWARDING
    public static final int STATE_REWINDING
    public static final int STATE_BUFFERING
    public static final int STATE_ERROR
    public static final int STATE_CONNECTING
    public static final int STATE_SKIPPING_TO_PREVIOUS
    public static final int STATE_SKIPPING_TO_NEXT
    public static final int STATE_SKIPPING_TO_QUEUE_ITEM
    public static final long PLAYBACK_POSITION_UNKNOWN
    public static final int REPEAT_MODE_INVALID
    public static final int REPEAT_MODE_NONE
    public static final int REPEAT_MODE_ONE
    public static final int REPEAT_MODE_ALL
    public static final int REPEAT_MODE_GROUP
    public static final int SHUFFLE_MODE_INVALID
    public static final int SHUFFLE_MODE_NONE
    public static final int SHUFFLE_MODE_ALL
    public static final int SHUFFLE_MODE_GROUP
    public static final int ERROR_CODE_UNKNOWN_ERROR
    public static final int ERROR_CODE_APP_ERROR
    public static final int ERROR_CODE_NOT_SUPPORTED
    public static final int ERROR_CODE_AUTHENTICATION_EXPIRED
    public static final int ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED
    public static final int ERROR_CODE_CONCURRENT_STREAM_LIMIT
    public static final int ERROR_CODE_PARENTAL_CONTROL_RESTRICTED
    public static final int ERROR_CODE_NOT_AVAILABLE_IN_REGION
    public static final int ERROR_CODE_CONTENT_ALREADY_PLAYING
    public static final int ERROR_CODE_SKIP_LIMIT_REACHED
    public static final int ERROR_CODE_ACTION_ABORTED
    public static final int ERROR_CODE_END_OF_QUEUE
    private static final int KEYCODE_MEDIA_PAUSE
    private static final int KEYCODE_MEDIA_PLAY
kotlin.ranges.IntProgressionIterator
com.google.zxing.client.result.VINParsedResult
androidx.core.view.accessibility.AccessibilityManagerCompat
kotlin.random.FallbackThreadLocalRandom
com.twitter.sdk.android.core.AuthTokenAdapter:
    private static final java.lang.String AUTH_TYPE
    private static final java.lang.String AUTH_TOKEN
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
com.google.zxing.maxicode.decoder.DecodedBitStreamParser
com.facebook.share.R$dimen
com.google.zxing.common.StringUtils
com.facebook.devicerequests.internal.DeviceRequestsHelper:
    public static final java.lang.String DEVICE_INFO_PARAM
    public static final java.lang.String DEVICE_TARGET_USER_ID
    static final java.lang.String DEVICE_INFO_DEVICE
    static final java.lang.String DEVICE_INFO_MODEL
    static final java.lang.String SDK_HEADER
    static final java.lang.String SDK_FLAVOR
    static final java.lang.String SERVICE_TYPE
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState
okhttp3.RealCall$AsyncCall:
    okhttp3.Request request()
    okhttp3.RealCall get()
kotlin.UShortArrayKt
androidx.customview.R$color
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28
com.squareup.picasso.Dispatcher$1
androidx.core.view.NestedScrollingChild:
    public abstract void setNestedScrollingEnabled(boolean)
    public abstract boolean isNestedScrollingEnabled()
    public abstract boolean startNestedScroll(int)
    public abstract boolean hasNestedScrollingParent()
    public abstract boolean dispatchNestedScroll(int,int,int,int,int[])
    public abstract boolean dispatchNestedPreScroll(int,int,int[],int[])
    public abstract boolean dispatchNestedFling(float,float,boolean)
    public abstract boolean dispatchNestedPreFling(float,float)
kotlin.collections.AbstractCollection$toString$1
com.facebook.share.internal.LikeDialog$2
bolts.WebViewAppLinkResolver$2
androidx.media.R$style
com.google.zxing.oned.UPCEWriter:
    private static final int CODE_WIDTH
kotlin.UIntKt
kotlin.sequences.DropWhileSequence$iterator$1
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19
androidx.core.view.animation.PathInterpolatorCompat
android.support.v4.media.RatingCompat$Style
kotlin.jvm.internal.MutableLocalVariableReference
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
okhttp3.OkHttpClient:
    public okhttp3.Cache cache()
    public okhttp3.OkHttpClient$Builder newBuilder()
com.google.gson.internal.LinkedHashTreeMap$Node
androidx.core.app.ActivityCompat$SharedElementCallback21Impl
kotlin.collections.ArraysKt___ArraysKt$withIndex$4
com.facebook.internal.WorkQueue$1
com.google.gson.JsonSerializationContext:
    public abstract com.google.gson.JsonElement serialize(java.lang.Object)
    public abstract com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type)
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$6
com.facebook.share.widget.LikeView$OnErrorListener
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener
androidx.versionedparcelable.VersionedParcelParcel:
    public void writeByteArray(byte[],int,int)
    public void writeLong(long)
    public void writeFloat(float)
    public void writeDouble(double)
    public void writeStrongBinder(android.os.IBinder)
    public void writeBoolean(boolean)
    public void writeStrongInterface(android.os.IInterface)
    public void writeBundle(android.os.Bundle)
    public long readLong()
    public float readFloat()
    public double readDouble()
    public android.os.IBinder readStrongBinder()
    public android.os.Bundle readBundle()
    public boolean readBoolean()
    private static final boolean DEBUG
    private static final java.lang.String TAG
com.facebook.share.widget.GameRequestDialog$WebHandler
androidx.recyclerview.widget.MessageThreadUtil$1$1
okio.AsyncTimeout:
    private static final int TIMEOUT_WRITE_SIZE
com.twitter.sdk.android.tweetui.FixedTweetTimeline$Builder
com.twitter.sdk.android.core.internal.CommonUtils:
    public void <init>()
    public static java.lang.String streamToString(java.io.InputStream)
    public static java.lang.String getStringResourceValue(android.content.Context,java.lang.String,java.lang.String)
    public static void logOrThrowIllegalStateException(java.lang.String,java.lang.String)
    static final java.lang.String TRACE_ENABLED_RESOURCE_NAME
    static final boolean TRACE_ENABLED_DEFAULT
androidx.lifecycle.R
androidx.core.app.RemoteInput$Builder
io.flutter.plugins.packageinfo.PackageInfoPlugin:
    public static void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
kotlin.collections.AbstractMap$toString$1
kotlin.collections.CharIterator
com.facebook.share.internal.LikeActionController$RequestWrapper
androidx.collection.ArrayMap:
    public void <init>(androidx.collection.SimpleArrayMap)
    public boolean containsAll(java.util.Collection)
    public boolean removeAll(java.util.Collection)
kotlin.sequences.SequenceBuilderIterator
android.support.v4.media.MediaBrowserCompat$MediaItem$Flags
androidx.asynclayoutinflater.R$color
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl
com.google.zxing.qrcode.decoder.FormatInformation
io.flutter.plugins.connectivity.ConnectivityPlugin:
    public static void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
androidx.asynclayoutinflater.R$layout
kotlin.text.CharCategory$Companion
androidx.recyclerview.widget.DiffUtil$1
androidx.core.content.IntentCompat
com.twitter.sdk.android.R
kotlin.sequences.GeneratorSequence$iterator$1
kotlin.sequences.SequencesKt___SequencesKt$minus$4
androidx.appcompat.app.AppCompatDelegateImpl$5
kotlin.coroutines.experimental.EmptyCoroutineContext
kotlin.collections.AbstractMap$Companion
androidx.fragment.R$style
androidx.core.database.CursorWindowCompat
com.facebook.share.internal.ShareInternalUtility:
    public void <init>()
    public static void invokeCallbackWithException(com.facebook.FacebookCallback,java.lang.Exception)
    public static void invokeCallbackWithError(com.facebook.FacebookCallback,java.lang.String)
    public static void invokeCallbackWithResults(com.facebook.FacebookCallback,java.lang.String,com.facebook.GraphResponse)
    public static java.lang.String getNativeDialogCompletionGesture(android.os.Bundle)
    public static java.lang.String getShareDialogPostId(android.os.Bundle)
    public static boolean handleActivityResult(int,int,android.content.Intent,com.facebook.share.internal.ResultProcessor)
    public static com.facebook.share.internal.ResultProcessor getShareResultProcessor(com.facebook.FacebookCallback)
    private static com.facebook.internal.AppCall getAppCallFromActivityResult(int,int,android.content.Intent)
    static void invokeOnCancelCallback(com.facebook.FacebookCallback)
    static void invokeOnSuccessCallback(com.facebook.FacebookCallback,java.lang.String)
    static void invokeOnErrorCallback(com.facebook.FacebookCallback,com.facebook.GraphResponse,java.lang.String)
    static void invokeOnErrorCallback(com.facebook.FacebookCallback,java.lang.String)
    static void invokeOnErrorCallback(com.facebook.FacebookCallback,com.facebook.FacebookException)
    private static void logShareResult(java.lang.String,java.lang.String)
    public static com.facebook.GraphRequest newUploadStagingResourceWithImageRequest(com.facebook.AccessToken,android.graphics.Bitmap,com.facebook.GraphRequest$Callback)
    public static com.facebook.share.widget.LikeView$ObjectType getMostSpecificObjectType(com.facebook.share.widget.LikeView$ObjectType,com.facebook.share.widget.LikeView$ObjectType)
    public static final java.lang.String MY_PHOTOS
    private static final java.lang.String MY_STAGING_RESOURCES
    private static final java.lang.String STAGING_PARAM
androidx.fragment.app.FragmentStatePagerAdapter
okio.Options
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder
kotlin.jvm.internal.unsafe.MonitorKt
okhttp3.internal.Internal:
    public static void initializeInstanceForTests()
    public abstract void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache)
    public abstract okhttp3.HttpUrl getHttpUrlChecked(java.lang.String)
    public abstract okhttp3.internal.connection.StreamAllocation callEngineGetStreamAllocation(okhttp3.Call)
    public abstract void setCallWebSocket(okhttp3.Call)
kotlin.collections.AbstractMutableMap
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21$ExtraSession
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls
androidx.legacy.v4.R$color
com.squareup.picasso.Cache$1:
    public void clear()
    public void clearKeyUri(java.lang.String)
kotlin.reflect.KClassifier
com.facebook.login.LoginClient$Request:
    void <init>(com.facebook.login.LoginBehavior,java.util.Set,com.facebook.login.DefaultAudience,java.lang.String,java.lang.String,java.lang.String)
    void setRerequest(boolean)
    void setDeviceRedirectUriString(java.lang.String)
    void setDeviceAuthTargetUserId(java.lang.String)
    void setAuthType(java.lang.String)
com.twitter.sdk.android.tweetui.TweetRepository$SingleTweetCallback
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
zhuoyuan.li.fluttershareme.R$styleable
androidx.core.widget.TextViewCompat$OreoCallback:
    private static final int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START
androidx.core.net.DatagramSocketWrapper
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions
com.twitter.Regex:
    private static final java.lang.String UNICODE_SPACES
    private static final java.lang.String LATIN_ACCENTS_CHARS
    private static final java.lang.String CYRILLIC_CHARS
    private static final java.lang.String HASHTAG_LETTERS_AND_MARKS
    private static final java.lang.String HASHTAG_NUMERALS
    private static final java.lang.String HASHTAG_SPECIAL_CHARS
    private static final java.lang.String HASHTAG_LETTERS_NUMERALS
    private static final java.lang.String HASHTAG_LETTERS_SET
    private static final java.lang.String HASHTAG_LETTERS_NUMERALS_SET
    private static final java.lang.String URL_VALID_PRECEEDING_CHARS
    private static final java.lang.String URL_VALID_CHARS
    private static final java.lang.String URL_VALID_SUBDOMAIN
    private static final java.lang.String URL_VALID_DOMAIN_NAME
    private static final java.lang.String URL_VALID_UNICODE_CHARS
    private static final java.lang.String URL_PUNYCODE
    private static final java.lang.String SPECIAL_URL_VALID_CCTLD
    private static final java.lang.String URL_VALID_PORT_NUMBER
    private static final java.lang.String URL_VALID_GENERAL_PATH_CHARS
    private static final java.lang.String URL_BALANCED_PARENS
    private static final java.lang.String URL_VALID_PATH_ENDING_CHARS
    private static final java.lang.String URL_VALID_PATH
    private static final java.lang.String URL_VALID_URL_QUERY_CHARS
    private static final java.lang.String URL_VALID_URL_QUERY_ENDING_CHARS
    private static final java.lang.String AT_SIGNS_CHARS
    private static final java.lang.String DOLLAR_SIGN_CHAR
    private static final java.lang.String CASHTAG
    public static final int VALID_HASHTAG_GROUP_BEFORE
    public static final int VALID_HASHTAG_GROUP_HASH
    public static final int VALID_HASHTAG_GROUP_TAG
    public static final int VALID_MENTION_OR_LIST_GROUP_BEFORE
    public static final int VALID_MENTION_OR_LIST_GROUP_AT
    public static final int VALID_MENTION_OR_LIST_GROUP_USERNAME
    public static final int VALID_MENTION_OR_LIST_GROUP_LIST
    public static final int VALID_REPLY_GROUP_USERNAME
    public static final int VALID_URL_GROUP_ALL
    public static final int VALID_URL_GROUP_BEFORE
    public static final int VALID_URL_GROUP_URL
    public static final int VALID_URL_GROUP_PROTOCOL
    public static final int VALID_URL_GROUP_DOMAIN
    public static final int VALID_URL_GROUP_PORT
    public static final int VALID_URL_GROUP_PATH
    public static final int VALID_URL_GROUP_QUERY_STRING
    public static final int VALID_CASHTAG_GROUP_BEFORE
    public static final int VALID_CASHTAG_GROUP_DOLLAR
    public static final int VALID_CASHTAG_GROUP_CASHTAG
com.facebook.share.Sharer$Result
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5
com.facebook.appevents.SessionEventsState:
    public synchronized void accumulatePersistedEvents(java.util.List)
androidx.recyclerview.widget.ItemTouchHelper$Callback$1
androidx.core.view.inputmethod.InputConnectionCompat
kotlin.ULongArray$Iterator
androidx.slidingpanelayout.R$dimen
androidx.core.app.NotificationCompat$Style
androidx.recyclerview.widget.ItemTouchHelper$4
androidx.vectordrawable.graphics.drawable.AndroidResources:
    private void <init>()
    static final int STYLEABLE_VECTOR_DRAWABLE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_AUTO_MIRRORED
    static final int STYLEABLE_VECTOR_DRAWABLE_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT_MODE
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_END
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_OFFSET
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_START
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_FILLTYPE
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_PATH_DATA
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_DRAWABLE
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_ANIMATION
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_NAME
    public static final int STYLEABLE_ANIMATOR_INTERPOLATOR
    public static final int STYLEABLE_ANIMATOR_DURATION
    public static final int STYLEABLE_ANIMATOR_START_OFFSET
    public static final int STYLEABLE_ANIMATOR_REPEAT_COUNT
    public static final int STYLEABLE_ANIMATOR_REPEAT_MODE
    public static final int STYLEABLE_ANIMATOR_VALUE_FROM
    public static final int STYLEABLE_ANIMATOR_VALUE_TO
    public static final int STYLEABLE_ANIMATOR_VALUE_TYPE
    public static final int STYLEABLE_ANIMATOR_SET_ORDERING
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_FROM
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TO
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TYPE
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_PROPERTY_NAME
    public static final int STYLEABLE_KEYFRAME_VALUE
    public static final int STYLEABLE_KEYFRAME_INTERPOLATOR
    public static final int STYLEABLE_KEYFRAME_VALUE_TYPE
    public static final int STYLEABLE_KEYFRAME_FRACTION
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PATH_DATA
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_X_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_Y_NAME
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_PATH_DATA
    public static final int FAST_OUT_LINEAR_IN
    public static final int FAST_OUT_SLOW_IN
    public static final int LINEAR_OUT_SLOW_IN
com.facebook.share.ShareApi$9
okhttp3.Headers:
    public static okhttp3.Headers of(java.util.Map)
    public java.util.Set names()
    public java.util.Map toMultimap()
androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy
kotlin.jvm.JvmClassMappingKt
androidx.browser.customtabs.CustomTabsServiceConnection$1
com.twitter.sdk.android.core.models.Media:
    public void <init>(long,java.lang.String,long,com.twitter.sdk.android.core.models.Image)
    public final long mediaId
    public final long size
    public final com.twitter.sdk.android.core.models.Image image
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6
androidx.core.R$layout
okhttp3.internal.cache.DiskLruCache
androidx.browser.R$id
androidx.lifecycle.Transformations$2
kotlin.BuilderInference
kotlin.jdk7.AutoCloseableKt
kotlin.LazyKt__LazyKt
kotlin.HashCodeKt
androidx.core.os.EnvironmentCompat
androidx.recyclerview.widget.RecyclerView$5
kotlinx.android.extensions.ContainerOptions
kotlin.math.MathKt__MathJVMKt
okhttp3.internal.http.HttpStream:
    public static final int DISCARD_STREAM_TIMEOUT_MILLIS
androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo
io.flutter.embedding.engine.systemchannels.NavigationChannel:
    public void pushRoute(java.lang.String)
    public void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
    private static final java.lang.String TAG
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal
io.flutter.embedding.engine.FlutterEnginePluginRegistry$DefaultFlutterAssets:
    public java.lang.String getAssetFilePathByName(java.lang.String)
    public java.lang.String getAssetFilePathByName(java.lang.String,java.lang.String)
    public java.lang.String getAssetFilePathBySubpath(java.lang.String)
    public java.lang.String getAssetFilePathBySubpath(java.lang.String,java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1
androidx.legacy.coreui.R$string
com.twitter.sdk.android.tweetui.internal.util.HtmlEntities$EntityMap
com.facebook.internal.CollectionMapper
androidx.appcompat.app.ToolbarActionBar$1
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1
com.twitter.sdk.android.tweetui.R$layout:
    private void <init>()
com.example.connectivity.R
androidx.recyclerview.widget.LinearSnapHelper
androidx.vectordrawable.R$styleable
com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    private static final long serialVersionUID
androidx.appcompat.view.ContextThemeWrapper:
    public void <init>()
    public void applyOverrideConfiguration(android.content.res.Configuration)
    public int getThemeResId()
io.flutter.plugin.common.BasicMessageChannel:
    static void resizeChannelBuffer(io.flutter.plugin.common.BinaryMessenger,java.lang.String,int)
    public void resizeChannelBuffer(int)
    private static final java.lang.String TAG
    public static final java.lang.String CHANNEL_BUFFERS_CHANNEL
androidx.drawerlayout.R$id
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl:
    public com.google.gson.JsonElement serialize(java.lang.Object)
    public com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type)
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1
androidx.recyclerview.widget.AsyncListUtil$DataCallback
kotlin.SafePublicationLazyImpl$Companion
bolts.Task$8
kotlin.properties.ObservableProperty
kotlin.jvm.internal.StringCompanionObject
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl
com.google.zxing.oned.rss.FinderPattern
com.google.zxing.multi.qrcode.QRCodeMultiReader$1
kotlin.collections.MapsKt__MapsJVMKt
androidx.recyclerview.widget.AdapterListUpdateCallback
kotlin.PreconditionsKt__PreconditionsKt
kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction2Migration
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
kotlin.jvm.internal.markers.KMutableCollection
kotlin.internal.InlineOnly
com.twitter.sdk.android.core.TwitterSession:
    public long getUserId()
    public java.lang.String getUserName()
    public static final long UNKNOWN_USER_ID
    public static final java.lang.String UNKNOWN_USER_NAME
com.facebook.AccessToken$1
kotlin.coroutines.jvm.internal.DebugMetadataKt
androidx.collection.SparseArrayCompat:
    public void removeAt(int)
    public void removeAtRange(int,int)
    public void putAll(androidx.collection.SparseArrayCompat)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfValue(java.lang.Object)
    public boolean containsKey(int)
    public boolean containsValue(java.lang.Object)
kotlin.reflect.KTypeProjection
androidx.appcompat.R$id:
    private void <init>()
kotlin.comparisons.ComparisonsKt
androidx.recyclerview.widget.AsyncListDiffer$1
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1
com.squareup.picasso.Picasso:
    public static void setSingletonInstance(com.squareup.picasso.Picasso)
    public void cancelRequest(android.widget.RemoteViews,int)
    public void cancelTag(java.lang.Object)
    public void pauseTag(java.lang.Object)
    public void resumeTag(java.lang.Object)
    public com.squareup.picasso.RequestCreator load(java.io.File)
    public com.squareup.picasso.RequestCreator load(int)
    public void invalidate(android.net.Uri)
    public void invalidate(java.lang.String)
    public void invalidate(java.io.File)
    public boolean isDebugging()
    public void setDebugging(boolean)
    public void setIndicatorsEnabled(boolean)
    public boolean areIndicatorsEnabled()
    public void setLoggingEnabled(boolean)
    public boolean isLoggingEnabled()
    public com.squareup.picasso.StatsSnapshot getSnapshot()
    public void shutdown()
    static final java.lang.String TAG
com.twitter.sdk.android.tweetui.TweetTimelineListAdapter$ReplaceTweetCallback
com.facebook.internal.AttributionIdentifiers:
    public static com.facebook.internal.AttributionIdentifiers getCachedIdentifiers()
    private static final java.lang.String ATTRIBUTION_ID_CONTENT_PROVIDER
    private static final java.lang.String ATTRIBUTION_ID_CONTENT_PROVIDER_WAKIZASHI
    private static final java.lang.String ATTRIBUTION_ID_COLUMN_NAME
    private static final java.lang.String ANDROID_ID_COLUMN_NAME
    private static final java.lang.String LIMIT_TRACKING_COLUMN_NAME
    private static final int CONNECTION_RESULT_SUCCESS
    private static final long IDENTIFIER_REFRESH_INTERVAL_MILLIS
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
    public void <init>()
kotlin.Metadata
kotlin.collections.UIntIterator
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21)
androidx.lifecycle.ComputableLiveData$2
io.flutter.plugins.connectivity.R$styleable
org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
zhuoyuan.li.fluttershareme.R
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1
androidx.core.util.DebugUtils:
    private void <init>()
androidx.core.app.NotificationCompat
com.twitter.sdk.android.tweetui.FilterTimelineDelegate$TimelineFilterCallback
com.facebook.internal.BundleJSONConverter$7:
    public void setOnJSON(org.json.JSONObject,java.lang.String,java.lang.Object)
kotlin.time.AbstractLongClock
kotlin.ranges.IntProgression
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler:
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Looper)
    public void handleMessage(android.os.Message)
    boolean mRegistered
    final synthetic android.support.v4.media.session.MediaControllerCompat$Callback this$0
    private static final int MSG_EVENT
    private static final int MSG_UPDATE_PLAYBACK_STATE
    private static final int MSG_UPDATE_METADATA
    private static final int MSG_UPDATE_VOLUME
    private static final int MSG_UPDATE_QUEUE
    private static final int MSG_UPDATE_QUEUE_TITLE
    private static final int MSG_UPDATE_EXTRAS
    private static final int MSG_DESTROYED
    private static final int MSG_UPDATE_REPEAT_MODE
    private static final int MSG_UPDATE_CAPTIONING_ENABLED
    private static final int MSG_UPDATE_SHUFFLE_MODE
    private static final int MSG_SESSION_READY
com.facebook.core.R$id
io.flutter.embedding.engine.loader.FlutterLoader$1
kotlin.ranges.LongProgressionIterator
com.facebook.share.model.ShareVideo$Builder:
    public synthetic bridge com.facebook.share.model.ShareMedia$Builder readFrom(com.facebook.share.model.ShareMedia)
    public synthetic bridge com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
    public synthetic bridge java.lang.Object build()
com.twitter.sdk.android.tweetui.TwitterListTimeline$Builder
com.facebook.share.internal.VideoUploader$UploadWorkItemBase$1
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager
okhttp3.internal.cache.DiskLruCache$4
com.facebook.share.R$style
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding:
    public io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
    public io.flutter.view.TextureRegistry getTextureRegistry()
    public io.flutter.plugin.platform.PlatformViewRegistry getPlatformViewRegistry()
    public io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets getFlutterAssets()
okio.GzipSource:
    private static final byte FHCRC
    private static final byte FEXTRA
    private static final byte FNAME
    private static final byte FCOMMENT
    private static final byte SECTION_HEADER
    private static final byte SECTION_BODY
    private static final byte SECTION_TRAILER
    private static final byte SECTION_DONE
kotlin.collections.UCollectionsKt
com.google.zxing.aztec.detector.Detector$Point
io.flutter.embedding.android.FlutterActivityLaunchConfigs
kotlin.jvm.functions.Function8
com.facebook.share.widget.AppInviteDialog$Result
android.support.v4.media.session.PlaybackStateCompatApi21:
    public static java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)
    private void <init>()
androidx.collection.LongSparseArray:
    public void remove(long)
    public void removeAt(int)
    public void putAll(androidx.collection.LongSparseArray)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfKey(long)
    public int indexOfValue(java.lang.Object)
    public boolean containsKey(long)
    public boolean containsValue(java.lang.Object)
    public void clear()
androidx.recyclerview.widget.OrientationHelper$2:
    public void offsetChild(android.view.View,int)
androidx.media.MediaSessionManagerImplApi21
kotlin.KotlinNullPointerException
androidx.drawerlayout.widget.DrawerLayout$DrawerListener
androidx.core.view.NestedScrollingChild2:
    public abstract boolean startNestedScroll(int,int)
    public abstract void stopNestedScroll(int)
    public abstract boolean hasNestedScrollingParent(int)
    public abstract boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public abstract boolean dispatchNestedPreScroll(int,int,int[],int[],int)
kotlin.collections.MovingSubList
androidx.annotation.InterpolatorRes
com.facebook.share.model.ShareMessengerGenericTemplateContent$Builder
androidx.core.app.RemoteInput
androidx.core.view.ActionProvider$SubUiVisibilityListener:
    public abstract void onSubUiVisibilityChanged(boolean)
androidx.core.app.NotificationCompatBuilder
kotlin.collections.DoubleIterator
androidx.appcompat.view.menu.MenuAdapter:
    public boolean getForceShowIcon()
androidx.annotation.RestrictTo
com.twitter.sdk.android.core.internal.TwitterSessionVerifier:
    void <init>(com.twitter.sdk.android.core.internal.TwitterSessionVerifier$AccountServiceProvider,com.twitter.sdk.android.core.internal.scribe.DefaultScribeClient)
    private void scribeVerifySession()
    public void verifySession(com.twitter.sdk.android.core.TwitterSession)
    public synthetic bridge void verifySession(com.twitter.sdk.android.core.Session)
    static final java.lang.String SCRIBE_CLIENT
    static final java.lang.String SCRIBE_PAGE
    static final java.lang.String SCRIBE_SECTION
    static final java.lang.String SCRIBE_COMPONENT
    static final java.lang.String SCRIBE_ELEMENT
    static final java.lang.String SCRIBE_ACTION
androidx.appcompat.R$drawable:
    private void <init>()
android.support.v4.media.MediaMetadataCompat$TextKey
okhttp3.ResponseBody:
    public static okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
    public static okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
    public final byte[] bytes()
    public final java.lang.String string()
okhttp3.internal.http.Http1xStream:
    public boolean isClosed()
    private static final int STATE_IDLE
    private static final int STATE_OPEN_REQUEST_BODY
    private static final int STATE_WRITING_REQUEST_BODY
    private static final int STATE_READ_RESPONSE_HEADERS
    private static final int STATE_OPEN_RESPONSE_BODY
    private static final int STATE_READING_RESPONSE_BODY
    private static final int STATE_CLOSED
bolts.Task$TaskCompletionSource
android.support.v4.media.MediaBrowserCompatApi23$ItemCallback
androidx.legacy.v4.R$integer
androidx.interpolator.R
com.iyaffle.launchreview.R$dimen
androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsUrlType
kotlin.time.DurationKt
kotlin.text.UStringsKt
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    int[] mCachedThemeAttrs
kotlin.jvm.internal.DefaultConstructorMarker:
    private void <init>()
com.facebook.internal.FetchedAppSettingsManager:
    public static void getAppSettingsAsync(com.facebook.internal.FetchedAppSettingsManager$FetchedAppSettingsCallback)
    public static void setIsUnityInit(boolean)
    private static final java.lang.String APP_SETTINGS_PREFS_STORE
    private static final java.lang.String APP_SETTINGS_PREFS_KEY_FORMAT
    private static final java.lang.String APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING
    private static final java.lang.String APP_SETTING_NUX_CONTENT
    private static final java.lang.String APP_SETTING_NUX_ENABLED
    private static final java.lang.String APP_SETTING_DIALOG_CONFIGS
    private static final java.lang.String APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES
    private static final java.lang.String APP_SETTING_APP_EVENTS_SESSION_TIMEOUT
    private static final java.lang.String APP_SETTING_APP_EVENTS_FEATURE_BITMASK
    private static final java.lang.String APP_SETTING_APP_EVENTS_EVENT_BINDINGS
    private static final java.lang.String APP_SETTING_RESTRICTIVE_EVENT_FILTER_FIELD
    private static final int AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD
    private static final int IAP_AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD
    private static final int CODELESS_EVENTS_ENABLED_BITMASK_FIELD
    private static final int TRACK_UNINSTALL_ENABLED_BITMASK_FIELD
    private static final java.lang.String APP_SETTING_SMART_LOGIN_OPTIONS
    private static final java.lang.String SMART_LOGIN_BOOKMARK_ICON_URL
    private static final java.lang.String SMART_LOGIN_MENU_ICON_URL
    private static final java.lang.String SDK_UPDATE_MESSAGE
    private static final java.lang.String APP_SETTING_APP_EVENTS_AAM_RULE
    private static final java.lang.String APPLICATION_FIELDS
kotlin.jvm.internal.FloatSpreadBuilder
kotlin.coroutines.experimental.CoroutineContext$Key
androidx.browser.customtabs.CustomTabsClient$2$3
androidx.asynclayoutinflater.R$drawable
kotlin.jvm.internal.PackageReference
android.support.v4.os.IResultReceiver$Stub$Proxy:
    public java.lang.String getInterfaceDescriptor()
com.google.zxing.FormatException:
    private void <init>(java.lang.Throwable)
    public static com.google.zxing.FormatException getFormatInstance(java.lang.Throwable)
kotlin.TypeAliasesKt
com.facebook.share.model.ShareMessengerMediaTemplateContent$Builder
kotlin.reflect.KProperty$Accessor
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt
com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters:
    private static final java.lang.String VERSION
    private static final java.lang.String SIGNATURE_METHOD
com.twitter.sdk.android.core.internal.scribe.FileRollOverManager:
    public abstract void scheduleTimeBasedRollOverIfNeeded()
androidx.appcompat.view.SupportMenuInflater:
    static final java.lang.String LOG_TAG
    private static final java.lang.String XML_MENU
    private static final java.lang.String XML_GROUP
    private static final java.lang.String XML_ITEM
    static final int NO_ID
androidx.drawerlayout.R$drawable
kotlin.reflect.KMutableProperty0$Setter
androidx.browser.customtabs.CustomTabsService$Result
androidx.appcompat.widget.TintTypedArray:
    public android.graphics.drawable.Drawable getDrawableIfKnown(int)
    public int length()
    public int getIndexCount()
    public int getIndex(int)
    public android.content.res.Resources getResources()
    public java.lang.String getNonResourceString(int)
    public float getDimension(int,float)
    public int getLayoutDimension(int,java.lang.String)
    public float getFraction(int,int,int,float)
    public boolean getValue(int,android.util.TypedValue)
    public int getType(int)
    public android.util.TypedValue peekValue(int)
    public java.lang.String getPositionDescription()
    public int getChangingConfigurations()
androidx.browser.customtabs.CustomTabsClient
com.google.zxing.pdf417.decoder.DecodedBitStreamParser
com.facebook.internal.Utility:
    public void <init>()
    public static int[] intersectRanges(int[],int[])
    public static boolean isSubset(java.util.Collection,java.util.Collection)
    public static varargs java.util.ArrayList arrayList(java.lang.Object[])
    public static varargs java.util.HashSet hashSet(java.lang.Object[])
    public static java.lang.String sha1hash(java.lang.String)
    public static java.lang.String sha256hash(byte[])
    public static void putCommaSeparatedStringList(android.os.Bundle,java.lang.String,java.util.List)
    static java.util.Map convertJSONObjectToHashMap(org.json.JSONObject)
    public static boolean stringsEqualOrEmpty(java.lang.String,java.lang.String)
    public static boolean hasSameId(org.json.JSONObject,org.json.JSONObject)
    public static java.lang.String safeGetStringFromResponse(org.json.JSONObject,java.lang.String)
    public static org.json.JSONObject tryGetJSONObjectFromResponse(org.json.JSONObject,java.lang.String)
    public static org.json.JSONArray tryGetJSONArrayFromResponse(org.json.JSONObject,java.lang.String)
    public static void clearCaches(android.content.Context)
    public static java.util.List filter(java.util.List,com.facebook.internal.Utility$Predicate)
    static final java.lang.String LOG_TAG
    private static final java.lang.String HASH_ALGORITHM_MD5
    private static final java.lang.String HASH_ALGORITHM_SHA1
    private static final java.lang.String HASH_ALGORITHM_SHA256
    private static final java.lang.String URL_SCHEME
    private static final java.lang.String EXTRA_APP_EVENTS_INFO_FORMAT_VERSION
    private static final java.lang.String UTF8
    public static final int DEFAULT_STREAM_BUFFER_SIZE
    private static final int REFRESH_TIME_FOR_EXTENDED_DEVICE_INFO_MILLIS
    private static final java.lang.String noCarrierConstant
    private static final java.lang.String ARC_DEVICE_PATTERN
androidx.legacy.coreutils.R$integer
kotlin.coroutines.AbstractCoroutineContextElement
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1
com.facebook.common.R$dimen
com.twitter.sdk.android.core.identity.TwitterAuthClient$AuthStateLazyHolder
com.twitter.sdk.android.tweetui.TimelineCursor
com.google.zxing.aztec.AztecReader
android.support.v4.media.MediaDescriptionCompatApi23:
    private void <init>()
androidx.appcompat.view.menu.MenuDialogHelper
com.appleeducate.getversion.BuildConfig
kotlin.collections.MapWithDefault
androidx.coordinatorlayout.R$layout
androidx.customview.R
okhttp3.internal.framed.Settings:
    int getUploadBandwidth(int)
    int getDownloadBandwidth(int)
    boolean getEnablePush(boolean)
    int getRoundTripTime(int)
    int getCurrentCwnd(int)
    int getDownloadRetransRate(int)
    int getMaxHeaderListSize(int)
    int getClientCertificateVectorSize(int)
    boolean isFlowControlDisabled()
    static final int DEFAULT_INITIAL_WINDOW_SIZE
    static final int FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS
    static final int PERSIST_VALUE
    static final int PERSISTED
    static final int UPLOAD_BANDWIDTH
    static final int HEADER_TABLE_SIZE
    static final int DOWNLOAD_BANDWIDTH
    static final int ENABLE_PUSH
    static final int ROUND_TRIP_TIME
    static final int MAX_CONCURRENT_STREAMS
    static final int CURRENT_CWND
    static final int MAX_FRAME_SIZE
    static final int DOWNLOAD_RETRANS_RATE
    static final int MAX_HEADER_LIST_SIZE
    static final int INITIAL_WINDOW_SIZE
    static final int CLIENT_CERTIFICATE_VECTOR_SIZE
    static final int FLOW_CONTROL_OPTIONS
    static final int COUNT
    static final int FLOW_CONTROL_OPTIONS_DISABLED
androidx.core.app.NotificationCompat$Action$SemanticAction
zhuoyuan.li.fluttershareme.R$string
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient
okhttp3.Cache$CacheRequestImpl$1
androidx.vectordrawable.R$dimen
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerWrapper
androidx.annotation.RawRes
kotlin.ranges.CharRange$Companion
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate
io.flutter.plugins.urllauncher.R$layout
androidx.fragment.R$dimen
androidx.annotation.VisibleForTesting
kotlin.Unit
com.twitter.sdk.android.tweetui.CompactTweetView
androidx.core.util.Consumer
androidx.lifecycle.Lifecycling:
    private void <init>()
    private static final int REFLECTIVE_CALLBACK
    private static final int GENERATED_CALLBACK
com.dxc.mtahackathon.R$style
androidx.appcompat.app.TwilightCalculator
com.facebook.FacebookCallback:
    public abstract void onSuccess(java.lang.Object)
    public abstract void onCancel()
    public abstract void onError(com.facebook.FacebookException)
androidx.appcompat.graphics.drawable.StateListDrawable:
    void <init>()
    private void updateStateFromTypedArray(android.content.res.TypedArray)
    private void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable)
    public void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState()
    int getStateCount()
    int[] getStateSet(int)
    android.graphics.drawable.Drawable getStateDrawable(int)
    int getStateDrawableIndex(int[])
    void clearMutated()
    private static final java.lang.String TAG
    private static final boolean DEBUG
com.facebook.share.R$integer
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1
bolts.AndroidExecutors$UIThreadExecutor
androidx.core.view.inputmethod.InputContentInfoCompat
com.twitter.sdk.android.core.TwitterConfig
com.facebook.appevents.internal.SourceApplicationInfo$1
androidx.core.app.NotificationCompat$BigPictureStyle
androidx.legacy.coreutils.R$attr
kotlin.contracts.ConditionalEffect
kotlin.text.StringsKt___StringsKt$chunkedSequence$1
kotlin.LazyThreadSafetyMode
androidx.print.PrintHelper$PrintUriAdapter$1
androidx.browser.R$style
androidx.media.session.MediaButtonReceiver$MediaButtonConnectionCallback
com.google.gson.TypeAdapter:
    public final void toJson(java.io.Writer,java.lang.Object)
    public final java.lang.String toJson(java.lang.Object)
    public final java.lang.Object fromJson(java.io.Reader)
    public final java.lang.Object fromJson(java.lang.String)
    public final java.lang.Object fromJsonTree(com.google.gson.JsonElement)
androidx.core.app.NotificationCompat$BigTextStyle
com.google.zxing.client.result.ExpandedProductResultParser
com.facebook.UserSettingsManager:
    public static void setAutoInitEnabled(boolean)
    public static void setAutoLogAppEventsEnabled(boolean)
    public static void setAdvertiserIDCollectionEnabled(boolean)
    private static final java.lang.String EVENTS_CODELESS_SETUP_ENABLED
    private static final long TIMEOUT_7D
    private static final java.lang.String ADVERTISER_ID_KEY
    private static final java.lang.String APPLICATION_FIELDS
    private static final java.lang.String USER_SETTINGS
    private static final java.lang.String USER_SETTINGS_BITMASK
    private static final java.lang.String LAST_TIMESTAMP
    private static final java.lang.String VALUE
    private static final java.lang.String AUTOLOG_APPEVENT_NOT_SET_WARNING
    private static final java.lang.String ADVERTISERID_COLLECTION_NOT_SET_WARNING
    private static final java.lang.String ADVERTISERID_COLLECTION_FALSE_WARNING
kotlin.jvm.internal.CharSpreadBuilder
androidx.core.app.ActivityCompat$PermissionCompatDelegate:
    public abstract boolean requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl
com.facebook.appevents.codeless.internal.UnityReflection:
    private static final java.lang.String UNITY_PLAYER_CLASS
    private static final java.lang.String UNITY_SEND_MESSAGE_METHOD
    private static final java.lang.String FB_UNITY_GAME_OBJECT
    private static final java.lang.String CAPTURE_VIEW_HIERARCHY_METHOD
    private static final java.lang.String EVENT_MAPPING_METHOD
androidx.annotation.AnyThread
androidx.browser.R
kotlin.jvm.Volatile
kotlin.time.AdjustedClockMark
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback
com.twitter.sdk.android.tweetui.TweetRepository$MultiTweetsCallback
androidx.appcompat.widget.AppCompatTextHelper:
    private static final int SANS
    private static final int SERIF
    private static final int MONOSPACE
androidx.core.widget.ImageViewCompat:
    private void <init>()
bolts.Continuation
com.google.zxing.pdf417.encoder.BarcodeRow:
    void set(int,byte)
com.dxc.mtahackathon.R$drawable
com.facebook.common.R$styleable
androidx.annotation.RestrictTo$Scope
com.google.zxing.aztec.encoder.AztecCode:
    public boolean isCompact()
    public int getSize()
    public int getLayers()
    public int getCodeWords()
androidx.core.widget.ContentLoadingProgressBar
com.facebook.appevents.codeless.internal.ViewHierarchy:
    public static void updateAppearanceOfView(android.view.View,org.json.JSONObject,float)
    public static boolean isRCTTextView(android.view.View)
    public static boolean isRCTViewGroup(android.view.View)
    private static final java.lang.String GET_ACCESSIBILITY_METHOD
    private static final java.lang.String ID_KEY
    private static final java.lang.String CLASS_NAME_KEY
    private static final java.lang.String CLASS_TYPE_BITMASK_KEY
    private static final java.lang.String TEXT_KEY
    private static final java.lang.String DESC_KEY
    private static final java.lang.String DIMENSION_KEY
    private static final java.lang.String IS_USER_INPUT_KEY
    private static final java.lang.String TAG_KEY
    private static final java.lang.String CHILDREN_VIEW_KEY
    private static final java.lang.String HINT_KEY
    private static final java.lang.String DIMENSION_TOP_KEY
    private static final java.lang.String DIMENSION_LEFT_KEY
    private static final java.lang.String DIMENSION_WIDTH_KEY
    private static final java.lang.String DIMENSION_HEIGHT_KEY
    private static final java.lang.String DIMENSION_SCROLL_X_KEY
    private static final java.lang.String DIMENSION_SCROLL_Y_KEY
    private static final java.lang.String DIMENSION_VISIBILITY_KEY
    private static final java.lang.String TEXT_SIZE
    private static final java.lang.String TEXT_IS_BOLD
    private static final java.lang.String TEXT_IS_ITALIC
    private static final java.lang.String TEXT_STYLE
    private static final java.lang.String ICON_BITMAP
    private static final java.lang.String CLASS_RCTROOTVIEW
    private static final java.lang.String CLASS_RCTTEXTVIEW
    private static final java.lang.String CLASS_RCTVIEWGROUP
    private static final java.lang.String CLASS_TOUCHTARGETHELPER
    private static final java.lang.String METHOD_FIND_TOUCHTARGET_VIEW
    private static final int TEXTVIEW_BITMASK
    private static final int IMAGEVIEW_BITMASK
    private static final int BUTTON_BITMASK
    private static final int CLICKABLE_VIEW_BITMASK
    private static final int REACT_NATIVE_BUTTON_BITMASK
    private static final int ADAPTER_VIEW_ITEM_BITMASK
    private static final int LABEL_BITMASK
    private static final int INPUT_BITMASK
    private static final int PICKER_BITMASK
    private static final int SWITCH_BITMASK
    private static final int RADIO_GROUP_BITMASK
    private static final int CHECKBOX_BITMASK
    private static final int RATINGBAR_BITMASK
    private static final int ICON_MAX_EDGE_LENGTH
com.twitter.sdk.android.core.models.UserBuilder
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
    private static final int FILL_TYPE_WINDING
kotlin.coroutines.experimental.ContinuationInterceptor
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation:
    public void error(java.lang.String,java.lang.String,java.lang.Object)
    public void endOfStream()
com.facebook.share.model.ShareMessengerGenericTemplateElement:
    private void <init>(com.facebook.share.model.ShareMessengerGenericTemplateElement$Builder)
    synthetic void <init>(com.facebook.share.model.ShareMessengerGenericTemplateElement$Builder,com.facebook.share.model.ShareMessengerGenericTemplateElement$1)
    static synthetic com.facebook.share.model.ShareMessengerActionButton access$600(com.facebook.share.model.ShareMessengerGenericTemplateElement)
    static synthetic com.facebook.share.model.ShareMessengerActionButton access$700(com.facebook.share.model.ShareMessengerGenericTemplateElement)
    static synthetic android.net.Uri access$800(com.facebook.share.model.ShareMessengerGenericTemplateElement)
    static synthetic java.lang.String access$900(com.facebook.share.model.ShareMessengerGenericTemplateElement)
    static synthetic java.lang.String access$1000(com.facebook.share.model.ShareMessengerGenericTemplateElement)
androidx.appcompat.widget.TooltipCompatHandler:
    private static final java.lang.String TAG
    private static final long LONG_CLICK_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_SHORT_MS
com.twitter.sdk.android.core.models.Image
com.google.gson.internal.$Gson$Types:
    private void <init>()
androidx.core.app.NotificationCompatJellybean
kotlin.sequences.SubSequence$iterator$1
io.flutter.embedding.android.FlutterFragment$ActivityCallThrough
kotlin.collections.RingBuffer
kotlin.jvm.internal.Ref$ObjectRef
com.twitter.sdk.android.core.OAuthSigning
com.facebook.share.model.ShareMessengerGenericTemplateElement$Builder
androidx.appcompat.graphics.drawable.DrawableContainer:
    public void setEnterFadeDuration(int)
    public void setExitFadeDuration(int)
    public boolean isStateful()
    void setCurrentIndex(int)
    void clearMutated()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean DEFAULT_DITHER
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$StubApi21
androidx.fragment.R$color
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$3
com.facebook.share.ShareApi$1
androidx.core.app.JobIntentService
com.google.zxing.qrcode.decoder.BitMatrixParser
androidx.appcompat.widget.ActivityChooserView$1
kotlin.jvm.internal.CallableReference
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls
androidx.recyclerview.widget.FastScroller$AnimatorUpdater
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2
androidx.recyclerview.widget.BatchingListUpdateCallback
okhttp3.internal.cache.DiskLruCache$Editor$1
com.twitter.sdk.android.core.internal.SessionMonitor:
    public void triggerVerificationIfNecessary()
    protected void verifyAll()
androidx.core.os.HandlerCompat
com.facebook.share.internal.MessageDialogFeature
kotlin.UIntArray
com.twitter.sdk.android.core.internal.oauth.GuestAuthToken:
    public void <init>(java.lang.String,java.lang.String,java.lang.String,long)
    public static final java.lang.String HEADER_GUEST_TOKEN
    private static final long EXPIRES_IN_MS
androidx.media.MediaSessionManager$MediaSessionManagerImpl
com.twitter.sdk.android.core.internal.network.UrlUtils:
    private void <init>()
    public static final java.lang.String UTF8
androidx.browser.customtabs.PostMessageServiceConnection
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5
com.google.zxing.qrcode.QRCodeReader
org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
com.facebook.share.model.ShareMediaContent$Builder
androidx.loader.R$id
android.support.v4.media.session.MediaSessionCompatApi24$Callback
com.facebook.appevents.codeless.internal.SensitiveUserDataUtils:
    public void <init>()
androidx.legacy.coreui.R$id
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1
androidx.fragment.R$attr
com.google.zxing.qrcode.decoder.DataMask$6
kotlin.jvm.functions.Function11
io.flutter.view.FlutterView
kotlin.text.StringsKt__StringNumberConversionsKt
androidx.legacy.v4.R$style
androidx.customview.widget.ViewDragHelper
androidx.cardview.widget.RoundRectDrawableWithShadow:
    private static final float SHADOW_MULTIPLIER
com.twitter.sdk.android.core.internal.oauth.OAuth1aService:
    private static final java.lang.String RESOURCE_OAUTH
    private static final java.lang.String CALLBACK_URL
    private static final java.lang.String PARAM_SCREEN_NAME
    private static final java.lang.String PARAM_USER_ID
androidx.appcompat.view.menu.BaseWrapper:
    public java.lang.Object getWrappedObject()
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding:
    public abstract android.content.ContentProvider getContentProvider()
okhttp3.OkHttpClient$Builder:
    void <init>(okhttp3.OkHttpClient)
    public okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
    public okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
    public okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
    public okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
    public okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector)
    public okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
    void setInternalCache(okhttp3.internal.cache.InternalCache)
    public okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
    public okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)
    public okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)
    public okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
    public okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)
    public okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
    public okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator)
    public okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool)
    public okhttp3.OkHttpClient$Builder followSslRedirects(boolean)
    public okhttp3.OkHttpClient$Builder followRedirects(boolean)
    public okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean)
    public okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)
    public okhttp3.OkHttpClient$Builder protocols(java.util.List)
    public okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)
    public java.util.List interceptors()
    public java.util.List networkInterceptors()
com.facebook.share.model.GameRequestContent$ActionType
kotlin.coroutines.ContinuationInterceptor$Key
kotlin.contracts.ContractBuilder
com.google.zxing.oned.Code128Writer:
    private static final int CODE_START_A
    private static final int CODE_START_B
    private static final int CODE_START_C
    private static final int CODE_CODE_A
    private static final int CODE_CODE_B
    private static final int CODE_CODE_C
    private static final int CODE_STOP
    private static final char ESCAPE_FNC_1
    private static final char ESCAPE_FNC_2
    private static final char ESCAPE_FNC_3
    private static final char ESCAPE_FNC_4
    private static final int CODE_FNC_1
    private static final int CODE_FNC_2
    private static final int CODE_FNC_3
    private static final int CODE_FNC_4_A
    private static final int CODE_FNC_4_B
com.facebook.internal.WebDialog:
    public com.facebook.internal.WebDialog$OnCompleteListener getOnCompleteListener()
    private static final java.lang.String LOG_TAG
    private static final java.lang.String DISPLAY_TOUCH
    private static final int API_EC_DIALOG_CANCEL
    static final boolean DISABLE_SSL_CHECK_FOR_TESTING
    private static final int NO_PADDING_SCREEN_WIDTH
    private static final int MAX_PADDING_SCREEN_WIDTH
    private static final int NO_PADDING_SCREEN_HEIGHT
    private static final int MAX_PADDING_SCREEN_HEIGHT
    private static final double MIN_SCALE_FACTOR
    private static final int BACKGROUND_GRAY
kotlin.text.StringsKt__StringsKt$splitToSequence$2
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1
io.flutter.plugin.common.EventChannel$EventSink:
    public abstract void error(java.lang.String,java.lang.String,java.lang.Object)
    public abstract void endOfStream()
com.twitter.sdk.android.tweetui.TweetLinkClickListener
androidx.customview.R$style
com.twitter.sdk.android.tweetui.TweetUtils$1
androidx.appcompat.widget.LinearLayoutCompat:
    public boolean isBaselineAligned()
    public boolean isMeasureWithLargestChildEnabled()
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int SHOW_DIVIDER_NONE
    public static final int SHOW_DIVIDER_BEGINNING
    public static final int SHOW_DIVIDER_MIDDLE
    public static final int SHOW_DIVIDER_END
    private static final int VERTICAL_GRAVITY_COUNT
    private static final int INDEX_CENTER_VERTICAL
    private static final int INDEX_TOP
    private static final int INDEX_BOTTOM
    private static final int INDEX_FILL
android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData
androidx.recyclerview.widget.RecyclerView$4
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable,int)
    public void addTransition(int,int,android.graphics.drawable.Drawable,boolean)
    void clearMutated()
    public synthetic bridge void addState(int[],android.graphics.drawable.Drawable)
    public synthetic bridge void setExitFadeDuration(int)
    public synthetic bridge void setEnterFadeDuration(int)
    private static final java.lang.String ELEMENT_TRANSITION
    private static final java.lang.String ELEMENT_ITEM
    private static final java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR
    private static final java.lang.String TRANSITION_MISSING_FROM_TO_ID
    private static final java.lang.String ITEM_MISSING_DRAWABLE_ERROR
kotlin.collections.AbstractMutableCollection
com.twitter.sdk.android.core.identity.TwitterLoginButton
com.google.zxing.qrcode.encoder.QRCode:
    public com.google.zxing.qrcode.decoder.Mode getMode()
    public com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getECLevel()
    public com.google.zxing.qrcode.decoder.Version getVersion()
    public int getMaskPattern()
    public static final int NUM_MASK_PATTERNS
androidx.appcompat.app.ActionBarDrawerToggle
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
android.support.v4.media.session.MediaSessionCompatApi24
androidx.cardview.R$styleable:
    private void <init>()
com.facebook.share.internal.LikeActionController$GetEngagementRequestWrapper
androidx.appcompat.app.AlertController$AlertParams$3
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView:
    public void <init>(android.content.Context,android.util.AttributeSet)
kotlin.SuccessOrFailureKt
android.support.v4.media.MediaBrowserCompat$CallbackHandler
com.twitter.sdk.android.tweetcomposer.R$id:
    private void <init>()
kotlin.jvm.JvmStatic
com.facebook.share.internal.LikeActionController$PublishLikeRequestWrapper
androidx.collection.ContainerHelpers:
    private void <init>()
io.flutter.plugins.connectivity.BuildConfig
com.twitter.sdk.android.tweetui.TweetRepository$1
io.flutter.plugins.share.SharePlugin:
    public static void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
    private static final java.lang.String CHANNEL
kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction1Migration
kotlin.sequences.SequencesKt
kotlin.text.MatcherMatchResult
bolts.WebViewAppLinkResolver
androidx.core.R$styleable:
    private void <init>()
androidx.core.view.ViewCompat$ScrollAxis
androidx.annotation.HalfFloat
com.google.zxing.oned.rss.AbstractRSSReader
com.dxc.mtahackathon.R$string
kotlin.collections.UByteIterator
androidx.viewpager.widget.PagerTabStrip
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin:
    public static void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
    private static final java.lang.String CHANNEL_NAME
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$6
com.squareup.picasso.ContactsPhotoRequestHandler$ContactPhotoStreamIcs:
    private void <init>()
com.twitter.sdk.android.tweetui.TweetUi:
    void setTweetRepository(com.twitter.sdk.android.tweetui.TweetRepository)
    void setImageLoader(com.squareup.picasso.Picasso)
    static final java.lang.String LOGTAG
    private static final java.lang.String KIT_SCRIBE_NAME
kotlin.jvm.internal.TypeReference
com.google.zxing.datamatrix.decoder.Version
kotlin.sequences.SequencesKt__SequencesKt$flatten$3
com.google.zxing.client.result.CalendarParsedResult
androidx.annotation.LayoutRes
kotlin.reflect.KCallable
kotlin.KotlinVersion$Companion
androidx.core.provider.FontsContractCompat$4$3
com.google.zxing.qrcode.encoder.Encoder:
    private void <init>()
    public static com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel)
    public static com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String)
    static final java.lang.String DEFAULT_BYTE_MODE_ENCODING
androidx.media.MediaBrowserServiceCompat$3
com.facebook.share.internal.LikeActionController$PublishUnlikeRequestWrapper
androidx.core.graphics.BitmapCompat
androidx.core.provider.SelfDestructiveThread:
    public boolean isRunning()
    public int getGeneration()
    private static final int MSG_INVOKE_RUNNABLE
    private static final int MSG_DESTRUCTION
android.support.v4.media.session.MediaControllerCompatApi21:
    public static java.lang.Object fromToken(android.content.Context,java.lang.Object)
    public static void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler)
    public static void unregisterCallback(java.lang.Object,java.lang.Object)
    public static void setMediaController(android.app.Activity,java.lang.Object)
    public static java.lang.Object getMediaController(android.app.Activity)
    public static java.lang.Object getSessionToken(java.lang.Object)
    public static java.lang.Object getTransportControls(java.lang.Object)
    public static java.lang.Object getPlaybackState(java.lang.Object)
    public static java.lang.Object getMetadata(java.lang.Object)
    public static java.util.List getQueue(java.lang.Object)
    public static java.lang.CharSequence getQueueTitle(java.lang.Object)
    public static android.os.Bundle getExtras(java.lang.Object)
    public static int getRatingType(java.lang.Object)
    public static long getFlags(java.lang.Object)
    public static java.lang.Object getPlaybackInfo(java.lang.Object)
    public static android.app.PendingIntent getSessionActivity(java.lang.Object)
    public static boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent)
    public static void setVolumeTo(java.lang.Object,int,int)
    public static void adjustVolume(java.lang.Object,int,int)
    public static void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver)
    public static java.lang.String getPackageName(java.lang.Object)
    private void <init>()
io.flutter.embedding.engine.plugins.service.ServicePluginBinding:
    public abstract android.app.Service getService()
    public abstract java.lang.Object getLifecycle()
    public abstract void addOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
    public abstract void removeOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
com.google.zxing.pdf417.encoder.PDF417:
    private static final int START_PATTERN
    private static final int STOP_PATTERN
    private static final float PREFERRED_RATIO
    private static final float DEFAULT_MODULE_WIDTH
    private static final float HEIGHT
androidx.fragment.R$string
androidx.appcompat.widget.ContentFrameLayout:
    public void setDecorPadding(int,int,int,int)
com.facebook.share.internal.LikeActionController$7
androidx.vectordrawable.R$style
com.google.zxing.qrcode.decoder.DataMask
androidx.annotation.UiThread
kotlin.text.MatcherMatchResult$groups$1$iterator$1
androidx.appcompat.app.TwilightManager
android.support.v4.media.MediaBrowserCompatApi23$ItemCallbackProxy
kotlin.collections.IntIterator
com.facebook.ProfileTracker
com.facebook.common.R$layout:
    private void <init>()
androidx.appcompat.widget.VectorEnabledTintResources:
    public static void setCompatVectorFromResourcesEnabled(boolean)
    public static final int MAX_SDK_WHERE_REQUIRED
kotlinx.android.parcel.Parceler$DefaultImpls
io.flutter.plugins.urllauncher.R$integer
kotlin.comparisons.ReverseOrderComparator
kotlin.jvm.internal.markers.KMutableSet
com.google.zxing.oned.rss.expanded.RSSExpandedReader
kotlin.jvm.internal.IntSpreadBuilder
com.appleeducate.getversion.R$style
com.twitter.sdk.android.tweetui.TweetTextLinkifier
androidx.core.os.LocaleHelper
android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    private void <init>()
androidx.cursoradapter.widget.ResourceCursorAdapter:
    public void <init>(android.content.Context,int,android.database.Cursor)
    public void <init>(android.content.Context,int,android.database.Cursor,int)
    public void setViewResource(int)
    public void setDropDownViewResource(int)
com.google.zxing.pdf417.decoder.DetectionResultColumn
com.google.zxing.qrcode.encoder.MaskUtil:
    private void <init>()
    private static final int N1
    private static final int N2
    private static final int N3
    private static final int N4
com.facebook.share.ShareApi$11
androidx.media.R$styleable
com.facebook.AccessTokenCache:
    static final java.lang.String CACHED_ACCESS_TOKEN_KEY
kotlin.collections.ArraysKt___ArraysKt$withIndex$3
androidx.arch.core.executor.ArchTaskExecutor:
    public static java.util.concurrent.Executor getMainThreadExecutor()
    public static java.util.concurrent.Executor getIOThreadExecutor()
    public void setDelegate(androidx.arch.core.executor.TaskExecutor)
kotlin.io.OnErrorAction
com.twitter.sdk.android.core.R$string
com.facebook.share.internal.ShareInternalUtility$1
kotlin.jvm.internal.LocalVariableReferencesKt
androidx.appcompat.widget.DecorToolbar:
    public abstract android.view.ViewGroup getViewGroup()
    public abstract android.content.Context getContext()
    public abstract boolean hasExpandedActionView()
    public abstract void collapseActionView()
    public abstract void setTitle(java.lang.CharSequence)
    public abstract java.lang.CharSequence getSubtitle()
    public abstract void setSubtitle(java.lang.CharSequence)
    public abstract void initProgress()
    public abstract void initIndeterminateProgress()
    public abstract boolean hasIcon()
    public abstract boolean hasLogo()
    public abstract void setLogo(android.graphics.drawable.Drawable)
    public abstract boolean canShowOverflowMenu()
    public abstract boolean isOverflowMenuShowing()
    public abstract boolean isOverflowMenuShowPending()
    public abstract boolean showOverflowMenu()
    public abstract boolean hideOverflowMenu()
    public abstract void setMenuPrepared()
    public abstract void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
    public abstract void dismissPopupMenus()
    public abstract int getDisplayOptions()
    public abstract void setDisplayOptions(int)
    public abstract void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
    public abstract boolean hasEmbeddedTabs()
    public abstract boolean isTitleTruncated()
    public abstract void setCollapsible(boolean)
    public abstract void setHomeButtonEnabled(boolean)
    public abstract int getNavigationMode()
    public abstract void setNavigationMode(int)
    public abstract void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public abstract void setDropdownSelectedPosition(int)
    public abstract int getDropdownSelectedPosition()
    public abstract int getDropdownItemCount()
    public abstract void setCustomView(android.view.View)
    public abstract android.view.View getCustomView()
    public abstract void animateToVisibility(int)
    public abstract androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
    public abstract void setNavigationIcon(android.graphics.drawable.Drawable)
    public abstract void setNavigationIcon(int)
    public abstract void setNavigationContentDescription(java.lang.CharSequence)
    public abstract void setNavigationContentDescription(int)
    public abstract void setDefaultNavigationContentDescription(int)
    public abstract void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public abstract void saveHierarchyState(android.util.SparseArray)
    public abstract void restoreHierarchyState(android.util.SparseArray)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract int getHeight()
    public abstract void setVisibility(int)
    public abstract int getVisibility()
    public abstract void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public abstract android.view.Menu getMenu()
androidx.core.os.LocaleListInterface
kotlin.random.URandomKt
kotlin.jvm.internal.LongSpreadBuilder
androidx.core.widget.ContentLoadingProgressBar$2
com.facebook.share.model.ShareContent$Builder:
    public synthetic bridge com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19$1
kotlin.jvm.internal.ArrayIteratorKt
okhttp3.internal.framed.Hpack:
    private void <init>()
    private static final int PREFIX_4_BITS
    private static final int PREFIX_5_BITS
    private static final int PREFIX_6_BITS
    private static final int PREFIX_7_BITS
androidx.appcompat.widget.AppCompatPopupWindow:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.ChildHelper$Bucket
androidx.annotation.BinderThread
kotlin.text.StringsKt___StringsKt$groupingBy$1
com.google.zxing.qrcode.QRCodeWriter:
    public com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int)
    private static final int QUIET_ZONE_SIZE
com.facebook.share.widget.LikeView$HorizontalAlignment
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1
io.flutter.app.FlutterActivityDelegate$ViewFactory
kotlin.sequences.SequencesKt___SequencesKt$minus$3
androidx.recyclerview.widget.PagerSnapHelper$1
androidx.fragment.app.FragmentTabHost$SavedState
io.flutter.embedding.android.FlutterFragment$1
androidx.core.content.pm.ShortcutManagerCompat$1
kotlin.text.StringsKt___StringsKt$windowedSequence$1
com.facebook.AccessTokenTracker$CurrentAccessTokenBroadcastReceiver
androidx.core.app.JobIntentService$CompatWorkItem
androidx.core.text.TextDirectionHeuristicsCompat
bolts.TaskCompletionSource
kotlin.collections.State
com.facebook.login.LoginManager$1
com.facebook.share.internal.LikeDialog$1
com.twitter.sdk.android.core.internal.IdManager:
    public void <init>(android.content.Context)
    void <init>(android.content.Context,com.twitter.sdk.android.core.internal.persistence.PreferenceStore)
    void <init>(android.content.Context,com.twitter.sdk.android.core.internal.persistence.PreferenceStore,com.twitter.sdk.android.core.internal.AdvertisingInfoProvider)
    private java.lang.String formatId(java.lang.String)
    private java.lang.String removeForwardSlashesIn(java.lang.String)
    private java.lang.String createInstallationUUID()
    public java.lang.String getAppIdentifier()
    public java.lang.String getOsVersionString()
    public java.lang.String getOsDisplayVersionString()
    public java.lang.String getOsBuildVersionString()
    public java.lang.String getModelName()
    synchronized com.twitter.sdk.android.core.internal.AdvertisingInfo getAdvertisingInfo()
    public java.lang.Boolean isLimitAdTrackingEnabled()
    private final java.util.concurrent.locks.ReentrantLock installationIdLock
    private final boolean collectHardwareIds
    private final java.lang.String appIdentifier
    private final com.twitter.sdk.android.core.internal.persistence.PreferenceStore preferenceStore
    com.twitter.sdk.android.core.internal.AdvertisingInfoProvider advertisingInfoProvider
    com.twitter.sdk.android.core.internal.AdvertisingInfo advertisingInfo
    boolean fetchedAdvertisingInfo
    static final java.lang.String COLLECT_IDENTIFIERS_ENABLED
    static final java.lang.String ADVERTISING_PREFERENCES
    static final java.lang.String PREFKEY_INSTALLATION_UUID
androidx.asynclayoutinflater.view.AsyncLayoutInflater$BasicInflater
androidx.annotation.Nullable
kotlin.sequences.TakeSequence
androidx.coordinatorlayout.R$styleable
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18
androidx.media.VolumeProviderCompatApi21$1
kotlin.coroutines.experimental.Continuation
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$2
kotlin.random.Random$Default
kotlin.concurrent.LocksKt
kotlin.collections.ArraysKt__ArraysJVMKt
com.twitter.sdk.android.core.internal.scribe.QueueFile:
    void <init>(java.io.RandomAccessFile)
    public synchronized byte[] peek()
    public synchronized void peek(com.twitter.sdk.android.core.internal.scribe.QueueFile$ElementReader)
    public synchronized int size()
    public synchronized void remove()
    public synchronized void clear()
    private static final int INITIAL_LENGTH
    static final int HEADER_LENGTH
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    void <init>(androidx.recyclerview.widget.RecyclerView)
    public void onChanged()
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeInserted(int,int)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
    void triggerUpdateProcessor()
    final synthetic androidx.recyclerview.widget.RecyclerView this$0
androidx.appcompat.app.AlertController$3
kotlin.ULong
com.twitter.sdk.android.core.models.UrlEntity:
    public void <init>(java.lang.String,java.lang.String,java.lang.String,int,int)
    public synthetic bridge int getEnd()
    public synthetic bridge int getStart()
    public final java.lang.String url
    public final java.lang.String expandedUrl
    public final java.lang.String displayUrl
com.google.zxing.client.result.SMTPResultParser
com.facebook.internal.ImageDownloader$1
com.squareup.picasso.UrlConnectionDownloader$ResponseCacheIcs:
    private void <init>()
    static void close(java.lang.Object)
androidx.coordinatorlayout.widget.ViewGroupUtils
kotlin.contracts.Effect
org.intellij.lang.annotations.JdkConstants$TabPlacement
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$7
com.facebook.share.internal.LikeDialog
androidx.recyclerview.widget.ItemTouchUIUtil
kotlin.jvm.internal.ClassReference
io.flutter.embedding.engine.systemchannels.TextInputChannel:
    private static final java.lang.String TAG
com.facebook.GraphRequest$3
com.twitter.sdk.android.core.internal.ExecutorUtils:
    private void <init>()
    public static java.util.concurrent.ExecutorService buildThreadPoolExecutorService(java.lang.String)
    private static final long KEEP_ALIVE
    private static final long DEFAULT_TERMINATION_TIMEOUT
com.twitter.sdk.android.core.internal.scribe.ScribeConfig:
    public static final java.lang.String BASE_URL
    public static final int DEFAULT_MAX_FILES_TO_KEEP
    public static final int DEFAULT_SEND_INTERVAL_SECONDS
com.facebook.share.internal.VideoUploader$UploadContext
androidx.core.internal.package-info
com.twitter.sdk.android.core.TwitterApiException:
    public int getStatusCode()
    public java.lang.String getErrorMessage()
    public com.twitter.sdk.android.core.TwitterRateLimit getTwitterRateLimit()
    public retrofit2.Response getResponse()
    public static final int DEFAULT_ERROR_CODE
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind
androidx.annotation.AttrRes
kotlinx.android.parcel.Parcelize
androidx.core.content.pm.ActivityInfoCompat
org.intellij.lang.annotations.MagicConstant
androidx.core.view.GestureDetectorCompat
kotlin.text.StringsKt___StringsJvmKt
androidx.core.app.Person
kotlin.coroutines.experimental.migration.ContinuationInterceptorMigration
androidx.slidingpanelayout.R$attr
kotlin.internal.PlatformImplementationsKt
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener
androidx.annotation.ArrayRes
androidx.annotation.StyleRes
androidx.core.content.MimeTypeFilter
androidx.core.app.NotificationCompat$NotificationVisibility
com.appleeducate.getversion.R$layout
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode
androidx.recyclerview.widget.MessageThreadUtil$2
com.facebook.share.widget.AppInviteDialog$2
androidx.appcompat.widget.ActivityChooserView
kotlin.coroutines.experimental.migration.ContextMigration
androidx.core.view.VelocityTrackerCompat
kotlin.math.UMathKt
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2
io.flutter.embedding.engine.FlutterEnginePluginRegistry$FlutterEngineServicePluginBinding:
    void <init>(android.app.Service,androidx.lifecycle.Lifecycle)
    public android.app.Service getService()
    public java.lang.Object getLifecycle()
    public void addOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
    public void removeOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
    void onMoveToForeground()
    void onMoveToBackground()
    private final android.app.Service service
    private final io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
    private final java.util.Set onModeChangeListeners
com.google.gson.stream.JsonWriter:
    public com.google.gson.stream.JsonWriter jsonValue(java.lang.String)
    public com.google.gson.stream.JsonWriter value(double)
kotlin.collections.UArraySortingKt
kotlin.Experimental$Level
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback
androidx.recyclerview.widget.SortedList$BatchedCallback
okhttp3.internal.framed.Http2$Writer:
    public synchronized void synReply(boolean,int,java.util.List)
    public synchronized void headers(int,java.util.List)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
androidx.print.PrintHelper$PrintUriAdapter$1$1
androidx.slidingpanelayout.R
kotlin.collections.unsigned.UArraysKt
okhttp3.CipherSuite:
    public java.lang.String javaName()
com.twitter.sdk.android.tweetui.TimelineDelegate
com.facebook.share.widget.JoinAppGroupDialog
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1
androidx.viewpager.R$drawable
bolts.Task$7
bolts.WebViewAppLinkResolver$1
okio.Pipe$PipeSink
androidx.core.R$color
com.twitter.sdk.android.tweetcomposer.R$dimen
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
kotlin.collections.IndexedValue
kotlin.concurrent.ThreadsKt$thread$thread$1
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub
kotlin.UShortArray
kotlin.concurrent.TimersKt$timerTask$1
kotlin.ranges.UIntProgression$Companion
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6
com.iyaffle.launchreview.R$color
com.facebook.internal.CallbackManagerImpl$Callback:
    public abstract boolean onActivityResult(int,android.content.Intent)
androidx.recyclerview.widget.RecyclerView$Recycler:
    public void <init>(androidx.recyclerview.widget.RecyclerView)
    private boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long)
    private void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    private void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    private void invalidateDisplayListInt(android.view.ViewGroup,boolean)
    boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void bindViewToPosition(android.view.View,int)
    android.view.View getViewForPosition(int,boolean)
    void recycleViewInternal(android.view.View)
    void recycleAndClearCachedViews()
    void recycleCachedViewAt(int)
    androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int)
    androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean)
    androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean)
    void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    void offsetPositionRecordsForMove(int,int)
    void offsetPositionRecordsForInsert(int,int)
    void offsetPositionRecordsForRemove(int,int,boolean)
    void viewRangeUpdate(int,int)
    final java.util.ArrayList mAttachedScrap
    final java.util.ArrayList mCachedViews
    private final java.util.List mUnmodifiableAttachedScrap
    private int mRequestedCacheMax
    int mViewCacheMax
    androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool
    private androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension
    final synthetic androidx.recyclerview.widget.RecyclerView this$0
    static final int DEFAULT_CACHE_SIZE
kotlin.collections.SetsKt__SetsKt
com.facebook.CustomTabActivity:
    private static final int CUSTOM_TAB_REDIRECT_REQUEST_CODE
com.facebook.login.LoginManager$LoginLoggerHolder
com.twitter.sdk.android.core.internal.persistence.PersistenceStrategy
io.flutter.embedding.engine.loader.ResourcePaths
kotlin.UInt
androidx.recyclerview.widget.ItemTouchHelper$3
kotlin.text.CharCategory
kotlin.io.FilesKt__FilePathComponentsKt
androidx.appcompat.app.ActionBarDrawerToggle$1
com.appleeducate.getversion.R$attr
androidx.core.text.util.LinkifyCompat$LinkSpec
com.twitter.sdk.android.core.TwitterAuthException:
    private static final long serialVersionUID
kotlin.text.RegexKt
com.twitter.sdk.android.core.models.VideoInfo$Variant:
    public void <init>(long,java.lang.String,java.lang.String)
    public final long bitrate
okhttp3.internal.framed.FramedStream$FramedDataSink:
    private static final long EMIT_BUFFER_SIZE
androidx.core.app.NotificationCompat$WearableExtender
okhttp3.Response$Builder:
    public okhttp3.Response$Builder header(java.lang.String,java.lang.String)
    public okhttp3.Response$Builder removeHeader(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5
kotlin.jvm.functions.Function19
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener:
    public abstract void onChildViewAttachedToWindow(android.view.View)
com.google.zxing.common.HybridBinarizer
androidx.appcompat.app.AppCompatDialog$1
androidx.annotation.BoolRes
okhttp3.internal.framed.Hpack$Reader:
    int maxDynamicTableByteCount()
android.support.v4.media.session.MediaControllerCompat$TransportControlsBase
androidx.lifecycle.AndroidViewModel
com.facebook.internal.BundleJSONConverter$6:
    public void setOnJSON(org.json.JSONObject,java.lang.String,java.lang.Object)
okio.RealBufferedSource:
    public okio.ByteString readByteString()
    public int select(okio.Options)
    public byte[] readByteArray()
    public int read(byte[])
    public void readFully(byte[])
    public int read(byte[],int,int)
    public void readFully(okio.Buffer,long)
    public java.lang.String readUtf8()
    public java.lang.String readUtf8(long)
    public java.lang.String readString(java.nio.charset.Charset)
    public java.lang.String readString(long,java.nio.charset.Charset)
    public java.lang.String readUtf8Line()
    public int readUtf8CodePoint()
    public long readLong()
    public long readLongLe()
    public long readDecimalLong()
    public long indexOf(okio.ByteString)
    public long indexOf(okio.ByteString,long)
    public long indexOfElement(okio.ByteString)
    public long indexOfElement(okio.ByteString,long)
    public boolean rangeEquals(long,okio.ByteString)
    public boolean rangeEquals(long,okio.ByteString,int,int)
com.facebook.share.R
kotlin.coroutines.experimental.CombinedContext
androidx.multidex.MultiDexExtractor$1
androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    void startCreatingLoader()
    boolean isCreatingLoader()
    void finishCreatingLoader()
    void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo)
    androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)
    void removeLoader(int)
    boolean hasRunningLoaders()
io.flutter.plugins.deviceinfo.DeviceInfoPlugin:
    public static void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
androidx.core.app.NotificationBuilderWithBuilderAccessor
com.iyaffle.launchreview.BuildConfig
com.facebook.share.internal.NativeDialogParameters:
    public void <init>()
kotlin.collections.IndexingIterable
io.flutter.app.FlutterActivityDelegate$1
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt
com.facebook.appevents.PersistedEvents:
    private static final long serialVersionUID
androidx.recyclerview.widget.ViewBoundsCheck$Callback:
    public abstract int getChildCount()
    public abstract android.view.View getParent()
androidx.appcompat.widget.ActionMenuView:
    public boolean isOverflowReserved()
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowPending()
    private static final java.lang.String TAG
    static final int MIN_CELL_SIZE
    static final int GENERATED_ITEM_PADDING
androidx.annotation.FontRes
okio.BufferedSource:
    public abstract boolean request(long)
    public abstract long readLong()
    public abstract long readLongLe()
    public abstract long readDecimalLong()
    public abstract okio.ByteString readByteString()
    public abstract int select(okio.Options)
    public abstract byte[] readByteArray()
    public abstract int read(byte[])
    public abstract void readFully(byte[])
    public abstract int read(byte[],int,int)
    public abstract void readFully(okio.Buffer,long)
    public abstract java.lang.String readUtf8()
    public abstract java.lang.String readUtf8(long)
    public abstract java.lang.String readUtf8Line()
    public abstract int readUtf8CodePoint()
    public abstract java.lang.String readString(java.nio.charset.Charset)
    public abstract java.lang.String readString(long,java.nio.charset.Charset)
    public abstract long indexOf(byte,long)
    public abstract long indexOf(okio.ByteString)
    public abstract long indexOf(okio.ByteString,long)
    public abstract long indexOfElement(okio.ByteString)
    public abstract long indexOfElement(okio.ByteString,long)
    public abstract boolean rangeEquals(long,okio.ByteString)
    public abstract boolean rangeEquals(long,okio.ByteString,int,int)
com.twitter.sdk.android.tweetui.GalleryScribeClientImpl:
    static final java.lang.String TFW_CLIENT_EVENT_PAGE
    static final java.lang.String TFW_CLIENT_EVENT_SECTION
    static final java.lang.String SCRIBE_SHOW_ACTION
    static final java.lang.String SCRIBE_IMPRESSION_ACTION
    static final java.lang.String SCRIBE_NAVIGATE_ACTION
    static final java.lang.String SCRIBE_DISMISS_ACTION
com.google.zxing.oned.Code128Reader:
    public void <init>()
    private static int[] findStartPattern(com.google.zxing.common.BitArray)
    private static int decodeCode(com.google.zxing.common.BitArray,int[],int)
    public com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
    private static final float MAX_AVG_VARIANCE
    private static final float MAX_INDIVIDUAL_VARIANCE
    private static final int CODE_SHIFT
    private static final int CODE_CODE_C
    private static final int CODE_CODE_B
    private static final int CODE_CODE_A
    private static final int CODE_FNC_1
    private static final int CODE_FNC_2
    private static final int CODE_FNC_3
    private static final int CODE_FNC_4_A
    private static final int CODE_FNC_4_B
    private static final int CODE_START_A
    private static final int CODE_START_B
    private static final int CODE_START_C
    private static final int CODE_STOP
kotlin.random.Random
androidx.slidingpanelayout.R$string
androidx.core.os.LocaleListCompat$LocaleListCompatApi24Impl
android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl
kotlin.UnsafeLazyImpl
com.facebook.LoginStatusCallback
androidx.core.app.AppLaunchChecker
kotlin.comparisons.ReversedComparator
com.google.zxing.oned.Code93Reader:
    public void <init>()
    private int[] findAsteriskPattern(com.google.zxing.common.BitArray)
    private static int toPattern(int[])
    private static char patternToChar(int)
    private static java.lang.String decodeExtended(java.lang.CharSequence)
    private static void checkChecksums(java.lang.CharSequence)
    private static void checkOneChecksum(java.lang.CharSequence,int,int)
    public com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
    private final java.lang.StringBuilder decodeRowResult
    private final int[] counters
    static final java.lang.String ALPHABET_STRING
com.twitter.sdk.android.tweetui.TimelineFilter
androidx.media.AudioAttributesCompat$AttributeContentType
androidx.recyclerview.widget.ViewInfoStore:
    void <init>()
    private androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    final androidx.collection.ArrayMap mLayoutHolderMap
    final androidx.collection.LongSparseArray mOldChangedHolders
    private static final boolean DEBUG
kotlin.UShort
com.facebook.common.R$drawable:
    private void <init>()
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder
com.example.connectivity.R$attr
kotlin.jvm.functions.Function7
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
kotlin.coroutines.experimental.migration.ExperimentalContinuationInterceptorMigration
com.facebook.share.widget.LikeView$AuxiliaryViewPosition
com.facebook.share.internal.VideoUploader$1
com.twitter.sdk.android.core.R$id:
    private void <init>()
androidx.recyclerview.widget.LinearSmoothScroller
com.twitter.sdk.android.core.internal.UserUtils:
    private void <init>()
    public static java.lang.CharSequence formatScreenName(java.lang.CharSequence)
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
androidx.core.text.util.LinkifyCompat$1
com.facebook.share.widget.SendButton
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    public void <init>(android.os.ResultReceiver)
androidx.core.util.Pools
androidx.annotation.MenuRes
com.google.zxing.common.PerspectiveTransform
com.facebook.share.R$anim
com.twitter.sdk.android.core.models.User:
    public void <init>(boolean,java.lang.String,boolean,boolean,java.lang.String,java.lang.String,com.twitter.sdk.android.core.models.UserEntities,int,boolean,int,int,boolean,long,java.lang.String,boolean,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,boolean,com.twitter.sdk.android.core.models.Tweet,int,java.lang.String,java.lang.String,int,boolean,java.util.List,java.lang.String)
    public long getId()
    public final boolean contributorsEnabled
    public final java.lang.String createdAt
    public final boolean defaultProfile
    public final boolean defaultProfileImage
    public final java.lang.String description
    public final java.lang.String email
    public final com.twitter.sdk.android.core.models.UserEntities entities
    public final int favouritesCount
    public final boolean followRequestSent
    public final int followersCount
    public final int friendsCount
    public final boolean geoEnabled
    public final long id
    public final java.lang.String idStr
    public final boolean isTranslator
    public final java.lang.String lang
    public final int listedCount
    public final java.lang.String location
    public final java.lang.String profileBackgroundColor
    public final java.lang.String profileBackgroundImageUrl
    public final java.lang.String profileBackgroundImageUrlHttps
    public final boolean profileBackgroundTile
    public final java.lang.String profileBannerUrl
    public final java.lang.String profileImageUrl
    public final java.lang.String profileLinkColor
    public final java.lang.String profileSidebarBorderColor
    public final java.lang.String profileSidebarFillColor
    public final java.lang.String profileTextColor
    public final boolean profileUseBackgroundImage
    public final boolean protectedUser
    public final boolean showAllInlineMedia
    public final com.twitter.sdk.android.core.models.Tweet status
    public final int statusesCount
    public final java.lang.String timeZone
    public final java.lang.String url
    public final int utcOffset
    public final boolean verified
    public final java.util.List withheldInCountries
    public final java.lang.String withheldScope
    private static final long serialVersionUID
    public static final long INVALID_ID
io.flutter.plugin.platform.PlatformViewRegistry:
    public abstract boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
kotlin.UByteArrayKt
com.facebook.share.internal.LikeActionController$9$1
android.support.v4.media.MediaMetadataCompat$Builder
com.twitter.sdk.android.core.models.SymbolEntity
kotlin.collections.MapsKt__MapWithDefaultKt
com.google.zxing.qrcode.encoder.MatrixUtil:
    private void <init>()
    private static final int VERSION_INFO_POLY
    private static final int TYPE_INFO_POLY
    private static final int TYPE_INFO_MASK_PATTERN
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2
kotlin.ranges.CharProgression$Companion
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2
kotlin.coroutines.EmptyCoroutineContext
com.google.gson.internal.LinkedHashTreeMap$AvlIterator
androidx.lifecycle.ComputableLiveData
com.google.zxing.oned.UPCEANExtension2Support
com.twitter.sdk.android.tweetui.TweetTimelineRecyclerViewAdapter$1
com.facebook.share.internal.CameraEffectJSONUtility$Setter:
    public abstract void setOnArgumentsBuilder(com.facebook.share.model.CameraEffectArguments$Builder,java.lang.String,java.lang.Object)
kotlin.coroutines.jvm.internal.DebugMetadata
androidx.appcompat.app.AppCompatDelegateImpl$6
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
androidx.recyclerview.widget.AsyncListUtil$ViewCallback
kotlin.ranges.ULongProgression$Companion
kotlin.InitializedLazyImpl
com.google.zxing.client.result.ParsedResult
androidx.coordinatorlayout.R$drawable
kotlinx.android.extensions.CacheImplementation$Companion
androidx.recyclerview.widget.SimpleItemAnimator
zhuoyuan.li.fluttershareme.BuildConfig
com.google.gson.FieldAttributes:
    public java.lang.Class getDeclaringClass()
    public java.lang.String getName()
    public java.lang.reflect.Type getDeclaredType()
    public java.lang.Class getDeclaredClass()
    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    public java.util.Collection getAnnotations()
    public boolean hasModifier(int)
    java.lang.Object get(java.lang.Object)
    boolean isSynthetic()
androidx.core.app.JobIntentService$CommandProcessor
com.facebook.share.ShareBuilder
androidx.multidex.MultiDex$V4
androidx.legacy.coreui.R$integer
com.twitter.sdk.android.core.TwitterAuthToken:
    void <init>(java.lang.String,java.lang.String,long)
    public boolean isExpired()
com.facebook.share.widget.AppInviteDialog$NativeHandler
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl
androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    public void <init>()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
    public boolean performAction(int,int,android.os.Bundle)
    public java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
    public static final int HOST_VIEW_ID
com.facebook.share.widget.ShareDialog:
    public static void show(android.app.Activity,com.facebook.share.model.ShareContent)
    public static void show(androidx.fragment.app.Fragment,com.facebook.share.model.ShareContent)
    public static void show(android.app.Fragment,com.facebook.share.model.ShareContent)
    private static void show(com.facebook.internal.FragmentWrapper,com.facebook.share.model.ShareContent)
    public void <init>(androidx.fragment.app.Fragment)
    public void <init>(android.app.Fragment)
    private void <init>(com.facebook.internal.FragmentWrapper)
    void <init>(android.app.Activity,int)
    void <init>(androidx.fragment.app.Fragment,int)
    void <init>(android.app.Fragment,int)
    private void <init>(com.facebook.internal.FragmentWrapper,int)
    public void setShouldFailOnDataError(boolean)
    public boolean canShow(com.facebook.share.model.ShareContent,com.facebook.share.widget.ShareDialog$Mode)
    public void show(com.facebook.share.model.ShareContent,com.facebook.share.widget.ShareDialog$Mode)
    private static final java.lang.String FEED_DIALOG
    public static final java.lang.String WEB_SHARE_DIALOG
    private static final java.lang.String WEB_OG_SHARE_DIALOG
androidx.annotation.AnimatorRes
androidx.appcompat.view.menu.MenuWrapperFactory:
    private void <init>()
    public static android.view.Menu wrapSupportMenu(android.content.Context,androidx.core.internal.view.SupportMenu)
androidx.versionedparcelable.ParcelField
com.example.connectivity.R$color
kotlin.time.AbstractDoubleClock$DoubleClockMark
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback
com.facebook.FacebookSdk:
    public static synchronized void sdkInitialize(android.content.Context,int)
    public static synchronized void sdkInitialize(android.content.Context,int,com.facebook.FacebookSdk$InitializeCallback)
    public static java.util.Set getLoggingBehaviors()
    public static void addLoggingBehavior(com.facebook.LoggingBehavior)
    public static void removeLoggingBehavior(com.facebook.LoggingBehavior)
    public static void clearLoggingBehaviors()
    public static void setIsDebugEnabled(boolean)
    private static void updateGraphDebugBehavior()
    public static void setLegacyTokenUpgradeSupported(boolean)
    public static void setExecutor(java.util.concurrent.Executor)
    public static void setFacebookDomain(java.lang.String)
    public static void setGraphApiVersion(java.lang.String)
    public static void setLimitEventAndDataUsage(android.content.Context,boolean)
    public static void setOnProgressThreshold(long)
    public static java.lang.String getApplicationSignature(android.content.Context)
    public static void setApplicationId(java.lang.String)
    public static void setApplicationName(java.lang.String)
    public static void setClientToken(java.lang.String)
    public static void setAutoInitEnabled(boolean)
    public static void setAutoLogAppEventsEnabled(boolean)
    public static boolean getCodelessDebugLogEnabled()
    public static void setAdvertiserIDCollectionEnabled(boolean)
    public static void setCodelessDebugLogEnabled(boolean)
    public static java.io.File getCacheDir()
    public static void setCacheDir(java.io.File)
    public static boolean isFacebookRequestCode(int)
    private static final int DEFAULT_CALLBACK_REQUEST_CODE_OFFSET
    private static final java.lang.String FACEBOOK_COM
    private static final int MAX_REQUEST_CODE_RANGE
    private static final java.lang.String ATTRIBUTION_PREFERENCES
    private static final java.lang.String APP_EVENT_PREFERENCES
    private static final java.lang.String PUBLISH_ACTIVITY_PATH
    static final java.lang.String CALLBACK_OFFSET_CHANGED_AFTER_INIT
    static final java.lang.String CALLBACK_OFFSET_NEGATIVE
    public static final java.lang.String APPLICATION_ID_PROPERTY
    public static final java.lang.String APPLICATION_NAME_PROPERTY
    public static final java.lang.String CLIENT_TOKEN_PROPERTY
    public static final java.lang.String WEB_DIALOG_THEME
    public static final java.lang.String AUTO_INIT_ENABLED_PROPERTY
    public static final java.lang.String AUTO_LOG_APP_EVENTS_ENABLED_PROPERTY
    public static final java.lang.String CODELESS_DEBUG_LOG_ENABLED_PROPERTY
    public static final java.lang.String ADVERTISER_ID_COLLECTION_ENABLED_PROPERTY
    public static final java.lang.String CALLBACK_OFFSET_PROPERTY
android.support.v4.media.session.MediaSessionCompat$1
kotlin.internal.DynamicExtension
androidx.appcompat.app.AlertDialog$Builder
androidx.core.provider.FontsContractCompat$FontRequestCallback
kotlin.jvm.internal.FunctionReferenceImpl
kotlin.UByteArray
com.google.zxing.qrcode.detector.FinderPatternInfo
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
com.google.zxing.client.result.VINResultParser
androidx.browser.customtabs.CustomTabsClient$2$2
androidx.slidingpanelayout.R$id
com.twitter.sdk.android.core.internal.ActivityLifecycleManager:
    public void <init>(android.content.Context)
    public void resetCallbacks()
    private final com.twitter.sdk.android.core.internal.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper callbacksWrapper
androidx.core.view.MenuItemCompat$OnActionExpandListener
com.twitter.Autolink$1
com.google.zxing.datamatrix.DataMatrixWriter:
    public com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter
androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void onChanged(java.lang.Object)
    public java.lang.String toString()
    private final androidx.loader.content.Loader mLoader
    private final androidx.loader.app.LoaderManager$LoaderCallbacks mCallback
    private boolean mDeliveredData
androidx.coordinatorlayout.R$color
com.facebook.internal.instrument.InstrumentManager:
    public void <init>()
com.facebook.share.internal.VideoUploader$TransferChunkWorkItem
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1
com.twitter.sdk.android.tweetcomposer.FileUtils:
    void <init>()
    private static final java.lang.String MEDIA_SCHEME
androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges
com.dxc.mtahackathon.R$id
com.google.zxing.client.result.URIParsedResult
com.facebook.appevents.codeless.ViewIndexingTrigger:
    private static final double SHAKE_THRESHOLD_GRAVITY
com.facebook.core.R$string
kotlin.coroutines.jvm.internal.ContinuationImpl
androidx.core.graphics.TypefaceCompatBaseImpl:
    private static final java.lang.String TAG
    private static final java.lang.String CACHE_FILE_PREFIX
android.support.v4.media.MediaBrowserCompatApi23
androidx.core.view.ViewCompat$NestedScrollType
bolts.AppLink
com.facebook.share.R$attr
io.flutter.plugins.packageinfo.R
androidx.core.os.LocaleListCompat$LocaleListCompatBaseImpl
com.iyaffle.launchreview.R$id
androidx.loader.R$styleable
com.twitter.sdk.android.core.IntentUtils:
    public void <init>()
androidx.appcompat.app.AppCompatViewInflater
kotlin.sequences.SubSequence
com.twitter.sdk.android.core.internal.scribe.TwitterCoreScribeClientHolder:
    public void <init>()
com.twitter.sdk.android.tweetui.internal.HighlightedClickableSpan
androidx.recyclerview.widget.RecyclerView$ViewHolder:
    public void <init>(android.view.View)
    private void createPayloadsIfNeeded()
    void flagRemovedAndOffsetPosition(int,int,boolean)
    void offsetPosition(int,boolean)
    public final int getPosition()
    public final int getItemViewType()
    void stopIgnoring()
    void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean)
    void addChangePayload(java.lang.Object)
    void clearPayload()
    void resetInternal()
    void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView)
    void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView)
    boolean shouldBeKeptAsChild()
    boolean doesTransientStatePreventRecycling()
    int mItemViewType
    private int mWasImportantForAccessibilityBeforeHidden
    static final int FLAG_BOUND
    static final int FLAG_UPDATE
    static final int FLAG_INVALID
    static final int FLAG_REMOVED
    static final int FLAG_NOT_RECYCLABLE
    static final int FLAG_RETURNED_FROM_SCRAP
    static final int FLAG_IGNORE
    static final int FLAG_TMP_DETACHED
    static final int FLAG_ADAPTER_POSITION_UNKNOWN
    static final int FLAG_ADAPTER_FULLUPDATE
    static final int FLAG_MOVED
    static final int FLAG_APPEARED_IN_PRE_LAYOUT
    static final int PENDING_ACCESSIBILITY_STATE_NOT_SET
    static final int FLAG_BOUNCED_FROM_HIDDEN_LIST
    static final int FLAG_SET_A11Y_ITEM_DELEGATE
androidx.appcompat.widget.AppCompatEditText:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
okhttp3.HttpUrl:
    public static okhttp3.HttpUrl get(java.net.URL)
    static okhttp3.HttpUrl getChecked(java.lang.String)
    public static okhttp3.HttpUrl get(java.net.URI)
    public java.net.URL url()
    public java.lang.String username()
    public java.lang.String password()
    public int pathSize()
    public java.lang.String queryParameter(java.lang.String)
    public java.util.Set queryParameterNames()
    public java.util.List queryParameterValues(java.lang.String)
    public java.lang.String fragment()
    static final java.lang.String USERNAME_ENCODE_SET
    static final java.lang.String PASSWORD_ENCODE_SET
    static final java.lang.String PATH_SEGMENT_ENCODE_SET
    static final java.lang.String PATH_SEGMENT_ENCODE_SET_URI
    static final java.lang.String QUERY_ENCODE_SET
    static final java.lang.String QUERY_COMPONENT_ENCODE_SET
    static final java.lang.String QUERY_COMPONENT_ENCODE_SET_URI
    static final java.lang.String FORM_ENCODE_SET
    static final java.lang.String FRAGMENT_ENCODE_SET
    static final java.lang.String FRAGMENT_ENCODE_SET_URI
com.facebook.login.LoginManager:
    void <init>()
    public static com.facebook.login.LoginManager getInstance()
    private void resolveError(com.facebook.internal.FragmentWrapper,com.facebook.GraphResponse)
    private com.facebook.login.LoginClient$Request createLoginRequestFromResponse(com.facebook.GraphResponse)
    static java.util.Map getExtraDataFromIntent(android.content.Intent)
    private void logInWithReadPermissions(com.facebook.internal.FragmentWrapper,java.util.Collection)
    private void reauthorizeDataAccess(com.facebook.internal.FragmentWrapper)
    private void logInWithPublishPermissions(com.facebook.internal.FragmentWrapper,java.util.Collection)
    private void validateReadPermissions(java.util.Collection)
    private void validatePublishPermissions(java.util.Collection)
    private void startLogin(com.facebook.login.StartActivityDelegate,com.facebook.login.LoginClient$Request)
    private void logStartLogin(android.content.Context,com.facebook.login.LoginClient$Request)
    private void logCompleteLogin(android.content.Context,com.facebook.login.LoginClient$Result$Code,java.util.Map,java.lang.Exception,boolean,com.facebook.login.LoginClient$Request)
    private boolean tryFacebookActivity(com.facebook.login.StartActivityDelegate,com.facebook.login.LoginClient$Request)
    private boolean resolveIntent(android.content.Intent)
    static com.facebook.login.LoginResult computeLoginResult(com.facebook.login.LoginClient$Request,com.facebook.AccessToken)
    private void finishLogin(com.facebook.AccessToken,com.facebook.login.LoginClient$Request,com.facebook.FacebookException,boolean,com.facebook.FacebookCallback)
    private void retrieveLoginStatusImpl(android.content.Context,com.facebook.LoginStatusCallback,long)
    private void setExpressLoginStatus(boolean)
    private boolean isExpressLoginAllowed()
    private static com.facebook.Profile getProfileFromBundle(android.os.Bundle)
    private static void handleLoginStatusError(java.lang.String,java.lang.String,java.lang.String,com.facebook.login.LoginLogger,com.facebook.LoginStatusCallback)
    static synthetic void access$100(java.lang.String,java.lang.String,java.lang.String,com.facebook.login.LoginLogger,com.facebook.LoginStatusCallback)
    static synthetic com.facebook.Profile access$200(android.os.Bundle)
    public void resolveError(android.app.Activity,com.facebook.GraphResponse)
    public void resolveError(androidx.fragment.app.Fragment,com.facebook.GraphResponse)
    public void resolveError(android.app.Fragment,com.facebook.GraphResponse)
    public void registerCallback(com.facebook.CallbackManager,com.facebook.FacebookCallback)
    public void unregisterCallback(com.facebook.CallbackManager)
    boolean onActivityResult(int,android.content.Intent)
    boolean onActivityResult(int,android.content.Intent,com.facebook.FacebookCallback)
    public com.facebook.login.LoginBehavior getLoginBehavior()
    public com.facebook.login.LoginManager setLoginBehavior(com.facebook.login.LoginBehavior)
    public com.facebook.login.DefaultAudience getDefaultAudience()
    public com.facebook.login.LoginManager setDefaultAudience(com.facebook.login.DefaultAudience)
    public java.lang.String getAuthType()
    public com.facebook.login.LoginManager setAuthType(java.lang.String)
    public void logOut()
    public void retrieveLoginStatus(android.content.Context,com.facebook.LoginStatusCallback)
    public void retrieveLoginStatus(android.content.Context,long,com.facebook.LoginStatusCallback)
    public void logInWithReadPermissions(androidx.fragment.app.Fragment,java.util.Collection)
    public void logInWithReadPermissions(android.app.Fragment,java.util.Collection)
    public void logInWithReadPermissions(android.app.Activity,java.util.Collection)
    public void reauthorizeDataAccess(android.app.Activity)
    public void reauthorizeDataAccess(androidx.fragment.app.Fragment)
    public void logInWithPublishPermissions(androidx.fragment.app.Fragment,java.util.Collection)
    public void logInWithPublishPermissions(android.app.Fragment,java.util.Collection)
    public void logInWithPublishPermissions(android.app.Activity,java.util.Collection)
    public void logIn(androidx.fragment.app.Fragment,java.util.Collection)
    public void logIn(android.app.Fragment,java.util.Collection)
    public void logIn(com.facebook.internal.FragmentWrapper,java.util.Collection)
    public void logIn(android.app.Activity,java.util.Collection)
    protected com.facebook.login.LoginClient$Request createLoginRequest(java.util.Collection)
    protected com.facebook.login.LoginClient$Request createReauthorizeRequest()
    protected android.content.Intent getFacebookActivityIntent(com.facebook.login.LoginClient$Request)
    private com.facebook.login.LoginBehavior loginBehavior
    private com.facebook.login.DefaultAudience defaultAudience
    private final android.content.SharedPreferences sharedPreferences
    private java.lang.String authType
    private static final java.lang.String PUBLISH_PERMISSION_PREFIX
    private static final java.lang.String MANAGE_PERMISSION_PREFIX
    private static final java.lang.String EXPRESS_LOGIN_ALLOWED
    private static final java.lang.String PREFERENCE_LOGIN_MANAGER
    private static volatile com.facebook.login.LoginManager instance
kotlin.collections.ArraysKt___ArraysKt
androidx.recyclerview.widget.DefaultItemAnimator$1
com.facebook.share.model.ShareStoryContent$Builder
androidx.multidex.MultiDex$V14
android.support.v4.os.ResultReceiver:
    public void <init>(android.os.Handler)
    public void send(int,android.os.Bundle)
androidx.core.app.JobIntentService$JobWorkEnqueuer
androidx.arch.core.R
com.twitter.sdk.android.core.models.ImageValue:
    public void <init>(int,int,java.lang.String,java.lang.String)
    public final int height
    public final int width
kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory
androidx.lifecycle.LifecycleRegistry:
    public int getObserverCount()
    private static final java.lang.String LOG_TAG
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder
com.google.zxing.client.result.SMSParsedResult
androidx.appcompat.widget.ActionBarContextView:
    public void initForMode(androidx.appcompat.view.ActionMode)
    public void closeMode()
    public void killMode()
    public boolean showOverflowMenu()
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isTitleOptional()
    public synthetic bridge void dismissPopupMenus()
    public synthetic bridge boolean canShowOverflowMenu()
    public synthetic bridge boolean isOverflowReserved()
    public synthetic bridge boolean isOverflowMenuShowPending()
    public synthetic bridge void postShowOverflowMenu()
    public synthetic bridge void animateToVisibility(int)
    public synthetic bridge androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
    private static final java.lang.String TAG
io.flutter.plugins.sharedpreferences.R$id
androidx.browser.browseractions.BrowserActionsFallbackMenuUi$2
kotlin.reflect.KMutableProperty1$Setter
com.dxc.mtahackathon.R$xml
kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction0Migration
com.facebook.appevents.codeless.internal.PathComponent:
    private static final java.lang.String PATH_CLASS_NAME_KEY
    private static final java.lang.String PATH_INDEX_KEY
    private static final java.lang.String PATH_ID_KEY
    private static final java.lang.String PATH_TEXT_KEY
    private static final java.lang.String PATH_TAG_KEY
    private static final java.lang.String PATH_DESCRIPTION_KEY
    private static final java.lang.String PATH_HINT_KEY
    private static final java.lang.String PATH_MATCH_BITMASK_KEY
androidx.fragment.app.FragmentHostCallback:
    public void <init>(android.content.Context,android.os.Handler,int)
    public abstract java.lang.Object onGetHost()
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
    public android.view.View onFindViewById(int)
    public boolean onHasView()
android.support.v4.media.session.IMediaControllerCallback$Stub:
    public static android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder)
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_onEvent
    static final int TRANSACTION_onSessionDestroyed
    static final int TRANSACTION_onPlaybackStateChanged
    static final int TRANSACTION_onMetadataChanged
    static final int TRANSACTION_onQueueChanged
    static final int TRANSACTION_onQueueTitleChanged
    static final int TRANSACTION_onExtrasChanged
    static final int TRANSACTION_onVolumeInfoChanged
    static final int TRANSACTION_onRepeatModeChanged
    static final int TRANSACTION_onShuffleModeChangedRemoved
    static final int TRANSACTION_onCaptioningEnabledChanged
    static final int TRANSACTION_onShuffleModeChanged
    static final int TRANSACTION_onSessionReady
com.google.gson.internal.LinkedHashTreeMap$KeySet
androidx.fragment.app.FragmentTransaction:
    public abstract androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
    public abstract androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public abstract boolean isEmpty()
    public abstract androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
    public abstract androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
    public abstract androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
    public abstract androidx.fragment.app.FragmentTransaction setTransition(int)
    public abstract androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
    public abstract androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
    public abstract boolean isAddToBackStackAllowed()
    public abstract androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
    public abstract androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
    public abstract androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    public abstract androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
    public abstract androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    public abstract androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
    public abstract androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
    public abstract androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
    public abstract void commitNow()
    public abstract void commitNowAllowingStateLoss()
    public static final int TRANSIT_ENTER_MASK
    public static final int TRANSIT_EXIT_MASK
    public static final int TRANSIT_UNSET
    public static final int TRANSIT_NONE
    public static final int TRANSIT_FRAGMENT_OPEN
    public static final int TRANSIT_FRAGMENT_CLOSE
    public static final int TRANSIT_FRAGMENT_FADE
androidx.core.app.AppComponentFactory
com.google.gson.internal.bind.TreeTypeAdapter:
    public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object)
kotlin.sequences.FilteringSequence
androidx.core.app.NotificationCompatExtras
com.google.zxing.aztec.AztecWriter:
    public com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4
androidx.media.MediaBrowserServiceCompat$ServiceCallbacksCompat
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1
com.facebook.FacebookServiceException:
    private static final long serialVersionUID
androidx.core.R$attr:
    private void <init>()
androidx.appcompat.R$integer
androidx.annotation.ColorRes
kotlin.contracts.InvocationKind
androidx.core.content.res.GrowingArrayUtils:
    public static long[] append(long[],int,long)
    public static boolean[] append(boolean[],int,boolean)
    public static java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object)
    public static int[] insert(int[],int,int,int)
    public static long[] insert(long[],int,int,long)
    public static boolean[] insert(boolean[],int,int,boolean)
com.twitter.sdk.android.core.identity.TwitterLoginButton$LoginClickListener
kotlin.jvm.internal.ArrayIterator
com.facebook.internal.FileLruCache$StreamHeader
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$5
com.google.zxing.qrcode.decoder.DataMask$7
kotlin.io.CloseableKt
androidx.annotation.IdRes
kotlin.jvm.functions.Function10
com.google.zxing.oned.ITFWriter:
    private static final int W
    private static final int N
androidx.appcompat.view.menu.MenuItemWrapperICS:
    static final java.lang.String LOG_TAG
androidx.drawerlayout.widget.DrawerLayout
okhttp3.ConnectionSpec$Builder:
    public okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
    public okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
android.support.v4.media.MediaBrowserCompat$ItemCallback$StubApi23
com.google.zxing.qrcode.decoder.DataBlock
io.flutter.plugins.deviceinfo.R$string
io.flutter.view.FlutterView$3
kotlin.time.MeasureTimeKt
com.facebook.share.model.AppGroupCreationContent$AppGroupPrivacy
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder
okio.Pipe
androidx.core.text.ICUCompat
androidx.core.os.ParcelableCompatCreatorCallbacks
androidx.core.util.Pair
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    public void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)
    private void requestExtraBinder()
    public final void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
    public final void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    public boolean dispatchMediaButtonEvent(android.view.KeyEvent)
    public android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()
    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public android.support.v4.media.MediaMetadataCompat getMetadata()
    public java.util.List getQueue()
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)
    public void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public java.lang.CharSequence getQueueTitle()
    public android.os.Bundle getExtras()
    public int getRatingType()
    public boolean isCaptioningEnabled()
    public int getRepeatMode()
    public int getShuffleMode()
    public long getFlags()
    public android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()
    public android.app.PendingIntent getSessionActivity()
    public void setVolumeTo(int,int)
    public void adjustVolume(int,int)
    public void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
    public boolean isSessionReady()
    public java.lang.String getPackageName()
    public java.lang.Object getMediaController()
    protected final java.lang.Object mControllerObj
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor
androidx.coordinatorlayout.R$id
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
androidx.collection.CircularIntArray
kotlin.collections.AbstractSet$Companion
kotlin.coroutines.intrinsics.IntrinsicsKt
com.facebook.share.model.CameraEffectArguments:
    public java.lang.String getString(java.lang.String)
    public java.lang.String[] getStringArray(java.lang.String)
android.support.customtabs.ICustomTabsCallback
com.facebook.core.BuildConfig
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$4
com.facebook.share.ShareApi$2
androidx.loader.content.AsyncTaskLoader$LoadTask:
    public void waitForLoader()
kotlin.collections.TypeAliasesKt
androidx.core.content.pm.ShortcutInfoCompat$Builder
androidx.appcompat.R$dimen:
    private void <init>()
com.squareup.picasso.Cache:
    public abstract void clear()
    public abstract void clearKeyUri(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1
bolts.UnobservedErrorNotifier
kotlin.collections.ULongIterator
androidx.fragment.app.FragmentManager:
    public static void enableDebugLogging(boolean)
    public androidx.fragment.app.FragmentTransaction openTransaction()
    public abstract boolean executePendingTransactions()
    public abstract androidx.fragment.app.Fragment findFragmentById(int)
    public abstract void popBackStack()
    public abstract void popBackStack(java.lang.String,int)
    public abstract boolean popBackStackImmediate(java.lang.String,int)
    public abstract boolean popBackStackImmediate(int,int)
    public abstract int getBackStackEntryCount()
    public abstract androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public abstract void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public abstract void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public abstract void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
    public abstract androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    public abstract boolean isDestroyed()
    public abstract void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public abstract void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    public abstract androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    public static final int POP_BACK_STACK_INCLUSIVE
com.facebook.internal.AttributionIdentifiers$GoogleAdInfo:
    private static final int FIRST_TRANSACTION_CODE
    private static final int SECOND_TRANSACTION_CODE
androidx.core.widget.ListPopupWindowCompat
androidx.core.app.AlarmManagerCompat
com.google.zxing.qrcode.decoder.Version:
    public static com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int)
    static com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int)
    public int[] getAlignmentPatternCenters()
    com.google.zxing.common.BitMatrix buildFunctionPattern()
androidx.lifecycle.ComputableLiveData$3
okhttp3.internal.framed.Huffman:
    void encode(byte[],java.io.OutputStream)
    int encodedLength(byte[])
com.twitter.sdk.android.core.models.TweetEntities:
    private void <init>()
kotlin.ranges.RangesKt__RangesKt
androidx.core.graphics.drawable.RoundedBitmapDrawable21
io.flutter.plugins.urllauncher.R$attr
io.flutter.plugins.share.R$dimen
androidx.fragment.app.FragmentTransition:
    static boolean supportsTransition()
    private void <init>()
com.facebook.share.widget.DeviceShareButton
kotlin.ranges.IntRange$Companion
androidx.core.os.ParcelableCompat
kotlin.jvm.internal.Ref
okhttp3.internal.framed.Hpack$Writer:
    private static final int SETTINGS_HEADER_TABLE_SIZE
    private static final int SETTINGS_HEADER_TABLE_SIZE_LIMIT
kotlin.jvm.internal.PrimitiveSpreadBuilder
kotlin.collections.CollectionsKt__CollectionsJVMKt
androidx.appcompat.widget.AppCompatSeekBar
androidx.loader.R$attr
androidx.browser.customtabs.CustomTabsSession:
    public static androidx.browser.customtabs.CustomTabsSession createMockSessionForTesting(android.content.ComponentName)
    void <init>(android.support.customtabs.ICustomTabsService,android.support.customtabs.ICustomTabsCallback,android.content.ComponentName)
    public boolean mayLaunchUrl(android.net.Uri,android.os.Bundle,java.util.List)
    public boolean setActionButton(android.graphics.Bitmap,java.lang.String)
    public boolean setSecondaryToolbarViews(android.widget.RemoteViews,int[],android.app.PendingIntent)
    public boolean setToolbarItem(int,android.graphics.Bitmap,java.lang.String)
    public boolean requestPostMessageChannel(android.net.Uri)
    public int postMessage(java.lang.String,android.os.Bundle)
    public boolean validateRelationship(int,android.net.Uri,android.os.Bundle)
    private final java.lang.Object mLock
    private final android.support.customtabs.ICustomTabsService mService
    private final android.support.customtabs.ICustomTabsCallback mCallback
    private final android.content.ComponentName mComponentName
    private static final java.lang.String TAG
com.facebook.internal.Mutable
com.facebook.internal.FileLruCache
androidx.core.os.BuildCompat
com.google.zxing.oned.EAN8Writer:
    private static final int CODE_WIDTH
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy
kotlin.sequences.DistinctSequence
com.google.zxing.Writer:
    public abstract com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int)
com.twitter.sdk.android.tweetui.FilterValues
androidx.recyclerview.widget.FastScroller$AnimatorListener
com.dxc.mtahackathon.R$color
com.twitter.sdk.android.core.internal.scribe.EventsHandler$4
kotlin.collections.AbstractCollection
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
androidx.viewpager.R
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$5
kotlin.jvm.internal.FunctionReference
com.facebook.share.internal.LikeActionController$12
androidx.fragment.app.Fragment$SavedState$1
androidx.customview.R$string
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,android.os.Handler)
androidx.media.MediaBrowserServiceCompat$4
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb
androidx.recyclerview.widget.DiffUtil$PostponedUpdate
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle
retrofit2.Response:
    public static retrofit2.Response success(java.lang.Object)
    public static retrofit2.Response success(java.lang.Object,okhttp3.Headers)
    public static retrofit2.Response error(int,okhttp3.ResponseBody)
    public okhttp3.Response raw()
    public java.lang.String message()
com.twitter.sdk.android.core.models.MediaEntity:
    public void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,long,java.lang.String,java.lang.String,java.lang.String,com.twitter.sdk.android.core.models.MediaEntity$Sizes,long,java.lang.String,java.lang.String,com.twitter.sdk.android.core.models.VideoInfo,java.lang.String)
    public final java.lang.String idStr
    public final java.lang.String mediaUrl
    public final com.twitter.sdk.android.core.models.MediaEntity$Sizes sizes
    public final long sourceStatusId
    public final java.lang.String sourceStatusIdStr
    public final java.lang.String altText
kotlin.reflect.KClass
com.facebook.internal.FacebookSignatureValidator:
    public void <init>()
    private static final java.lang.String FBI_HASH
    private static final java.lang.String FBL_HASH
    private static final java.lang.String FBL2_HASH
    private static final java.lang.String FBR_HASH
    private static final java.lang.String FBR2_HASH
    private static final java.lang.String MSR_HASH
    private static final java.lang.String FBF_HASH
androidx.browser.customtabs.CustomTabsSessionToken
com.facebook.share.internal.LikeActionController$6
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls
com.facebook.share.internal.LikeActionController$MRUCacheWorkItem
kotlin.collections.LongIterator
androidx.legacy.coreutils.R$id
kotlin.properties.NotNullVar
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1
com.google.zxing.aztec.AztecDetectorResult
androidx.drawerlayout.R$dimen
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26
kotlin.sequences.SequencesKt___SequencesJvmKt
androidx.recyclerview.widget.OrientationHelper:
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public abstract void offsetChild(android.view.View,int)
    private static final int INVALID_SIZE
    public static final int HORIZONTAL
    public static final int VERTICAL
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener
android.support.v4.media.MediaDescriptionCompatApi23$Builder:
    private void <init>()
kotlin.collections.MapsKt__MapsKt
com.twitter.sdk.android.core.services.params.Geocode:
    public void <init>(double,double,int,com.twitter.sdk.android.core.services.params.Geocode$Distance)
    public java.lang.String toString()
    public final double latitude
    public final double longitude
    public final int radius
    public final com.twitter.sdk.android.core.services.params.Geocode$Distance distance
com.facebook.AccessTokenTracker$1
kotlin.NotImplementedError
kotlin.jvm.JvmName
bolts.Task$2
androidx.legacy.app.ActionBarDrawerToggle$Delegate
kotlin.jvm.functions.Function2
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback
kotlin.ranges.CharProgression
com.facebook.share.ShareApi$10
kotlin.text.StringsKt__RegexExtensionsKt
org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn
com.google.zxing.client.result.TelResultParser
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener
kotlin.collections.SetsKt__SetsJVMKt
android.support.v4.media.session.MediaSessionCompatApi21$Callback
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21
kotlin.time.TestClock
androidx.drawerlayout.widget.DrawerLayout$SavedState
com.facebook.appevents.codeless.internal.ParameterComponent:
    private static final java.lang.String PARAMETER_NAME_KEY
    private static final java.lang.String PARAMETER_PATH_KEY
    private static final java.lang.String PARAMETER_VALUE_KEY
io.flutter.embedding.android.FlutterEngineProvider
com.twitter.sdk.android.tweetui.TweetDateUtils
androidx.core.math.MathUtils
androidx.core.os.TraceCompat:
    private void <init>()
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1
com.appleeducate.getversion.R
kotlin.ExperimentalStdlibApi
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry:
    public boolean hasPlugin(java.lang.String)
    public java.lang.Object valuePublishedByPlugin(java.lang.String)
    private static final java.lang.String TAG
com.twitter.sdk.android.tweetui.AbstractTweetView$DependencyProvider
okhttp3.Cache$CacheResponseBody
androidx.core.app.ActivityCompat:
    protected void <init>()
    public static void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)
    public static boolean invalidateOptionsMenu(android.app.Activity)
    public static void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public static void finishAffinity(android.app.Activity)
    public static void finishAfterTransition(android.app.Activity)
    public static android.net.Uri getReferrer(android.app.Activity)
    public static android.view.View requireViewById(android.app.Activity,int)
    public static void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void postponeEnterTransition(android.app.Activity)
    public static void startPostponedEnterTransition(android.app.Activity)
    public static void requestPermissions(android.app.Activity,java.lang.String[],int)
    public static boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
    public static androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
kotlin.coroutines.CoroutineContext
zhuoyuan.li.fluttershareme.R$drawable
com.facebook.login.DeviceAuthDialog:
    private static final java.lang.String DEVICE_LOGIN_ENDPOINT
    private static final java.lang.String DEVICE_LOGIN_STATUS_ENDPOINT
    private static final java.lang.String REQUEST_STATE_KEY
    private static final int LOGIN_ERROR_SUBCODE_EXCESSIVE_POLLING
    private static final int LOGIN_ERROR_SUBCODE_AUTHORIZATION_DECLINED
    private static final int LOGIN_ERROR_SUBCODE_AUTHORIZATION_PENDING
    private static final int LOGIN_ERROR_SUBCODE_CODE_EXPIRED
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform
androidx.appcompat.app.AlertController$AlertParams
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt
androidx.recyclerview.widget.StaggeredGridLayoutManager:
    public void <init>(int,int)
    private void handleUpdate(int,int,int)
    public int getGapStrategy()
    public void setGapStrategy(int)
    public int getSpanCount()
    public boolean getReverseLayout()
    public int[] findFirstVisibleItemPositions(int[])
    public int[] findFirstCompletelyVisibleItemPositions(int[])
    public int[] findLastVisibleItemPositions(int[])
    public int[] findLastCompletelyVisibleItemPositions(int[])
    public void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    public int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
    public void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
    public void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
    public void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
    public android.graphics.PointF computeScrollVectorForPosition(int)
    public void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
    public void scrollToPosition(int)
    public void scrollToPositionWithOffset(int,int)
    public void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    public int getOrientation()
    private int[] mPrefetchDistances
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int GAP_HANDLING_NONE
    public static final int GAP_HANDLING_LAZY
    public static final int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
    static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.widget.ContentLoadingProgressBar$1
kotlin.collections.AbstractMap$values$1$iterator$1
com.facebook.internal.BundleJSONConverter$1:
    public void setOnJSON(org.json.JSONObject,java.lang.String,java.lang.Object)
androidx.appcompat.widget.ActivityChooserModel
com.twitter.sdk.android.tweetui.BasicTimelineFilter$IgnoreCaseComparator
androidx.core.util.ObjectsCompat:
    private void <init>()
    public static boolean equals(java.lang.Object,java.lang.Object)
    public static int hashCode(java.lang.Object)
androidx.annotation.WorkerThread
com.squareup.picasso.Dispatcher:
    void shutdown()
    void dispatchPauseTag(java.lang.Object)
    void dispatchResumeTag(java.lang.Object)
    private static final int RETRY_DELAY
    private static final int AIRPLANE_MODE_ON
    private static final int AIRPLANE_MODE_OFF
    static final int REQUEST_SUBMIT
    static final int REQUEST_CANCEL
    static final int REQUEST_GCED
    static final int HUNTER_COMPLETE
    static final int HUNTER_RETRY
    static final int HUNTER_DECODE_FAILED
    static final int HUNTER_DELAY_NEXT_BATCH
    static final int HUNTER_BATCH_COMPLETE
    static final int NETWORK_STATE_CHANGE
    static final int AIRPLANE_MODE_CHANGE
    static final int TAG_PAUSE
    static final int TAG_RESUME
    static final int REQUEST_BATCH_RESUME
    private static final java.lang.String DISPATCHER_THREAD_NAME
    private static final int BATCH_DELAY
com.google.zxing.pdf417.decoder.ec.ModulusGF
androidx.coordinatorlayout.R$integer
androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory
com.google.zxing.common.CharacterSetECI:
    public static com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int)
okhttp3.internal.http.RequestLine:
    private void <init>()
kotlin.internal.NoInfer
androidx.fragment.app.FragmentTabHost$SavedState$1
com.dxc.mtahackathon.R$mipmap
androidx.appcompat.widget.AppCompatCheckBox
kotlin.jvm.internal.DoubleCompanionObject
androidx.recyclerview.widget.RecyclerView$State:
    public void <init>()
    androidx.recyclerview.widget.RecyclerView$State reset()
    public boolean isMeasuring()
    public boolean willRunSimpleAnimations()
    public void remove(int)
    public java.lang.Object get(int)
    public void put(int,java.lang.Object)
    public boolean didStructureChange()
    public int getRemainingScrollHorizontal()
    public int getRemainingScrollVertical()
    public java.lang.String toString()
    int mTargetPosition
    private android.util.SparseArray mData
    static final int STEP_START
    static final int STEP_LAYOUT
    static final int STEP_ANIMATIONS
kotlin.collections.GroupingKt__GroupingKt
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9
androidx.core.app.ServiceCompat$StopForegroundFlags
androidx.loader.R$style
kotlin.UIntArray$Iterator
com.twitter.sdk.android.tweetui.TimelineDelegate$PreviousCallback
com.twitter.sdk.android.tweetui.TweetTextLinkifier$1
com.twitter.sdk.android.R$anim
androidx.core.net.ConnectivityManagerCompat
com.twitter.sdk.android.tweetui.TweetView
okhttp3.internal.framed.Http2:
    public okhttp3.Protocol getProtocol()
    static final int INITIAL_MAX_FRAME_SIZE
    static final byte TYPE_DATA
    static final byte TYPE_HEADERS
    static final byte TYPE_PRIORITY
    static final byte TYPE_RST_STREAM
    static final byte TYPE_SETTINGS
    static final byte TYPE_PUSH_PROMISE
    static final byte TYPE_PING
    static final byte TYPE_GOAWAY
    static final byte TYPE_WINDOW_UPDATE
    static final byte TYPE_CONTINUATION
    static final byte FLAG_NONE
    static final byte FLAG_ACK
    static final byte FLAG_END_STREAM
    static final byte FLAG_END_HEADERS
    static final byte FLAG_END_PUSH_PROMISE
    static final byte FLAG_PADDED
    static final byte FLAG_PRIORITY
    static final byte FLAG_COMPRESSED
androidx.browser.browseractions.BrowserActionsFallbackMenuAdapter$ViewHolderItem
androidx.customview.R$styleable
kotlin.js.JsName
kotlin.reflect.TypeOfKt
android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper
com.facebook.internal.WebDialog$Builder:
    public com.facebook.internal.WebDialog$Builder setTheme(int)
com.twitter.sdk.android.tweetui.ResetTweetCallback
androidx.cardview.R
org.intellij.lang.annotations.JdkConstants
com.twitter.sdk.android.core.models.Tweet:
    public static final long INVALID_ID
com.facebook.share.widget.ShareButtonBase$1
com.facebook.common.R$bool
com.google.gson.internal.bind.JsonTreeWriter:
    public com.google.gson.stream.JsonWriter value(double)
com.twitter.sdk.android.tweetui.TweetDateUtils$DateFormatter
androidx.media.R$integer
com.facebook.CampaignTrackingReceiver:
    static final java.lang.String INSTALL_REFERRER
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14
kotlin.sequences.USequencesKt
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub
org.intellij.lang.annotations.PrintFormatPattern
com.twitter.sdk.android.core.GuestSession:
    public static final long LOGGED_OUT_USER_ID
com.squareup.picasso.Picasso$Builder:
    public com.squareup.picasso.Picasso$Builder defaultBitmapConfig(android.graphics.Bitmap$Config)
    public com.squareup.picasso.Picasso$Builder downloader(com.squareup.picasso.Downloader)
    public com.squareup.picasso.Picasso$Builder executor(java.util.concurrent.ExecutorService)
    public com.squareup.picasso.Picasso$Builder memoryCache(com.squareup.picasso.Cache)
    public com.squareup.picasso.Picasso$Builder listener(com.squareup.picasso.Picasso$Listener)
    public com.squareup.picasso.Picasso$Builder requestTransformer(com.squareup.picasso.Picasso$RequestTransformer)
    public com.squareup.picasso.Picasso$Builder addRequestHandler(com.squareup.picasso.RequestHandler)
    public com.squareup.picasso.Picasso$Builder debugging(boolean)
    public com.squareup.picasso.Picasso$Builder indicatorsEnabled(boolean)
    public com.squareup.picasso.Picasso$Builder loggingEnabled(boolean)
com.facebook.share.ShareApi$7
com.google.zxing.qrcode.decoder.DecodedBitStreamParser
io.flutter.plugins.sharedpreferences.R$string
okhttp3.Cookie$1
okhttp3.Challenge
okhttp3.ConnectionPool:
    public synchronized int idleConnectionCount()
    public synchronized int connectionCount()
    public void evictAll()
kotlin.coroutines.experimental.SafeContinuation$Fail
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4
androidx.browser.customtabs.CustomTabsClient$2$5
kotlin.reflect.KProperty1$Getter
com.google.zxing.client.result.AddressBookAUResultParser
com.google.zxing.oned.rss.RSS14Reader
kotlin.reflect.KDeclarationContainer
kotlin.coroutines.jvm.internal.DebugProbesKt
androidx.appcompat.view.menu.MenuPresenter:
    public abstract androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public abstract int getId()
    public abstract android.os.Parcelable onSaveInstanceState()
    public abstract void onRestoreInstanceState(android.os.Parcelable)
androidx.drawerlayout.R$integer
com.twitter.sdk.android.core.internal.scribe.SyndicationClientEvent:
    public static final java.lang.String CLIENT_NAME
    private static final java.lang.String SCRIBE_CATEGORY
com.facebook.share.internal.CameraEffectJSONUtility$3:
    public void setOnArgumentsBuilder(com.facebook.share.model.CameraEffectArguments$Builder,java.lang.String,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    public void <init>()
    public void onChanged()
    public void onItemRangeChanged(int,int)
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeInserted(int,int)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
com.twitter.sdk.android.core.identity.TwitterAuthClient$1
kotlin.collections.AbstractMap$values$1
android.support.customtabs.ICustomTabsService
androidx.core.content.SharedPreferencesCompat
androidx.appcompat.widget.LinearLayoutCompat$OrientationMode
android.support.v4.media.session.PlaybackStateCompat$RepeatMode
com.google.zxing.aztec.encoder.State:
    com.google.zxing.aztec.encoder.Token getToken()
androidx.appcompat.view.menu.SubMenuWrapperICS:
    public synthetic bridge java.lang.Object getWrappedObject()
androidx.recyclerview.widget.ChildHelper$Callback
com.facebook.internal.FileLruCache$CloseCallbackOutputStream
androidx.drawerlayout.widget.DrawerLayout$SavedState$1
androidx.cardview.widget.CardView:
    public void setContentPadding(int,int,int,int)
kotlin.coroutines.experimental.SequenceBuilderIterator
com.facebook.share.model.CameraEffectArguments$Builder:
    public com.facebook.share.model.CameraEffectArguments$Builder putArgument(java.lang.String,java.lang.String)
    public com.facebook.share.model.CameraEffectArguments$Builder putArgument(java.lang.String,java.lang.String[])
    public synthetic bridge com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
    public synthetic bridge java.lang.Object build()
com.facebook.share.internal.LikeDialog$Result
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder
com.facebook.FacebookDialog
androidx.core.hardware.fingerprint.FingerprintManagerCompat
com.twitter.sdk.android.core.models.Identifiable
androidx.lifecycle.livedata.R
kotlin.reflect.KMutableProperty0
kotlin.text.StringsKt__IndentKt$getIndentFunction$1
com.twitter.sdk.android.tweetui.QuoteTweetView
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection
io.flutter.embedding.engine.loader.FlutterLoader$1$1
kotlin.sequences.FlatteningSequence
androidx.viewpager.widget.PagerTabStrip$2
kotlin.concurrent.TimersKt
kotlin.coroutines.intrinsics.CoroutineSingletons
com.google.zxing.multi.qrcode.QRCodeMultiReader
kotlin.text.StringsKt___StringsKt$windowedSequence$2
androidx.appcompat.widget.ActionMenuPresenter:
    public void setWidthLimit(int,boolean)
    public void setItemLimit(int)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public boolean isOverflowMenuShowPending()
    public boolean isOverflowReserved()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    public void onSubUiVisibilityChanged(boolean)
    private static final java.lang.String TAG
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2
io.flutter.app.FlutterActivityEvents
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView
com.twitter.sdk.android.core.internal.scribe.EventsManager:
    public abstract void deleteAllEvents()
kotlin.ranges.UIntProgressionIterator
com.twitter.sdk.android.tweetui.TimelineResult
okio.Pipe$PipeSource
androidx.fragment.app.BackStackRecord:
    public int getId()
    public int getBreadCrumbTitleRes()
    public int getBreadCrumbShortTitleRes()
    public java.lang.CharSequence getBreadCrumbTitle()
    public java.lang.CharSequence getBreadCrumbShortTitle()
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
    public androidx.fragment.app.FragmentTransaction setTransition(int)
    public androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
    public androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
    public androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
    public boolean isAddToBackStackAllowed()
    public androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
    public void commitNow()
    public void commitNowAllowingStateLoss()
    public androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
    public androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
    public int getTransition()
    public int getTransitionStyle()
    public boolean isEmpty()
    static final java.lang.String TAG
    static final int OP_NULL
    static final int OP_ADD
    static final int OP_REPLACE
    static final int OP_REMOVE
    static final int OP_HIDE
    static final int OP_SHOW
    static final int OP_DETACH
    static final int OP_ATTACH
    static final int OP_SET_PRIMARY_NAV
    static final int OP_UNSET_PRIMARY_NAV
kotlin.collections.ArraysKt___ArraysKt$withIndex$6
com.facebook.share.internal.LikeDialog$NativeHandler$1
androidx.media.AudioAttributesCompat$AudioManagerHidden
com.twitter.sdk.android.R$attr
com.facebook.GraphResponse$PagingDirection
okhttp3.internal.framed.Spdy3$Writer:
    public synchronized void synReply(boolean,int,java.util.List)
    public synchronized void headers(int,java.util.List)
android.support.v4.media.session.PlaybackStateCompat$ShuffleMode
kotlin.TypeCastException
io.flutter.plugins.sharedpreferences.R$layout
androidx.recyclerview.widget.DefaultItemAnimator$7
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    public void <init>()
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public int left
    public int top
    public int right
    public int bottom
    public int changeFlags
kotlin.jvm.internal.TypeReference$WhenMappings
com.google.zxing.aztec.detector.Detector
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$4
androidx.legacy.coreutils.R$color
kotlin.jvm.functions.Function18
com.google.zxing.oned.rss.expanded.ExpandedRow
kotlin.io.LinesSequence
kotlin.text.CharsKt__CharKt
androidx.versionedparcelable.VersionedParcel$ParcelException
com.example.connectivity.R$styleable
bolts.UnobservedTaskException
com.facebook.internal.InternalSettings:
    public void <init>()
    public static void setCustomUserAgent(java.lang.String)
    private static final java.lang.String UNITY_PREFIX
kotlin.contracts.CallsInPlace
androidx.core.app.ActivityCompat$1
bolts.BoltsExecutors$1
kotlin.ranges.UIntRange$Companion
com.facebook.share.widget.AppInviteDialog$1
com.twitter.sdk.android.core.models.ApiError:
    public void <init>(java.lang.String,int)
    public final java.lang.String message
kotlin.sequences.SequencesKt___SequencesKt$minus$2
android.support.v4.media.session.MediaSessionCompatApi23
bolts.AppLink$Target
androidx.appcompat.app.ActionBar$NavigationMode
androidx.appcompat.widget.AbsActionBarView$1
io.flutter.plugins.packageinfo.R$color
androidx.appcompat.view.menu.MenuPopupHelper:
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View)
    public int getGravity()
    public void show(int,int)
    public android.widget.ListView getListView()
    private static final int TOUCH_EPICENTER_SIZE_DP
androidx.appcompat.app.AlertController$AlertParams$4
kotlin.ULongArrayKt
kotlin.coroutines.CoroutineContext$Element$DefaultImpls
androidx.core.view.ViewPropertyAnimatorCompat$1
okhttp3.Headers$Builder:
    public okhttp3.Headers$Builder add(java.lang.String)
    public java.lang.String get(java.lang.String)
com.facebook.share.R$id
kotlin.UShort$Companion
com.squareup.picasso.StatsSnapshot:
    public void dump()
kotlin.jvm.internal.ArrayByteIterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9
kotlin.reflect.KProperty1
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1
kotlin.collections.MapsKt___MapsKt
androidx.appcompat.widget.TooltipCompat:
    private void <init>()
com.facebook.login.LoginManager$FragmentStartActivityDelegate
com.facebook.login.LoginManager$4
kotlin.coroutines.experimental.CoroutineContext$DefaultImpls
com.facebook.appevents.internal.InAppPurchaseEventManager:
    private static final int CACHE_CLEAR_TIME_LIMIT_SEC
    private static final int SKU_DETAIL_EXPIRE_TIME_SEC
    private static final java.lang.String SUBSCRIPTION
    private static final java.lang.String INAPP
    private static final int PURCHASE_EXPIRE_TIME_SEC
    private static final int PURCHASE_STOP_QUERY_TIME_SEC
    private static final int MAX_QUERY_PURCHASE_NUM
    private static final java.lang.String IN_APP_BILLING_SERVICE_STUB
    private static final java.lang.String IN_APP_BILLING_SERVICE
    private static final java.lang.String AS_INTERFACE
    private static final java.lang.String GET_SKU_DETAILS
    private static final java.lang.String GET_PURCHASES
    private static final java.lang.String GET_PURCHASE_HISTORY
    private static final java.lang.String IS_BILLING_SUPPORTED
    private static final java.lang.String ITEM_ID_LIST
    private static final java.lang.String RESPONSE_CODE
    private static final java.lang.String DETAILS_LIST
    private static final java.lang.String INAPP_PURCHASE_DATA_LIST
    private static final java.lang.String INAPP_CONTINUATION_TOKEN
    private static final java.lang.String LAST_CLEARED_TIME
    private static final java.lang.String SKU_DETAILS_STORE
    private static final java.lang.String PURCHASE_INAPP_STORE
kotlin.sequences.IndexingSequence$iterator$1
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
androidx.core.view.MenuCompat
kotlin.reflect.KParameter
com.google.zxing.client.result.ProductParsedResult
io.flutter.plugin.common.ActivityLifecycleListener
com.google.gson.JsonParseException:
    static final long serialVersionUID
com.facebook.internal.FileLruCache$ModifiedFile
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry
androidx.recyclerview.widget.ViewBoundsCheck$ViewBounds
androidx.appcompat.widget.ActivityChooserView$3
android.support.customtabs.IPostMessageService$Stub$Proxy
androidx.lifecycle.Transformations
androidx.swiperefreshlayout.R$layout
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1
androidx.customview.R$integer
androidx.browser.R$integer
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21
com.twitter.sdk.android.tweetui.internal.util.HtmlEntities$LookupEntityMap
com.twitter.sdk.android.core.identity.OAuthActivity:
    static final java.lang.String EXTRA_AUTH_CONFIG
    private static final java.lang.String STATE_PROGRESS
androidx.recyclerview.widget.MessageThreadUtil
android.support.v4.media.session.IMediaSession$Stub$Proxy:
    public java.lang.String getInterfaceDescriptor()
    public void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
    public boolean sendMediaButton(android.view.KeyEvent)
    public void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
    public boolean isTransportControlEnabled()
    public java.lang.String getPackageName()
    public java.lang.String getTag()
    public android.app.PendingIntent getLaunchPendingIntent()
    public long getFlags()
    public android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes()
    public void adjustVolume(int,int,java.lang.String)
    public void setVolumeTo(int,int,java.lang.String)
    public android.support.v4.media.MediaMetadataCompat getMetadata()
    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public java.util.List getQueue()
    public java.lang.CharSequence getQueueTitle()
    public android.os.Bundle getExtras()
    public int getRatingType()
    public boolean isCaptioningEnabled()
    public int getRepeatMode()
    public boolean isShuffleModeEnabledRemoved()
    public int getShuffleMode()
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
    public void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void removeQueueItemAt(int)
    public void prepare()
    public void prepareFromMediaId(java.lang.String,android.os.Bundle)
    public void prepareFromSearch(java.lang.String,android.os.Bundle)
    public void prepareFromUri(android.net.Uri,android.os.Bundle)
    public void play()
    public void playFromMediaId(java.lang.String,android.os.Bundle)
    public void playFromSearch(java.lang.String,android.os.Bundle)
    public void playFromUri(android.net.Uri,android.os.Bundle)
    public void skipToQueueItem(long)
    public void pause()
    public void stop()
    public void next()
    public void previous()
    public void fastForward()
    public void rewind()
    public void seekTo(long)
    public void rate(android.support.v4.media.RatingCompat)
    public void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
    public void setCaptioningEnabled(boolean)
    public void setRepeatMode(int)
    public void setShuffleModeEnabledRemoved(boolean)
    public void setShuffleMode(int)
    public void sendCustomAction(java.lang.String,android.os.Bundle)
androidx.cardview.R$dimen:
    private void <init>()
com.facebook.share.internal.MessengerShareContentUtility:
    public void <init>()
    public static final java.lang.String TITLE
    public static final java.lang.String SUBTITLE
    public static final java.lang.String URL
    public static final java.lang.String IMAGE_URL
    public static final java.lang.String BUTTONS
    public static final java.lang.String FALLBACK_URL
    public static final java.lang.String MESSENGER_EXTENSIONS
    public static final java.lang.String WEBVIEW_SHARE_BUTTON
    public static final java.lang.String SHARABLE
    public static final java.lang.String ATTACHMENT
    public static final java.lang.String ATTACHMENT_ID
    public static final java.lang.String ELEMENTS
    public static final java.lang.String DEFAULT_ACTION
    public static final java.lang.String SHARE_BUTTON_HIDE
    public static final java.lang.String BUTTON_TYPE
    public static final java.lang.String BUTTON_URL_TYPE
    public static final java.lang.String PREVIEW_DEFAULT
    public static final java.lang.String PREVIEW_OPEN_GRAPH
    public static final java.lang.String TEMPLATE_TYPE
    public static final java.lang.String TEMPLATE_GENERIC_TYPE
    public static final java.lang.String TEMPLATE_OPEN_GRAPH_TYPE
    public static final java.lang.String TEMPLATE_MEDIA_TYPE
    public static final java.lang.String ATTACHMENT_TYPE
    public static final java.lang.String ATTACHMENT_PAYLOAD
    public static final java.lang.String ATTACHMENT_TEMPLATE_TYPE
    public static final java.lang.String WEBVIEW_RATIO
    public static final java.lang.String WEBVIEW_RATIO_FULL
    public static final java.lang.String WEBVIEW_RATIO_TALL
    public static final java.lang.String WEBVIEW_RATIO_COMPACT
    public static final java.lang.String IMAGE_ASPECT_RATIO
    public static final java.lang.String IMAGE_RATIO_SQUARE
    public static final java.lang.String IMAGE_RATIO_HORIZONTAL
    public static final java.lang.String MEDIA_TYPE
    public static final java.lang.String MEDIA_VIDEO
    public static final java.lang.String MEDIA_IMAGE
androidx.core.app.TaskStackBuilder
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallbackProxy
androidx.recyclerview.widget.ViewBoundsCheck:
    static final int GT
    static final int EQ
    static final int LT
    static final int CVS_PVS_POS
    static final int FLAG_CVS_GT_PVS
    static final int FLAG_CVS_EQ_PVS
    static final int FLAG_CVS_LT_PVS
    static final int CVS_PVE_POS
    static final int FLAG_CVS_GT_PVE
    static final int FLAG_CVS_EQ_PVE
    static final int FLAG_CVS_LT_PVE
    static final int CVE_PVS_POS
    static final int FLAG_CVE_GT_PVS
    static final int FLAG_CVE_EQ_PVS
    static final int FLAG_CVE_LT_PVS
    static final int CVE_PVE_POS
    static final int FLAG_CVE_GT_PVE
    static final int FLAG_CVE_EQ_PVE
    static final int FLAG_CVE_LT_PVE
    static final int MASK
com.twitter.Extractor$IndexConverter
androidx.slidingpanelayout.R$integer
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator
okhttp3.Cache:
    public void <init>(java.io.File,long)
    void <init>(java.io.File,long,okhttp3.internal.io.FileSystem)
    private static java.lang.String urlToKey(okhttp3.Request)
    private okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
    private void remove(okhttp3.Request)
    private void update(okhttp3.Response,okhttp3.Response)
    private void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor)
    private synchronized void trackResponse(okhttp3.internal.cache.CacheStrategy)
    private synchronized void trackConditionalCacheHit()
    private static int readInt(okio.BufferedSource)
    static synthetic okhttp3.internal.cache.CacheRequest access$000(okhttp3.Cache,okhttp3.Response)
    static synthetic void access$100(okhttp3.Cache,okhttp3.Request)
    static synthetic void access$200(okhttp3.Cache,okhttp3.Response,okhttp3.Response)
    static synthetic void access$300(okhttp3.Cache)
    static synthetic void access$400(okhttp3.Cache,okhttp3.internal.cache.CacheStrategy)
    static synthetic okhttp3.internal.cache.DiskLruCache access$600(okhttp3.Cache)
    static synthetic int access$808(okhttp3.Cache)
    static synthetic int access$908(okhttp3.Cache)
    static synthetic int access$1000(okio.BufferedSource)
    okhttp3.Response get(okhttp3.Request)
    public void initialize()
    public void delete()
    public void evictAll()
    public java.util.Iterator urls()
    public synchronized int writeAbortCount()
    public synchronized int writeSuccessCount()
    public long size()
    public long maxSize()
    public void flush()
    public void close()
    public java.io.File directory()
    public boolean isClosed()
    public synchronized int networkCount()
    public synchronized int hitCount()
    public synchronized int requestCount()
    private final okhttp3.internal.cache.DiskLruCache cache
    private int writeSuccessCount
    private int writeAbortCount
    private int networkCount
    private int hitCount
    private int requestCount
    private static final int VERSION
    private static final int ENTRY_METADATA
    private static final int ENTRY_BODY
    private static final int ENTRY_COUNT
androidx.recyclerview.widget.ItemTouchHelper$Callback
com.google.zxing.client.result.EmailAddressParsedResult
com.facebook.share.widget.CreateAppGroupDialog$2
com.twitter.sdk.android.tweetui.R$styleable:
    private void <init>()
androidx.recyclerview.R$integer
kotlin.random.KotlinRandom
kotlin.collections.SlidingWindowKt
com.google.zxing.common.detector.WhiteRectangleDetector
androidx.recyclerview.widget.TileList$Tile
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult
com.facebook.core.R$color
androidx.slidingpanelayout.R$drawable
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper
androidx.loader.R$dimen
kotlin.ranges.ClosedFloatingPointRange
androidx.lifecycle.Transformations$2$1
com.twitter.sdk.android.tweetui.internal.util.HtmlEntities$Unescaped
androidx.viewpager.widget.PagerTitleStrip$PageListener
androidx.recyclerview.widget.DefaultItemAnimator$6
com.facebook.internal.FeatureManager:
    public void <init>()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$then$1
com.google.zxing.oned.MultiFormatOneDReader
com.facebook.internal.FileLruCache$BufferFile$1
io.flutter.view.AccessibilityBridge:
    public void reset()
    private static final java.lang.String TAG
    private static final int ACTION_SHOW_ON_SCREEN
    private static final float SCROLL_EXTENT_FOR_INFINITY
    private static final float SCROLL_POSITION_CAP_FOR_INFINITY
    private static final int ROOT_NODE_ID
    private static final int MIN_ENGINE_GENERATED_NODE_ID
androidx.appcompat.app.ActionBar$DisplayOptions
com.facebook.share.model.ShareCameraEffectContent$Builder
kotlin.jvm.internal.Ref$DoubleRef
androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy
com.facebook.internal.ImageRequest$Callback
okhttp3.internal.cache.DiskLruCache$Entry
com.google.zxing.client.result.EmailAddressResultParser
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
bolts.Task$10
okio.Okio:
    public static okio.Sink sink(java.io.OutputStream)
    public static varargs okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[])
    public static okio.Sink sink(java.io.File)
    public static okio.Sink appendingSink(java.io.File)
    public static varargs okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[])
org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
com.facebook.appevents.AccessTokenAppIdPair$SerializationProxyV1:
    private static final long serialVersionUID
androidx.annotation.RequiresFeature
com.facebook.share.internal.LikeContent$1
android.support.v4.media.session.MediaControllerCompat$TransportControls
androidx.media.AudioAttributesCompat$Builder
androidx.core.os.ParcelCompat
androidx.core.view.ViewPropertyAnimatorUpdateListener
com.facebook.login.LoginFragment:
    static final java.lang.String RESULT_KEY
    static final java.lang.String REQUEST_KEY
    static final java.lang.String EXTRA_REQUEST
    private static final java.lang.String TAG
    private static final java.lang.String NULL_CALLING_PKG_ERROR_MSG
    private static final java.lang.String SAVED_LOGIN_CLIENT
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21
com.facebook.share.internal.LikeActionController$GetPageLikesRequestWrapper
retrofit2.OkHttpCall:
    public synchronized okhttp3.Request request()
    public synchronized boolean isExecuted()
    public void cancel()
kotlin.jvm.internal.MutablePropertyReference2
androidx.customview.widget.ViewDragHelper$Callback
okhttp3.MultipartBody:
    static java.lang.StringBuilder appendQuotedString(java.lang.StringBuilder,java.lang.String)
    public okhttp3.MediaType type()
    public java.lang.String boundary()
    public int size()
    public java.util.List parts()
    public okhttp3.MultipartBody$Part part(int)
com.facebook.share.widget.LikeView$ObjectType
com.twitter.sdk.android.core.PersistedSessionManager:
    public void clearActiveSession()
    public void setSession(long,com.twitter.sdk.android.core.Session)
    public java.util.Map getSessionMap()
    private static final int NUM_SESSIONS
androidx.appcompat.widget.AppCompatImageButton:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.core.R$id:
    private void <init>()
okhttp3.internal.framed.FrameWriter:
    public abstract void synReply(boolean,int,java.util.List)
    public abstract void headers(int,java.util.List)
com.google.gson.LongSerializationPolicy$2:
    public com.google.gson.JsonElement serialize(java.lang.Long)
androidx.viewpager.widget.PagerTabStrip$1
androidx.core.content.PermissionChecker$PermissionResult
com.facebook.Profile:
    public android.net.Uri getProfilePictureUri(int,int)
    public java.lang.String getId()
    public java.lang.String getFirstName()
    public java.lang.String getMiddleName()
    public java.lang.String getLastName()
    public java.lang.String getName()
    public android.net.Uri getLinkUri()
    private static final java.lang.String ID_KEY
    private static final java.lang.String FIRST_NAME_KEY
    private static final java.lang.String MIDDLE_NAME_KEY
    private static final java.lang.String LAST_NAME_KEY
    private static final java.lang.String NAME_KEY
    private static final java.lang.String LINK_URI_KEY
com.facebook.appevents.PersistedEvents$SerializationProxyV1:
    private static final long serialVersionUID
com.twitter.sdk.android.core.identity.AuthHandler
com.facebook.FacebookButtonBase$1
com.twitter.sdk.android.core.internal.scribe.ScribeItem$Builder:
    public com.twitter.sdk.android.core.internal.scribe.ScribeItem$Builder setDescription(java.lang.String)
    public com.twitter.sdk.android.core.internal.scribe.ScribeItem$Builder setCardEvent(com.twitter.sdk.android.core.internal.scribe.ScribeItem$CardEvent)
com.twitter.sdk.android.tweetui.GalleryActivity:
    public static final java.lang.String GALLERY_ITEM
    static final java.lang.String MEDIA_ENTITY
io.flutter.plugins.packageinfo.R$integer
androidx.customview.R$drawable
androidx.core.view.WindowCompat
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate
android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    public java.lang.Object getCustomAction()
    public java.lang.String getAction()
    public java.lang.CharSequence getName()
    public int getIcon()
    public android.os.Bundle getExtras()
com.google.zxing.common.GlobalHistogramBinarizer
com.squareup.picasso.Request$Builder:
    public void <init>(android.net.Uri)
    public void <init>(int)
    private void <init>(com.squareup.picasso.Request)
    synthetic void <init>(com.squareup.picasso.Request,com.squareup.picasso.Request$1)
    boolean hasPriority()
    public com.squareup.picasso.Request$Builder setUri(android.net.Uri)
    public com.squareup.picasso.Request$Builder setResourceId(int)
    public com.squareup.picasso.Request$Builder stableKey(java.lang.String)
    public com.squareup.picasso.Request$Builder clearResize()
    public com.squareup.picasso.Request$Builder clearCenterCrop()
    public com.squareup.picasso.Request$Builder centerInside()
    public com.squareup.picasso.Request$Builder clearCenterInside()
    public com.squareup.picasso.Request$Builder onlyScaleDown()
    public com.squareup.picasso.Request$Builder clearOnlyScaleDown()
    public com.squareup.picasso.Request$Builder rotate(float)
    public com.squareup.picasso.Request$Builder rotate(float,float,float)
    public com.squareup.picasso.Request$Builder clearRotation()
    public com.squareup.picasso.Request$Builder config(android.graphics.Bitmap$Config)
    public com.squareup.picasso.Request$Builder priority(com.squareup.picasso.Picasso$Priority)
    public com.squareup.picasso.Request$Builder transform(com.squareup.picasso.Transformation)
    public com.squareup.picasso.Request$Builder transform(java.util.List)
androidx.appcompat.widget.ActionMenuPresenter$SavedState
kotlin.jvm.internal.Reflection
androidx.appcompat.app.WindowDecorActionBar$3
androidx.core.os.LocaleListHelper
com.facebook.share.model.ShareHashtag$Builder:
    public java.lang.String getHashtag()
    public synthetic bridge com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
    public synthetic bridge java.lang.Object build()
androidx.recyclerview.widget.RecyclerView$LayoutParams:
    public boolean viewNeedsUpdate()
    public int getViewPosition()
    public int getViewAdapterPosition()
androidx.fragment.R
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase
com.twitter.sdk.android.core.internal.scribe.ScribeItem$CardEvent:
    public void <init>(int)
    final int promotionCardType
kotlin.collections.ArraysKt__ArraysKt
androidx.appcompat.app.AppCompatDelegateImpl$7
com.facebook.internal.CollectionMapper$OnMapValueCompleteListener
okhttp3.CertificatePinner:
    public varargs void check(java.lang.String,java.security.cert.Certificate[])
io.flutter.embedding.engine.systemchannels.LifecycleChannel:
    private static final java.lang.String TAG
bolts.CancellationTokenSource
androidx.appcompat.app.ActionBar$OnNavigationListener
org.jetbrains.annotations.NonNls
kotlin.text.FlagEnum
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper
kotlin.coroutines.SafeContinuation
androidx.core.view.DragStartHelper$1
com.twitter.sdk.android.tweetcomposer.TweetComposer:
    private static final java.lang.String MIME_TYPE_PLAIN_TEXT
    private static final java.lang.String MIME_TYPE_JPEG
    private static final java.lang.String TWITTER_PACKAGE_NAME
    private static final java.lang.String WEB_INTENT
    private static final java.lang.String KIT_SCRIBE_NAME
com.facebook.core.R$style
okhttp3.internal.io.FileSystem$1
kotlin.io.FileSystemException
kotlin.jvm.internal.ByteCompanionObject
com.facebook.internal.NativeAppCallAttachmentStore:
    public static void cleanupAttachmentsForCall(java.util.UUID)
    static final java.lang.String ATTACHMENTS_DIR_NAME
kotlin.random.PlatformRandomKt
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
kotlin.text.TypeAliasesKt
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator
com.facebook.appevents.AnalyticsUserIDStore:
    public static void setUserID(java.lang.String)
    static synthetic java.util.concurrent.locks.ReentrantReadWriteLock access$100()
    static synthetic java.lang.String access$202(java.lang.String)
    static synthetic java.lang.String access$200()
    private static final java.lang.String ANALYTICS_USER_ID_KEY
androidx.vectordrawable.R$id
com.twitter.sdk.android.tweetui.TimelineStateHolder
androidx.appcompat.widget.SearchView:
    public boolean isIconfiedByDefault()
    public boolean isSubmitButtonEnabled()
    public boolean isQueryRefinementEnabled()
    static final boolean DBG
    static final java.lang.String LOG_TAG
    private static final java.lang.String IME_OPTION_NO_MICROPHONE
com.facebook.share.internal.LikeActionController$AbstractRequestWrapper
kotlin.time.MonoClock
androidx.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor
androidx.legacy.widget.Space
com.facebook.share.model.ShareMessengerActionButton:
    protected void <init>(com.facebook.share.model.ShareMessengerActionButton$Builder)
kotlin.sequences.SequencesKt__SequencesJVMKt
androidx.customview.widget.FocusStrategy
androidx.appcompat.widget.ViewUtils:
    private void <init>()
    public static void makeOptionalFitsSystemWindows(android.view.View)
    private static final java.lang.String TAG
com.google.zxing.pdf417.decoder.Codeword
io.flutter.embedding.android.AndroidTouchProcessor:
    private static final int POINTER_DATA_FIELD_COUNT
    private static final int BYTES_PER_FIELD
    private static final int POINTER_DATA_FLAG_BATCHED
    private static final int _POINTER_BUTTON_PRIMARY
io.flutter.plugins.share.R$integer
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$2
androidx.core.provider.FontsContractCompat$FontFamilyResult:
    public static final int STATUS_OK
    public static final int STATUS_WRONG_CERTIFICATES
    public static final int STATUS_UNEXPECTED_DATA_PROVIDED
kotlin.Deprecated
io.flutter.plugin.platform.PlatformViewFactory:
    public void <init>(io.flutter.plugin.common.MessageCodec)
androidx.core.R$style
com.twitter.sdk.android.core.internal.scribe.QueueFile$Element:
    static final int HEADER_LENGTH
com.facebook.internal.CollectionMapper$OnErrorListener
com.facebook.GraphRequestBatch:
    public void <init>()
    public void <init>(com.facebook.GraphRequestBatch)
    public void setTimeout(int)
    public void removeCallback(com.facebook.GraphRequestBatch$Callback)
    public final void setBatchApplicationId(java.lang.String)
androidx.recyclerview.widget.LayoutState:
    static final java.lang.String TAG
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
android.support.v4.media.session.PlaybackStateCompat$Actions
com.twitter.sdk.android.tweetcomposer.R$string
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7
androidx.viewpager.R$styleable
io.flutter.embedding.engine.loader.FlutterLoader:
    private java.lang.String fullAssetPathFrom(java.lang.String)
    static synthetic io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader)
    public void ensureInitializationCompleteAsync(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
    public java.lang.String getLookupKeyForAsset(java.lang.String)
    public java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
    private static final java.lang.String TAG
    private static final java.lang.String AOT_SHARED_LIBRARY_NAME
    private static final java.lang.String SNAPSHOT_ASSET_PATH_KEY
    private static final java.lang.String VM_SNAPSHOT_DATA_KEY
    private static final java.lang.String ISOLATE_SNAPSHOT_DATA_KEY
    private static final java.lang.String FLUTTER_ASSETS_DIR_KEY
    private static final java.lang.String DEFAULT_AOT_SHARED_LIBRARY_NAME
    private static final java.lang.String DEFAULT_VM_SNAPSHOT_DATA
    private static final java.lang.String DEFAULT_ISOLATE_SNAPSHOT_DATA
    private static final java.lang.String DEFAULT_LIBRARY
    private static final java.lang.String DEFAULT_KERNEL_BLOB
    private static final java.lang.String DEFAULT_FLUTTER_ASSETS_DIR
kotlin.collections.UCollectionsKt___UCollectionsKt
com.facebook.share.widget.JoinAppGroupDialog$WebHandler
androidx.core.app.JobIntentService$CompatWorkEnqueuer
com.twitter.sdk.android.tweetui.TweetTimelineRecyclerViewAdapter$2
androidx.swiperefreshlayout.R$string
com.google.zxing.qrcode.decoder.DataMask$8
androidx.asynclayoutinflater.R$dimen
androidx.media.MediaSessionManagerImplBase
androidx.browser.customtabs.CustomTabsIntent:
    public static int getMaxToolbarItems()
    public static android.content.Intent setAlwaysUseBrowserUI(android.content.Intent)
    public static boolean shouldAlwaysUseBrowserUI(android.content.Intent)
    private static final java.lang.String EXTRA_USER_OPT_OUT_FROM_CUSTOM_TABS
    public static final java.lang.String EXTRA_SESSION
    public static final java.lang.String EXTRA_TOOLBAR_COLOR
    public static final java.lang.String EXTRA_ENABLE_URLBAR_HIDING
    public static final java.lang.String EXTRA_CLOSE_BUTTON_ICON
    public static final java.lang.String EXTRA_TITLE_VISIBILITY_STATE
    public static final int NO_TITLE
    public static final int SHOW_PAGE_TITLE
    public static final java.lang.String EXTRA_ACTION_BUTTON_BUNDLE
    public static final java.lang.String EXTRA_TOOLBAR_ITEMS
    public static final java.lang.String EXTRA_SECONDARY_TOOLBAR_COLOR
    public static final java.lang.String KEY_ICON
    public static final java.lang.String KEY_DESCRIPTION
    public static final java.lang.String KEY_PENDING_INTENT
    public static final java.lang.String EXTRA_TINT_ACTION_BUTTON
    public static final java.lang.String EXTRA_MENU_ITEMS
    public static final java.lang.String KEY_MENU_ITEM_TITLE
    public static final java.lang.String EXTRA_EXIT_ANIMATION_BUNDLE
    public static final java.lang.String EXTRA_DEFAULT_SHARE_MENU_ITEM
    public static final java.lang.String EXTRA_REMOTEVIEWS
    public static final java.lang.String EXTRA_REMOTEVIEWS_VIEW_IDS
    public static final java.lang.String EXTRA_REMOTEVIEWS_PENDINGINTENT
    public static final java.lang.String EXTRA_REMOTEVIEWS_CLICKED_ID
    public static final java.lang.String EXTRA_ENABLE_INSTANT_APPS
    public static final java.lang.String KEY_ID
    public static final int TOOLBAR_ACTION_BUTTON_ID
    private static final int MAX_TOOLBAR_ITEMS
com.google.gson.JsonSyntaxException:
    private static final long serialVersionUID
androidx.core.view.ViewCompat$FocusDirection
androidx.appcompat.view.menu.CascadingMenuPopup$HorizPosition
com.google.zxing.client.result.BizcardResultParser
androidx.annotation.StyleableRes
androidx.media.AudioAttributesCompat:
    void <init>(androidx.media.AudioAttributesImpl)
    public static androidx.media.AudioAttributesCompat wrap(java.lang.Object)
    public static androidx.media.AudioAttributesCompat fromBundle(android.os.Bundle)
    static int usageForStreamType(int)
    public static void setForceLegacyBehavior(boolean)
    static int toVolumeStreamType(boolean,androidx.media.AudioAttributesCompat)
    public int getVolumeControlStream()
    public java.lang.Object unwrap()
    public int getLegacyStreamType()
    public int getContentType()
    public int getUsage()
    public int getFlags()
    public android.os.Bundle toBundle()
    int getRawLegacyStreamType()
    private static final java.lang.String TAG
    public static final int CONTENT_TYPE_UNKNOWN
    public static final int CONTENT_TYPE_SPEECH
    public static final int CONTENT_TYPE_MUSIC
    public static final int CONTENT_TYPE_MOVIE
    public static final int CONTENT_TYPE_SONIFICATION
    public static final int USAGE_UNKNOWN
    public static final int USAGE_MEDIA
    public static final int USAGE_VOICE_COMMUNICATION
    public static final int USAGE_VOICE_COMMUNICATION_SIGNALLING
    public static final int USAGE_ALARM
    public static final int USAGE_NOTIFICATION
    public static final int USAGE_NOTIFICATION_RINGTONE
    public static final int USAGE_NOTIFICATION_COMMUNICATION_REQUEST
    public static final int USAGE_NOTIFICATION_COMMUNICATION_INSTANT
    public static final int USAGE_NOTIFICATION_COMMUNICATION_DELAYED
    public static final int USAGE_NOTIFICATION_EVENT
    public static final int USAGE_ASSISTANCE_ACCESSIBILITY
    public static final int USAGE_ASSISTANCE_NAVIGATION_GUIDANCE
    public static final int USAGE_ASSISTANCE_SONIFICATION
    public static final int USAGE_GAME
    private static final int USAGE_VIRTUAL_SOURCE
    public static final int USAGE_ASSISTANT
    private static final int SUPPRESSIBLE_NOTIFICATION
    private static final int SUPPRESSIBLE_CALL
    static boolean sForceLegacyBehavior
    public static final int FLAG_AUDIBILITY_ENFORCED
    static final int FLAG_SECURE
    static final int FLAG_SCO
    static final int FLAG_BEACON
    public static final int FLAG_HW_AV_SYNC
    static final int FLAG_HW_HOTWORD
    static final int FLAG_BYPASS_INTERRUPTION_POLICY
    static final int FLAG_BYPASS_MUTE
    static final int FLAG_LOW_LATENCY
    static final int FLAG_DEEP_BUFFER
    static final int FLAG_ALL
    static final int FLAG_ALL_PUBLIC
    static final int INVALID_STREAM_TYPE
    static final java.lang.String AUDIO_ATTRIBUTES_FRAMEWORKS
    static final java.lang.String AUDIO_ATTRIBUTES_USAGE
    static final java.lang.String AUDIO_ATTRIBUTES_CONTENT_TYPE
    static final java.lang.String AUDIO_ATTRIBUTES_FLAGS
    static final java.lang.String AUDIO_ATTRIBUTES_LEGACY_STREAM_TYPE
kotlin.UShortKt
kotlin.collections.CollectionsKt__IterablesKt
androidx.core.provider.FontsContractCompat$4
com.google.zxing.aztec.encoder.HighLevelEncoder:
    static final int MODE_UPPER
    static final int MODE_LOWER
    static final int MODE_DIGIT
    static final int MODE_MIXED
    static final int MODE_PUNCT
kotlin.io.ExceptionsKt
kotlin.text.Regex$findAll$2
androidx.core.text.HtmlCompat
androidx.core.view.accessibility.AccessibilityRecordCompat:
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain()
    public static void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
    public static int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
    public static int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
    public java.lang.Object getImpl()
    public void setSource(android.view.View)
    public void setSource(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource()
    public int getWindowId()
    public boolean isChecked()
    public void setChecked(boolean)
    public boolean isEnabled()
    public void setEnabled(boolean)
    public boolean isPassword()
    public void setPassword(boolean)
    public boolean isFullScreen()
    public void setFullScreen(boolean)
    public boolean isScrollable()
    public void setScrollable(boolean)
    public int getItemCount()
    public void setItemCount(int)
    public int getCurrentItemIndex()
    public void setCurrentItemIndex(int)
    public int getFromIndex()
    public void setFromIndex(int)
    public int getToIndex()
    public void setToIndex(int)
    public int getScrollX()
    public void setScrollX(int)
    public int getScrollY()
    public void setScrollY(int)
    public int getMaxScrollX()
    public void setMaxScrollX(int)
    public int getMaxScrollY()
    public void setMaxScrollY(int)
    public int getAddedCount()
    public void setAddedCount(int)
    public int getRemovedCount()
    public void setRemovedCount(int)
    public java.lang.CharSequence getClassName()
    public void setClassName(java.lang.CharSequence)
    public java.util.List getText()
    public java.lang.CharSequence getBeforeText()
    public void setBeforeText(java.lang.CharSequence)
    public java.lang.CharSequence getContentDescription()
    public void setContentDescription(java.lang.CharSequence)
    public android.os.Parcelable getParcelableData()
    public void setParcelableData(android.os.Parcelable)
    public void recycle()
    public int hashCode()
    public boolean equals(java.lang.Object)
    private final android.view.accessibility.AccessibilityRecord mRecord
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    private static void dumpKeyframes(java.lang.Object[],java.lang.String)
    private void <init>()
    private static final java.lang.String TAG
    private static final int TOGETHER
    private static final int MAX_NUM_POINTS
    private static final int VALUE_TYPE_FLOAT
    private static final int VALUE_TYPE_INT
    private static final int VALUE_TYPE_PATH
    private static final int VALUE_TYPE_COLOR
    private static final int VALUE_TYPE_UNDEFINED
    private static final boolean DBG_ANIMATOR_INFLATER
androidx.slidingpanelayout.widget.SlidingPaneLayout
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer
androidx.appcompat.app.ActionBar$Tab:
    public abstract int getPosition()
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
    public abstract java.lang.Object getTag()
    public abstract androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
    public static final int INVALID_POSITION
androidx.appcompat.app.AppCompatCallback
okhttp3.Cache$CacheRequestImpl
kotlin.coroutines.jvm.internal.RunSuspendKt
com.twitter.sdk.android.tweetui.FormattedMediaEntity
com.google.zxing.oned.rss.expanded.decoders.AI01decoder
androidx.browser.browseractions.BrowserActionsFallbackMenuUi$1
com.facebook.FacebookButtonBase
com.facebook.internal.NativeProtocol$EffectTestAppInfo:
    static final java.lang.String EFFECT_TEST_APP_PACKAGE
androidx.core.provider.FontsContractCompat$4$4
com.twitter.sdk.android.core.R$color
com.twitter.sdk.android.R$color
kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsLast$1
com.google.zxing.pdf417.PDF417Writer:
    public com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int)
    private static final int WHITE_SPACE
    private static final int DEFAULT_ERROR_CORRECTION_LEVEL
kotlin.text.StringsKt___StringsKt$windowed$1
com.twitter.Validator:
    public boolean isValidTweet(java.lang.String)
    public int getShortUrlLength()
    public void setShortUrlLength(int)
    public int getShortUrlLengthHttps()
    public void setShortUrlLengthHttps(int)
    public static final int MAX_TWEET_LENGTH
kotlin.jvm.functions.Function22
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallbackProxy
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1
androidx.annotation.FloatRange
androidx.swiperefreshlayout.R$color
kotlin.jvm.internal.FunctionBase
androidx.appcompat.graphics.drawable.DrawerArrowDrawable$ArrowDirection
com.google.zxing.Dimension:
    public void <init>(int,int)
android.support.customtabs.ICustomTabsService$Stub
okhttp3.internal.cache.DiskLruCache$2
androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot
com.google.zxing.common.BitSource
androidx.core.view.ViewPropertyAnimatorCompat:
    void <init>(android.view.View)
    private void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener)
    public androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)
    public androidx.core.view.ViewPropertyAnimatorCompat alpha(float)
    public androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable)
    public long getDuration()
    public androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
    public android.view.animation.Interpolator getInterpolator()
    public androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
    public long getStartDelay()
    public androidx.core.view.ViewPropertyAnimatorCompat rotation(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat x(float)
    public androidx.core.view.ViewPropertyAnimatorCompat xBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat y(float)
    public androidx.core.view.ViewPropertyAnimatorCompat yBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)
    public androidx.core.view.ViewPropertyAnimatorCompat z(float)
    public androidx.core.view.ViewPropertyAnimatorCompat zBy(float)
    public void start()
    public androidx.core.view.ViewPropertyAnimatorCompat withLayer()
    public androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable)
    public androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)
    public androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)
    private java.lang.ref.WeakReference mView
    java.lang.Runnable mStartAction
    java.lang.Runnable mEndAction
    int mOldLayerType
    private static final java.lang.String TAG
    static final int LISTENER_TAG_ID
com.twitter.sdk.android.core.SessionManager:
    public abstract void clearActiveSession()
    public abstract void setSession(long,com.twitter.sdk.android.core.Session)
    public abstract java.util.Map getSessionMap()
okhttp3.internal.framed.FramedStream:
    public okhttp3.internal.framed.FramedConnection getConnection()
    public java.util.List getRequestHeaders()
    public synchronized okhttp3.internal.framed.ErrorCode getErrorCode()
    public void reply(java.util.List,boolean)
com.twitter.sdk.android.core.internal.persistence.FileStoreImpl:
    public java.io.File getCacheDir()
    public java.io.File getExternalCacheDir()
    public java.io.File getExternalFilesDir()
    boolean isExternalStorageAvailable()
androidx.core.content.res.ComplexColorCompat:
    private static final java.lang.String LOG_TAG
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder
androidx.fragment.app.FragmentTabHost
android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    void <init>(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback,android.os.Handler)
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback:
    public abstract void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.jvm.internal.Ref$FloatRef
androidx.browser.customtabs.CustomTabsService$1$1
io.flutter.plugins.urllauncher.R$id
io.flutter.plugins.connectivity.R$dimen
io.flutter.embedding.engine.renderer.FlutterRenderer:
    public android.graphics.Bitmap getBitmap()
    public void setAccessibilityFeatures(int)
    public void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
    private static final java.lang.String TAG
kotlin.text.MatchResult
bolts.AppLinks
androidx.appcompat.widget.AppCompatCheckedTextView
kotlin.ranges.ULongRange$Companion
androidx.recyclerview.widget.ItemTouchUIUtilImpl
kotlin.sequences.GeneratorSequence
android.support.v4.media.session.MediaSessionCompatApi23$Callback
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1
com.google.zxing.oned.UPCAReader
androidx.customview.widget.ExploreByTouchHelper
android.support.v4.media.session.MediaControllerCompatApi23
com.google.zxing.oned.Code93Writer:
    protected static int appendPattern(boolean[],int,int[],boolean)
com.twitter.sdk.android.tweetcomposer.R$layout:
    private void <init>()
androidx.annotation.CheckResult
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel:
    private static final java.lang.String TAG
io.flutter.embedding.engine.systemchannels.PlatformChannel:
    private static final java.lang.String TAG
androidx.browser.customtabs.PostMessageService
kotlin.Suppress
com.twitter.sdk.android.tweetui.TwitterListTimeline
androidx.appcompat.widget.AppCompatCompoundButtonHelper
kotlin.collections.GroupingKt
androidx.core.graphics.drawable.WrappedDrawableApi21:
    private static final java.lang.String TAG
com.facebook.share.internal.LikeActionController$5
kotlin.internal.RequireKotlin
androidx.core.app.NotificationCompat$Action
com.twitter.sdk.android.tweetui.TimelineDelegate$NextCallback
androidx.appcompat.R$style:
    private void <init>()
io.flutter.embedding.android.FlutterEngineConfigurator
androidx.recyclerview.widget.AsyncDifferConfig
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$1
com.facebook.share.widget.JoinAppGroupDialog$Result
kotlin.internal.PlatformImplementations$ReflectAddSuppressedMethod
kotlin.coroutines.ContinuationKt
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener:
    public abstract void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.zxing.RGBLuminanceSource
androidx.core.content.res.ConfigurationHelper
kotlin.internal.OnlyInputTypes
bolts.ExecutorException
kotlin.jvm.internal.EnumCompanionObject
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback
com.facebook.appevents.AppEventsLogger$ProductCondition
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    protected void onBoundsChange(android.graphics.Rect)
com.twitter.sdk.android.tweetui.TweetRepository:
    private void deliverTweet(com.twitter.sdk.android.core.models.Tweet,com.twitter.sdk.android.core.Callback)
    com.twitter.sdk.android.tweetui.FormattedTweetText formatTweetText(com.twitter.sdk.android.core.models.Tweet)
    void updateCache(com.twitter.sdk.android.core.models.Tweet)
    void retweet(long,com.twitter.sdk.android.core.Callback)
    void unretweet(long,com.twitter.sdk.android.core.Callback)
    void loadTweet(long,com.twitter.sdk.android.core.Callback)
    void loadTweets(java.util.List,com.twitter.sdk.android.core.Callback)
    private static final int DEFAULT_CACHE_SIZE
okhttp3.internal.framed.Variant:
    public abstract okhttp3.Protocol getProtocol()
com.squareup.picasso.Downloader:
    public abstract void shutdown()
androidx.core.app.TaskStackBuilder$SupportParentable
bolts.Task$1
androidx.viewpager.widget.ViewPager:
    public void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
    public void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
    public void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
    public void clearOnPageChangeListeners()
    public void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer)
    public void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int)
    androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
    void smoothScrollTo(int,int)
    public boolean beginFakeDrag()
    public void endFakeDrag()
    public void fakeDragBy(float)
    public boolean isFakeDragging()
    private long mFakeDragBeginTime
    private static final java.lang.String TAG
    private static final boolean DEBUG
    private static final boolean USE_CACHE
    private static final int DEFAULT_OFFSCREEN_PAGES
    private static final int MAX_SETTLE_DURATION
    private static final int MIN_DISTANCE_FOR_FLING
    private static final int DEFAULT_GUTTER_SIZE
    private static final int MIN_FLING_VELOCITY
    private static final int INVALID_POINTER
    private static final int CLOSE_ENOUGH
    private static final int DRAW_ORDER_DEFAULT
    private static final int DRAW_ORDER_FORWARD
    private static final int DRAW_ORDER_REVERSE
    public static final int SCROLL_STATE_IDLE
    public static final int SCROLL_STATE_DRAGGING
    public static final int SCROLL_STATE_SETTLING
kotlin.internal.jdk7.JDK7PlatformImplementations
com.google.zxing.multi.GenericMultipleBarcodeReader
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    private static final java.lang.String TAG
    private static final int DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX
    static final float UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE
    private static final int VERY_WIDE
androidx.vectordrawable.graphics.drawable.Animatable2Compat:
    public abstract void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public abstract boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public abstract void clearAnimationCallbacks()
com.google.zxing.oned.rss.expanded.decoders.DecodedObject
okhttp3.internal.cache.DiskLruCache$Editor
io.flutter.plugins.urllauncher.R
androidx.core.app.FrameMetricsAggregator
kotlin.coroutines.experimental.CoroutinesKt
com.facebook.share.widget.JoinAppGroupDialog$1
io.flutter.plugins.connectivity.R$style
android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy
androidx.fragment.R$drawable
androidx.core.graphics.PaintCompat
androidx.recyclerview.R$attr
com.twitter.sdk.android.core.models.Entity:
    public void <init>(int,int)
    public int getStart()
    public int getEnd()
    public final java.util.List indices
    private static final int START_INDEX
    private static final int END_INDEX
okhttp3.FormBody:
    public java.lang.String name(int)
com.google.gson.reflect.TypeToken:
    private static boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)
    private static boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)
    private static boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)
    private static varargs java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])
    private static boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)
    public boolean isAssignableFrom(java.lang.Class)
    public boolean isAssignableFrom(java.lang.reflect.Type)
    public boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
com.appleeducate.getversion.R$integer
androidx.viewpager.R$layout
androidx.legacy.coreutils.R
androidx.appcompat.R$anim
kotlin.Result$Companion
kotlin.internal.PlatformImplementations
kotlin.text.Charsets
com.facebook.share.model.ShareOpenGraphObject:
    private void <init>(com.facebook.share.model.ShareOpenGraphObject$Builder)
    synthetic void <init>(com.facebook.share.model.ShareOpenGraphObject$Builder,com.facebook.share.model.ShareOpenGraphObject$1)
kotlin.jvm.internal.BooleanSpreadBuilder
kotlin.system.ProcessKt
zhuoyuan.li.fluttershareme.FlutterShareMePlugin:
    public static void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
android.support.v4.media.session.PlaybackStateCompat$ErrorCode
com.facebook.share.internal.LikeActionController$AbstractRequestWrapper$1
androidx.customview.widget.ExploreByTouchHelper$2
androidx.recyclerview.widget.RecyclerView$2
kotlin.jvm.internal.MutablePropertyReference
kotlin.reflect.KProperty2$Getter
com.twitter.sdk.android.tweetui.internal.util.IntHashMap$Entry
androidx.viewpager.R$string
com.twitter.sdk.android.core.internal.scribe.ScribeEventFactory:
    public void <init>()
    public static com.twitter.sdk.android.core.internal.scribe.ScribeEvent newScribeEvent(com.twitter.sdk.android.core.internal.scribe.EventNamespace,long,java.lang.String,java.lang.String)
com.facebook.appevents.AppEventStore:
    private static final java.lang.String PERSISTED_EVENTS_FILENAME
com.facebook.share.widget.GameRequestDialog$Result
okio.ForwardingSource:
    public final okio.Source delegate()
com.facebook.share.R$layout
kotlin.internal.PlatformDependent
androidx.fragment.app.FragmentPagerAdapter
bolts.Task$15$1
com.twitter.sdk.android.core.R$drawable
androidx.legacy.coreui.R$styleable
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1
androidx.annotation.IntegerRes
kotlin.ranges.LongProgression$Companion
com.twitter.sdk.android.core.internal.network.GuestAuthenticator:
    static final int MAX_RETRIES
com.twitter.sdk.android.tweetui.TweetTextLinkifier$2
com.facebook.WebDialog
okhttp3.Credentials
androidx.core.R
kotlin.reflect.KClass$DefaultImpls
kotlin.jvm.functions.Function1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    public int getPlaybackType()
    public int getAudioStream()
    public int getVolumeControl()
    public int getMaxVolume()
    public int getCurrentVolume()
    public static final int PLAYBACK_TYPE_LOCAL
    public static final int PLAYBACK_TYPE_REMOTE
androidx.appcompat.app.AlertController$1
kotlin.jvm.internal.FloatCompanionObject
androidx.core.view.ViewPropertyAnimatorListenerAdapter
com.google.gson.internal.bind.TypeAdapters$27:
    private static final java.lang.String YEAR
    private static final java.lang.String MONTH
    private static final java.lang.String DAY_OF_MONTH
    private static final java.lang.String HOUR_OF_DAY
    private static final java.lang.String MINUTE
    private static final java.lang.String SECOND
io.flutter.plugin.common.StandardMessageCodec:
    private static final java.lang.String TAG
    private static final byte NULL
    private static final byte TRUE
    private static final byte FALSE
    private static final byte INT
    private static final byte LONG
    private static final byte BIGINT
    private static final byte DOUBLE
    private static final byte STRING
    private static final byte BYTE_ARRAY
    private static final byte INT_ARRAY
    private static final byte LONG_ARRAY
    private static final byte DOUBLE_ARRAY
    private static final byte LIST
    private static final byte MAP
kotlin.experimental.ExperimentalTypeInference
kotlin.ranges.ComparableRange
com.google.gson.internal.LinkedHashTreeMap$1
bolts.Bolts
kotlin.collections.UShortIterator
androidx.fragment.app.FragmentManagerImpl:
    public boolean executePendingTransactions()
    public void popBackStack()
    public void popBackStack(java.lang.String,int)
    public boolean popBackStackImmediate(java.lang.String,int)
    public boolean popBackStackImmediate(int,int)
    public int getBackStackEntryCount()
    public androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    java.util.List getActiveFragments()
    int getActiveFragmentCount()
    public androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    public boolean isDestroyed()
    public void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)
    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    static final java.lang.String TAG
    static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG
    static final java.lang.String TARGET_STATE_TAG
    static final java.lang.String VIEW_STATE_TAG
    static final java.lang.String USER_VISIBLE_HINT_TAG
    static final int ANIM_DUR
    public static final int ANIM_STYLE_OPEN_ENTER
    public static final int ANIM_STYLE_OPEN_EXIT
    public static final int ANIM_STYLE_CLOSE_ENTER
    public static final int ANIM_STYLE_CLOSE_EXIT
    public static final int ANIM_STYLE_FADE_ENTER
    public static final int ANIM_STYLE_FADE_EXIT
androidx.core.content.pm.ShortcutInfoCompat
androidx.asynclayoutinflater.R$attr
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$4
com.twitter.sdk.android.tweetui.BaseTimeline
androidx.core.app.NotificationCompat$Extender
com.google.zxing.oned.rss.expanded.decoders.DecodedChar
androidx.browser.browseractions.BrowserActionsFallbackMenuUi
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1
com.twitter.sdk.android.core.internal.oauth.OAuth2Token:
    public void <init>(java.lang.String,java.lang.String,long)
    public boolean isExpired()
    public static final java.lang.String TOKEN_TYPE_BEARER
androidx.core.graphics.TypefaceCompatApi24Impl:
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    private void offsetFullSpansForRemoval(int,int)
    private void offsetFullSpansForAddition(int,int)
    void offsetForRemoval(int,int)
    void offsetForAddition(int,int)
    private static final int MIN_SIZE
com.facebook.internal.ServerProtocol:
    public static android.os.Bundle getQueryParamsForPlatformActivityIntentWebFallback(java.lang.String,int,android.os.Bundle)
    private static final java.lang.String DIALOG_AUTHORITY_FORMAT
    public static final java.lang.String DIALOG_PATH
    public static final java.lang.String DIALOG_PARAM_ACCESS_TOKEN
    public static final java.lang.String DIALOG_PARAM_APP_ID
    public static final java.lang.String DIALOG_PARAM_AUTH_TYPE
    public static final java.lang.String DIALOG_PARAM_CLIENT_ID
    public static final java.lang.String DIALOG_PARAM_DISPLAY
    public static final java.lang.String DIALOG_PARAM_DISPLAY_TOUCH
    public static final java.lang.String DIALOG_PARAM_E2E
    public static final java.lang.String DIALOG_PARAM_LEGACY_OVERRIDE
    public static final java.lang.String DIALOG_PARAM_REDIRECT_URI
    public static final java.lang.String DIALOG_PARAM_RESPONSE_TYPE
    public static final java.lang.String DIALOG_PARAM_RETURN_SCOPES
    public static final java.lang.String DIALOG_PARAM_SCOPE
    public static final java.lang.String DIALOG_PARAM_SSO_DEVICE
    public static final java.lang.String DIALOG_PARAM_DEFAULT_AUDIENCE
    public static final java.lang.String DIALOG_PARAM_SDK_VERSION
    public static final java.lang.String DIALOG_PARAM_STATE
    public static final java.lang.String DIALOG_REREQUEST_AUTH_TYPE
    public static final java.lang.String DIALOG_RESPONSE_TYPE_TOKEN_AND_SIGNED_REQUEST
    public static final java.lang.String DIALOG_RETURN_SCOPES_TRUE
    public static final java.lang.String DIALOG_REDIRECT_URI
    public static final java.lang.String DIALOG_REDIRECT_CHROME_OS_URI
    public static final java.lang.String DIALOG_CANCEL_URI
    public static final java.lang.String FALLBACK_DIALOG_PARAM_APP_ID
    public static final java.lang.String FALLBACK_DIALOG_PARAM_BRIDGE_ARGS
    public static final java.lang.String FALLBACK_DIALOG_PARAM_KEY_HASH
    public static final java.lang.String FALLBACK_DIALOG_PARAM_METHOD_ARGS
    public static final java.lang.String FALLBACK_DIALOG_PARAM_METHOD_RESULTS
    public static final java.lang.String FALLBACK_DIALOG_PARAM_VERSION
    public static final java.lang.String FALLBACK_DIALOG_DISPLAY_VALUE_TOUCH
    private static final java.lang.String GRAPH_VIDEO_URL_FORMAT
    private static final java.lang.String GRAPH_URL_FORMAT
    private static final java.lang.String GRAPH_API_VERSION
    public static final java.lang.String errorConnectionFailure
com.facebook.share.DeviceShareDialog$1
kotlin.sequences.SequencesKt___SequencesKt$sorted$1
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper
androidx.appcompat.view.SupportActionModeWrapper
androidx.appcompat.widget.DropDownListView:
    public int lookForSelectablePosition(int,boolean)
    public static final int INVALID_POSITION
    public static final int NO_POSITION
com.facebook.appevents.codeless.internal.Constants
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback,android.os.Handler)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter
kotlin.collections.unsigned.UArraysKt___UArraysKt
androidx.appcompat.graphics.drawable.DrawerArrowDrawable
androidx.browser.R$drawable
kotlin.sequences.DropWhileSequence
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder
androidx.coordinatorlayout.widget.CoordinatorLayout
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2
com.facebook.share.model.AppInviteContent
kotlin.reflect.KCallable$DefaultImpls
io.flutter.embedding.engine.FlutterEngine:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,java.lang.String[])
    public void <init>(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI)
    public void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
    public void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
    public io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel()
    public io.flutter.embedding.engine.plugins.service.ServiceControlSurface getServiceControlSurface()
    public io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface getBroadcastReceiverControlSurface()
    public io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface getContentProviderControlSurface()
    private static final java.lang.String TAG
kotlin.jvm.internal.markers.KMutableList
kotlin.NoWhenBranchMatchedException
kotlin.text.MatchGroupCollection
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    void <init>()
    public void addPosition(int,int)
    boolean lastPrefetchIncludedPosition(int)
    void clearPrefetchPositions()
com.twitter.sdk.android.R$plurals
kotlin.UnsafeVariance
com.google.zxing.qrcode.decoder.DataMask$1
com.twitter.Extractor$1
zhuoyuan.li.fluttershareme.R$color
com.twitter.sdk.android.tweetcomposer.TweetComposer$Builder:
    public com.twitter.sdk.android.tweetcomposer.TweetComposer$Builder image(android.net.Uri)
okhttp3.Cookie:
    private void <init>(okhttp3.Cookie$Builder)
    private static boolean pathMatch(okhttp3.HttpUrl,java.lang.String)
    synthetic void <init>(okhttp3.Cookie$Builder,okhttp3.Cookie$1)
    public boolean persistent()
    public long expiresAt()
    public boolean hostOnly()
    public java.lang.String domain()
    public java.lang.String path()
    public boolean httpOnly()
    public boolean secure()
    public boolean matches(okhttp3.HttpUrl)
com.facebook.share.internal.ShareConstants
kotlin.jvm.internal.PropertyReference2
com.twitter.sdk.android.core.internal.scribe.EventsStorage:
    public abstract java.io.File getWorkingDirectory()
    public abstract java.io.File getRollOverDirectory()
    public abstract void deleteWorkingFile()
kotlin.time.Duration
androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate
kotlin.collections.MutableMapWithDefaultImpl
com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver:
    void unregister()
    static final java.lang.String EXTRA_AIRPLANE_STATE
androidx.core.view.ViewPropertyAnimatorCompat$2
androidx.appcompat.R$attr:
    private void <init>()
kotlin.collections.AbstractIterator
androidx.appcompat.view.menu.ListMenuItemView:
    public boolean showsIcon()
    private static final java.lang.String TAG
org.intellij.lang.annotations.JdkConstants$FontStyle
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8
com.example.connectivity.R$style
com.facebook.share.model.SharePhoto$Builder:
    public synthetic bridge com.facebook.share.model.ShareMedia$Builder readFrom(com.facebook.share.model.ShareMedia)
    public synthetic bridge com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
    public synthetic bridge java.lang.Object build()
com.facebook.appevents.internal.AppEventsLoggerUtility:
    public void <init>()
com.google.zxing.pdf417.PDF417ResultMetadata
bolts.WebViewAppLinkResolver$3
androidx.loader.R
com.google.gson.Gson:
    public com.google.gson.internal.Excluder excluder()
    public com.google.gson.FieldNamingStrategy fieldNamingStrategy()
    public boolean serializeNulls()
    public boolean htmlSafe()
    public void toJson(java.lang.Object,java.lang.Appendable)
    public java.lang.Object fromJson(java.io.Reader,java.lang.Class)
    static final boolean DEFAULT_JSON_NON_EXECUTABLE
    static final boolean DEFAULT_LENIENT
    static final boolean DEFAULT_PRETTY_PRINT
    static final boolean DEFAULT_ESCAPE_HTML
    static final boolean DEFAULT_SERIALIZE_NULLS
    static final boolean DEFAULT_COMPLEX_MAP_KEYS
    static final boolean DEFAULT_SPECIALIZE_FLOAT_VALUES
    private static final java.lang.String JSON_NON_EXECUTABLE_PREFIX
androidx.cardview.widget.CardViewImpl:
    public abstract void updatePadding(androidx.cardview.widget.CardViewDelegate)
com.facebook.core.R$bool
kotlin.collections.AbstractMap
androidx.legacy.v4.R
kotlin.time.DurationUnitKt__DurationUnitKt
kotlin.collections.ArraysKt___ArraysKt$withIndex$5
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    private static final long serialVersionUID
kotlin.jvm.functions.Function17
com.facebook.appevents.AppEventStore$MovedClassObjectInputStream:
    private static final java.lang.String ACCESS_TOKEN_APP_ID_PAIR_SERIALIZATION_PROXY_V1_CLASS_NAME
    private static final java.lang.String APP_EVENT_SERIALIZATION_PROXY_V1_CLASS_NAME
com.twitter.sdk.android.core.internal.scribe.QueueFileEventStorage:
    public java.io.File getWorkingDirectory()
    public java.io.File getRollOverDirectory()
    public void deleteWorkingFile()
kotlin.collections.CollectionsKt__CollectionsKt
io.flutter.plugins.urllauncher.R$style
androidx.cursoradapter.R
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter
com.squareup.picasso.Utils:
    private void <init>()
    static void checkNotMain()
    static final java.lang.String THREAD_PREFIX
    static final java.lang.String THREAD_IDLE_NAME
    static final int DEFAULT_READ_TIMEOUT_MILLIS
    static final int DEFAULT_WRITE_TIMEOUT_MILLIS
    static final int DEFAULT_CONNECT_TIMEOUT_MILLIS
    private static final java.lang.String PICASSO_CACHE
    private static final int KEY_PADDING
    private static final int MIN_DISK_CACHE_SIZE
    private static final int MAX_DISK_CACHE_SIZE
    static final int THREAD_LEAK_CLEANING_MS
    static final char KEY_SEPARATOR
    static final java.lang.String OWNER_MAIN
    static final java.lang.String OWNER_DISPATCHER
    static final java.lang.String OWNER_HUNTER
    static final java.lang.String VERB_CREATED
    static final java.lang.String VERB_CHANGED
    static final java.lang.String VERB_IGNORED
    static final java.lang.String VERB_ENQUEUED
    static final java.lang.String VERB_CANCELED
    static final java.lang.String VERB_BATCHED
    static final java.lang.String VERB_RETRYING
    static final java.lang.String VERB_EXECUTING
    static final java.lang.String VERB_DECODED
    static final java.lang.String VERB_TRANSFORMED
    static final java.lang.String VERB_JOINED
    static final java.lang.String VERB_REMOVED
    static final java.lang.String VERB_DELIVERED
    static final java.lang.String VERB_REPLAYING
    static final java.lang.String VERB_COMPLETED
    static final java.lang.String VERB_ERRORED
    static final java.lang.String VERB_PAUSED
    static final java.lang.String VERB_RESUMED
    private static final int WEBP_FILE_HEADER_SIZE
    private static final java.lang.String WEBP_FILE_HEADER_RIFF
    private static final java.lang.String WEBP_FILE_HEADER_WEBP
com.facebook.share.ShareApi$8
com.facebook.share.widget.LikeView$Style
androidx.core.provider.FontsContractCompat:
    private void <init>()
    public static void resetCache()
    public static void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
    public static android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])
    private static final java.lang.String TAG
    public static final java.lang.String PARCEL_FONT_RESULTS
    static final int RESULT_CODE_PROVIDER_NOT_FOUND
    static final int RESULT_CODE_WRONG_CERTIFICATES
    private static final int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS
com.facebook.share.R$string
kotlin.collections.MapAccessorsKt
com.facebook.login.CustomTabLoginMethodHandler:
    private static final int CUSTOM_TAB_REQUEST_CODE
    private static final int CHALLENGE_LENGTH
    private static final int API_EC_DIALOG_CANCEL
    private static final java.lang.String CUSTOM_TABS_SERVICE_ACTION
androidx.browser.customtabs.CustomTabsClient$2$4
okhttp3.internal.io.FileSystem
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3
androidx.media.VolumeProviderCompat
com.facebook.internal.ImageDownloader$DownloaderContext
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState
androidx.core.app.AppOpsManagerCompat
androidx.recyclerview.widget.LinearLayoutManager:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,int,boolean)
    private void logChildren()
    public boolean getRecycleChildrenOnDetach()
    public void setRecycleChildrenOnDetach(boolean)
    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    public boolean getStackFromEnd()
    public boolean getReverseLayout()
    public void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
    public android.graphics.PointF computeScrollVectorForPosition(int)
    public void scrollToPosition(int)
    public void scrollToPositionWithOffset(int,int)
    public void setSmoothScrollbarEnabled(boolean)
    public boolean isSmoothScrollbarEnabled()
    void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    public void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    public void setInitialPrefetchItemCount(int)
    public int getInitialPrefetchItemCount()
    public void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    public int findFirstVisibleItemPosition()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    void validateChildOrder()
    public void prepareForDrop(android.view.View,android.view.View,int,int)
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.app.Person$Builder
androidx.multidex.R
com.google.zxing.pdf417.decoder.BarcodeMetadata
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2
com.facebook.share.internal.LikeBoxCountView$1
io.flutter.plugins.deviceinfo.R$drawable
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1
kotlin.io.FilesKt__UtilsKt
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    private void printGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,int)
    public float getPixelSize()
    static final java.lang.String LOGTAG
    private static final java.lang.String SHAPE_CLIP_PATH
    private static final java.lang.String SHAPE_GROUP
    private static final java.lang.String SHAPE_PATH
    private static final java.lang.String SHAPE_VECTOR
    private static final int LINECAP_BUTT
    private static final int LINECAP_ROUND
    private static final int LINECAP_SQUARE
    private static final int LINEJOIN_MITER
    private static final int LINEJOIN_ROUND
    private static final int LINEJOIN_BEVEL
    private static final int MAX_CACHED_BITMAP_SIZE
    private static final boolean DBG_VECTOR_DRAWABLE
androidx.core.text.util.FindAddress$ZipRange
com.twitter.sdk.android.tweetcomposer.ComposerActivity:
    static final java.lang.String EXTRA_USER_TOKEN
    static final java.lang.String EXTRA_IMAGE_URI
    static final java.lang.String EXTRA_THEME
    static final java.lang.String EXTRA_TEXT
    static final java.lang.String EXTRA_HASHTAGS
    private static final int PLACEHOLDER_ID
    private static final java.lang.String PLACEHOLDER_SCREEN_NAME
kotlin.reflect.KVariance
kotlin.ranges.RangesKt__RangesJVMKt
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1
com.facebook.internal.BundleJSONConverter:
    public void <init>()
    public static org.json.JSONObject convertToJSON(android.os.Bundle)
com.google.zxing.ResultPointCallback
kotlin.sequences.SequencesKt___SequencesKt$minus$1
androidx.media.MediaBrowserServiceCompatApi26
io.flutter.embedding.engine.FlutterEnginePluginRegistry$FlutterEngineContentProviderPluginBinding:
    void <init>(android.content.ContentProvider)
    public android.content.ContentProvider getContentProvider()
    private final android.content.ContentProvider contentProvider
android.support.v4.media.session.MediaSessionCompatApi22
com.facebook.share.internal.ShareFeedContent:
    private void <init>(com.facebook.share.internal.ShareFeedContent$Builder)
    synthetic void <init>(com.facebook.share.internal.ShareFeedContent$Builder,com.facebook.share.internal.ShareFeedContent$1)
androidx.browser.customtabs.CustomTabsSessionToken$1
androidx.appcompat.app.ToolbarActionBar$2
com.twitter.sdk.android.tweetui.BaseTimeline$TweetsCallback
kotlin.internal.UProgressionUtilKt
com.twitter.sdk.android.core.internal.TwitterApiConstants
io.flutter.util.PathUtils:
    public void <init>()
    public static java.lang.String getDataDirectory(android.content.Context)
kotlin.UninitializedPropertyAccessException
com.facebook.ShareGraphRequest$1
kotlin.text.StringsKt__IndentKt$getIndentFunction$2
kotlin.reflect.KProperty0
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding:
    public abstract java.lang.Object getLifecycle()
    public abstract void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
    public abstract void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
    public abstract void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
    public abstract void removeOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
    public abstract void addOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
    public abstract void removeOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
com.facebook.FacebookOperationCanceledException:
    public void <init>(java.lang.String,java.lang.Throwable)
    public void <init>(java.lang.Throwable)
    static final long serialVersionUID
androidx.swiperefreshlayout.widget.SwipeRefreshLayout
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1
kotlin.ExperimentalMultiplatform
androidx.recyclerview.widget.RecyclerView$Orientation
okhttp3.internal.framed.FramedConnection:
    public synchronized int openStreamCount()
    public okhttp3.internal.framed.FramedStream pushStream(int,java.util.List,boolean)
    void writeSynReply(int,boolean,java.util.List)
    public okhttp3.internal.framed.Ping ping()
    public void setSettings(okhttp3.internal.framed.Settings)
    private static final int OKHTTP_CLIENT_WINDOW_SIZE
com.iyaffle.launchreview.R
androidx.core.app.NotificationCompat$MessagingStyle$Message
com.facebook.common.R$color
androidx.appcompat.widget.Toolbar$SavedState:
    public void <init>(android.os.Parcel)
androidx.media.MediaBrowserServiceCompat
com.twitter.sdk.android.tweetui.UserTimeline
okio.Buffer:
    private void readFrom(java.io.InputStream,long,boolean)
    private boolean rangeEquals(okio.Segment,int,okio.ByteString,int,int)
    private okio.ByteString digest(java.lang.String)
    public okio.BufferedSink emit()
    public boolean request(long)
    public okio.Buffer copyTo(java.io.OutputStream)
    public okio.Buffer copyTo(java.io.OutputStream,long,long)
    public okio.Buffer writeTo(java.io.OutputStream)
    public okio.Buffer writeTo(java.io.OutputStream,long)
    public okio.Buffer readFrom(java.io.InputStream)
    public okio.Buffer readFrom(java.io.InputStream,long)
    public long readLong()
    public long readLongLe()
    public long readDecimalLong()
    public int select(okio.Options)
    int selectPrefix(okio.Options)
    public void readFully(okio.Buffer,long)
    public java.lang.String readString(java.nio.charset.Charset)
    public java.lang.String readUtf8Line()
    public int readUtf8CodePoint()
    public int read(byte[])
    public okio.Buffer writeString(java.lang.String,java.nio.charset.Charset)
    public okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset)
    public okio.BufferedSink write(okio.Source,long)
    public okio.Buffer writeShortLe(int)
    public okio.Buffer writeIntLe(int)
    public okio.Buffer writeLong(long)
    public okio.Buffer writeLongLe(long)
    public long indexOf(okio.ByteString)
    public long indexOf(okio.ByteString,long)
    public long indexOfElement(okio.ByteString)
    public long indexOfElement(okio.ByteString,long)
    public boolean rangeEquals(long,okio.ByteString)
    public boolean rangeEquals(long,okio.ByteString,int,int)
    java.util.List segmentSizes()
    public okio.ByteString md5()
    public okio.ByteString sha1()
    public okio.ByteString sha256()
    public synthetic bridge okio.BufferedSink writeLongLe(long)
    public synthetic bridge okio.BufferedSink writeLong(long)
    public synthetic bridge okio.BufferedSink writeIntLe(int)
    public synthetic bridge okio.BufferedSink writeShortLe(int)
    public synthetic bridge okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
    public synthetic bridge okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
    public synthetic bridge okio.BufferedSink writeUtf8CodePoint(int)
    public synthetic bridge okio.BufferedSink writeUtf8(java.lang.String,int,int)
    static final int REPLACEMENT_CHARACTER
kotlin.time.ClockKt
androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    public void <init>()
    public long getMoveDuration()
    public void setMoveDuration(long)
    public long getAddDuration()
    public void setAddDuration(long)
    public long getRemoveDuration()
    public void setRemoveDuration(long)
    public long getChangeDuration()
    public void setChangeDuration(long)
    public abstract boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void runPendingAnimations()
    public final void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
    public boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List)
    public final void dispatchAnimationsFinished()
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo()
    private androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener
    private java.util.ArrayList mFinishedListeners
    private long mAddDuration
    private long mRemoveDuration
    private long mMoveDuration
    private long mChangeDuration
    public static final int FLAG_CHANGED
    public static final int FLAG_REMOVED
    public static final int FLAG_INVALIDATED
    public static final int FLAG_MOVED
    public static final int FLAG_APPEARED_IN_PRE_LAYOUT
com.twitter.sdk.android.tweetui.R$style
com.twitter.sdk.android.core.models.UserEntities
androidx.recyclerview.widget.ItemTouchHelper$Callback$2
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$5
com.twitter.sdk.android.tweetui.TweetScribeClientImpl:
    static com.twitter.sdk.android.core.internal.scribe.EventNamespace getTfwImpressionNamespace(java.lang.String,boolean)
    static com.twitter.sdk.android.core.internal.scribe.EventNamespace getTfwClickNamespace(java.lang.String)
    static com.twitter.sdk.android.core.internal.scribe.EventNamespace getSyndicatedImpressionNamespace(java.lang.String)
    public void impression(com.twitter.sdk.android.core.models.Tweet,java.lang.String,boolean)
    public void click(com.twitter.sdk.android.core.models.Tweet,java.lang.String)
    static final java.lang.String TFW_CLIENT_EVENT_PAGE
    static final java.lang.String TFW_CLIENT_EVENT_SECTION
    static final java.lang.String TFW_CLIENT_EVENT_ELEMENT
    static final java.lang.String SYNDICATED_SDK_IMPRESSION_PAGE
    static final java.lang.String SYNDICATED_SDK_IMPRESSION_COMPONENT
    static final java.lang.String SYNDICATED_SDK_IMPRESSION_ELEMENT
    static final java.lang.String SCRIBE_CLICK_ACTION
    static final java.lang.String SCRIBE_IMPRESSION_ACTION
    static final java.lang.String SCRIBE_FAVORITE_ACTION
    static final java.lang.String SCRIBE_UNFAVORITE_ACTION
    static final java.lang.String SCRIBE_SHARE_ACTION
    static final java.lang.String SCRIBE_ACTIONS_ELEMENT
androidx.core.internal.view.SupportMenu:
    public abstract void setGroupDividerEnabled(boolean)
    public static final int USER_MASK
    public static final int USER_SHIFT
    public static final int CATEGORY_MASK
    public static final int CATEGORY_SHIFT
    public static final int SUPPORTED_MODIFIERS_MASK
    public static final int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED
com.google.zxing.multi.MultipleBarcodeReader
com.squareup.picasso.RequestCreator:
    void <init>()
    private void performRemoteViewInto(com.squareup.picasso.RemoteViewsAction)
    public com.squareup.picasso.RequestCreator noPlaceholder()
    public com.squareup.picasso.RequestCreator placeholder(int)
    public com.squareup.picasso.RequestCreator error(android.graphics.drawable.Drawable)
    public com.squareup.picasso.RequestCreator tag(java.lang.Object)
    public com.squareup.picasso.RequestCreator resizeDimen(int,int)
    public com.squareup.picasso.RequestCreator centerInside()
    public com.squareup.picasso.RequestCreator onlyScaleDown()
    public com.squareup.picasso.RequestCreator rotate(float)
    public com.squareup.picasso.RequestCreator rotate(float,float,float)
    public com.squareup.picasso.RequestCreator config(android.graphics.Bitmap$Config)
    public com.squareup.picasso.RequestCreator stableKey(java.lang.String)
    public com.squareup.picasso.RequestCreator priority(com.squareup.picasso.Picasso$Priority)
    public com.squareup.picasso.RequestCreator transform(com.squareup.picasso.Transformation)
    public com.squareup.picasso.RequestCreator transform(java.util.List)
    public com.squareup.picasso.RequestCreator skipMemoryCache()
    public varargs com.squareup.picasso.RequestCreator memoryPolicy(com.squareup.picasso.MemoryPolicy,com.squareup.picasso.MemoryPolicy[])
    public varargs com.squareup.picasso.RequestCreator networkPolicy(com.squareup.picasso.NetworkPolicy,com.squareup.picasso.NetworkPolicy[])
    public com.squareup.picasso.RequestCreator noFade()
    public android.graphics.Bitmap get()
    public void fetch()
    public void fetch(com.squareup.picasso.Callback)
    public void into(android.widget.RemoteViews,int,int,android.app.Notification)
    public void into(android.widget.RemoteViews,int,int[])
com.google.zxing.oned.EAN8Reader
androidx.recyclerview.widget.DefaultItemAnimator$8
com.facebook.appevents.internal.AutomaticAnalyticsLogger:
    private static final java.lang.String APP_EVENTS_IF_AUTO_LOG_SUBS
com.google.zxing.pdf417.decoder.ec.ModulusPoly
androidx.browser.R$color
com.facebook.share.internal.ShareFeedContent$Builder
kotlin.io.ConsoleKt$decoder$2
com.twitter.sdk.android.core.BuildConfig
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode
okhttp3.Handshake:
    public static okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
    public okhttp3.TlsVersion tlsVersion()
    public java.security.Principal peerPrincipal()
    public java.util.List localCertificates()
    public java.security.Principal localPrincipal()
kotlin.Pair
kotlin.ExtensionFunctionType
androidx.core.view.LayoutInflaterFactory
com.facebook.share.widget.CreateAppGroupDialog$1
androidx.appcompat.app.WindowDecorActionBar$2
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    public void setSpanIndexCacheEnabled(boolean)
    public boolean isSpanIndexCacheEnabled()
    int findReferenceIndexFromCache(int)
com.dxc.mtahackathon.R$styleable
kotlin.sequences.FlatteningSequence$iterator$1
okhttp3.internal.cache.DiskLruCache$3
com.facebook.login.LoginManager$ActivityStartActivityDelegate
com.facebook.internal.NativeProtocol$MessengerAppInfo:
    static final java.lang.String MESSENGER_PACKAGE
io.flutter.plugin.platform.PlatformViewsController:
    public void onFlutterViewDestroyed()
    private static final java.lang.String TAG
    private static final int MINIMAL_SDK
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3
kotlin.NumbersKt__BigIntegersKt
kotlin.text.StringsKt__IndentKt$prependIndent$1
io.flutter.plugins.sharedpreferences.R$dimen
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1
androidx.recyclerview.widget.FastScroller
android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction
com.iyaffle.launchreview.R$integer
androidx.core.R$drawable
androidx.print.PrintHelper$1
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$1
kotlin.SuspendKt
androidx.core.view.InputDeviceCompat
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
kotlin.jvm.functions.Function9
com.facebook.internal.FileLruCache$BufferFile$2
androidx.print.PrintHelper$PrintUriAdapter
com.twitter.sdk.android.tweetui.AbstractTweetView$1
androidx.core.provider.FontRequest:
    public void <init>(java.lang.String,java.lang.String,java.lang.String,int)
bolts.Task$9
bolts.AggregateException
kotlin.coroutines.CombinedContext$toString$1
androidx.media.MediaSessionManager$RemoteUserInfo
androidx.core.graphics.TypefaceCompatApi28Impl:
    private static final java.lang.String TAG
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
    private static final java.lang.String DEFAULT_FAMILY
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    public int findFirstVisibleItemPosition()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    int findOneVisibleChild(int,int,boolean)
    static final int INVALID_LINE
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler
io.flutter.plugins.sharedpreferences.R
android.support.v4.media.MediaBrowserCompat$ItemCallback:
    public void <init>()
    final java.lang.Object mItemCallbackObj
kotlin.math.MathKt
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags
io.flutter.plugins.share.R$drawable
com.facebook.internal.ImageRequest$Builder
androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader)
    androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)
    boolean isCallbackWaitingForData()
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
com.twitter.sdk.android.core.internal.oauth.OAuthConstants
androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsItemId
kotlin.internal.LowPriorityInOverloadResolution
androidx.recyclerview.widget.ItemTouchHelper$5
kotlin.ExceptionsKt
kotlin.coroutines.CoroutineContext$plus$1
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus
com.twitter.sdk.android.core.internal.scribe.ScribeFilesManager:
    static final java.lang.String FILE_PREFIX
    static final java.lang.String FILE_EXTENSION
com.google.gson.LongSerializationPolicy$1:
    public com.google.gson.JsonElement serialize(java.lang.Long)
okhttp3.internal.platform.AndroidPlatform:
    public javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
    private static final int MAX_LOG_LENGTH
androidx.multidex.ZipUtil$CentralDirectory
kotlin.time.DurationUnitKt
androidx.localbroadcastmanager.R
com.twitter.sdk.android.core.internal.scribe.ScribeClient:
    public boolean scribeAndFlush(com.twitter.sdk.android.core.internal.scribe.ScribeEvent,long)
    private static final java.lang.String WORKING_FILENAME_BASE
    private static final java.lang.String STORAGE_DIR_BASE
com.google.gson.internal.LinkedHashTreeMap$EntrySet
com.facebook.share.internal.LikeStatusClient
androidx.versionedparcelable.VersionedParcelize
androidx.lifecycle.DefaultLifecycleObserver
kotlin.ranges.ClosedRange
androidx.recyclerview.widget.ChildHelper:
    void <init>(androidx.recyclerview.widget.ChildHelper$Callback)
    private void hideViewInternal(android.view.View)
    private boolean unhideViewInternal(android.view.View)
    private int getOffset(int)
    android.view.View findHiddenNonRemovedView(int)
    void unhide(android.view.View)
    public java.lang.String toString()
    boolean removeViewIfHidden(android.view.View)
    final androidx.recyclerview.widget.ChildHelper$Callback mCallback
    final androidx.recyclerview.widget.ChildHelper$Bucket mBucket
    final java.util.List mHiddenViews
    private static final boolean DEBUG
    private static final java.lang.String TAG
io.flutter.plugins.connectivity.R$attr
kotlin.sequences.TransformingSequence
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    public static java.lang.Object newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle)
    private void <init>()
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback
com.facebook.share.widget.GameRequestDialog
com.facebook.share.widget.CreateAppGroupDialog$Result
com.twitter.sdk.android.tweetui.CollectionTimeline$Builder
io.flutter.embedding.android.FlutterTextureView:
    private static final java.lang.String TAG
com.squareup.picasso.Callback$EmptyCallback
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    void <init>(androidx.core.graphics.PathParser$PathDataNode[])
androidx.lifecycle.ViewModelProvider$NewInstanceFactory
com.squareup.picasso.LruCache:
    public final void evictAll()
    public final synchronized void clear()
    public final synchronized void clearKeyUri(java.lang.String)
    public final synchronized int hitCount()
    public final synchronized int missCount()
    public final synchronized int putCount()
    public final synchronized int evictionCount()
com.twitter.sdk.android.core.internal.scribe.ScribeFilesSender$ConfigRequestInterceptor:
    private static final java.lang.String USER_AGENT_HEADER
    private static final java.lang.String CLIENT_UUID_HEADER
    private static final java.lang.String POLLING_HEADER
    private static final java.lang.String POLLING_HEADER_VALUE
com.google.zxing.qrcode.detector.FinderPatternFinder$1
com.twitter.sdk.android.tweetui.TweetScribeClient:
    public abstract void impression(com.twitter.sdk.android.core.models.Tweet,java.lang.String,boolean)
    public abstract void click(com.twitter.sdk.android.core.models.Tweet,java.lang.String)
com.twitter.sdk.android.core.internal.scribe.ScribeEvent:
    public void <init>(java.lang.String,com.twitter.sdk.android.core.internal.scribe.EventNamespace,long)
    private static final java.lang.String CURRENT_FORMAT_VERSION
com.google.zxing.client.result.ResultParser
kotlin.jvm.internal.markers.KMutableIterable
androidx.lifecycle.ViewModelProvider:
    public void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)
    private static final java.lang.String DEFAULT_KEY
com.twitter.sdk.android.core.models.Place:
    public void <init>(java.util.Map,com.twitter.sdk.android.core.models.Place$BoundingBox,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    public final java.util.Map attributes
    public final com.twitter.sdk.android.core.models.Place$BoundingBox boundingBox
    public final java.lang.String country
    public final java.lang.String countryCode
    public final java.lang.String fullName
    public final java.lang.String id
    public final java.lang.String name
    public final java.lang.String placeType
    public final java.lang.String url
com.twitter.sdk.android.tweetui.internal.util.IntHashMap
io.flutter.plugins.share.R
androidx.browser.browseractions.BrowserActionsFallbackMenuDialog$1
androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider
com.facebook.appevents.AppEventsConstants
com.twitter.sdk.android.tweetui.internal.OverlayImageView:
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.loader.app.LoaderManagerImpl:
    private androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)
    public androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void destroyLoader(int)
    public androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
    static final java.lang.String TAG
kotlin.text.CharDirectionality$Companion$directionalityMap$2
androidx.loader.app.LoaderManager:
    public static void enableDebugLogging(boolean)
    public abstract androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract void destroyLoader(int)
    public abstract androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
com.facebook.internal.FacebookDialogFragment:
    public static final java.lang.String TAG
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl
androidx.loader.R$integer
androidx.core.graphics.TypefaceCompatApi26Impl:
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD
    private static final java.lang.String ADD_FONT_FROM_BUFFER_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final java.lang.String FREEZE_METHOD
    private static final java.lang.String ABORT_CREATION_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
    private static final java.lang.String DEFAULT_FAMILY
androidx.core.view.DragStartHelper$2
io.flutter.plugins.share.R$style
kotlin.collections.CollectionsKt__IteratorsKt
com.facebook.share.model.ShareOpenGraphObject$Builder
androidx.arch.core.util.Function
androidx.recyclerview.widget.OrientationHelper$1:
    public void offsetChild(android.view.View,int)
io.flutter.view.FlutterNativeView$1
kotlin.UByteArray$Iterator
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1
kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsFirst$1
com.facebook.login.LoginManager$3
org.intellij.lang.annotations.JdkConstants$CursorType
androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    public int getChildCount()
    public android.view.View getParent()
com.facebook.share.widget.CreateAppGroupDialog
androidx.annotation.RequiresPermission$Write
androidx.core.graphics.drawable.IconCompat:
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
    public static androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
    private void <init>(int)
    private android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
    private static android.content.res.Resources getResources(android.content.Context,java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
    private static int getType(android.graphics.drawable.Icon)
    private static android.net.Uri getUri(android.graphics.drawable.Icon)
    static android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
    public int getType()
    public android.net.Uri getUri()
    public androidx.core.graphics.drawable.IconCompat setTint(int)
    public androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
    public androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.drawable.Icon toIcon()
    public void checkResource(android.content.Context)
    public android.graphics.drawable.Drawable loadDrawable(android.content.Context)
    public void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)
    public android.os.Bundle toBundle()
    private static final java.lang.String TAG
    public static final int TYPE_UNKNOWN
    private static final float ADAPTIVE_ICON_INSET_FACTOR
    private static final float DEFAULT_VIEW_PORT_SCALE
    private static final float ICON_DIAMETER_FACTOR
    private static final float BLUR_FACTOR
    private static final float KEY_SHADOW_OFFSET_FACTOR
    private static final int KEY_SHADOW_ALPHA
    private static final int AMBIENT_SHADOW_ALPHA
    private static final java.lang.String EXTRA_TYPE
    private static final java.lang.String EXTRA_OBJ
    private static final java.lang.String EXTRA_INT1
    private static final java.lang.String EXTRA_INT2
    private static final java.lang.String EXTRA_TINT_LIST
    private static final java.lang.String EXTRA_TINT_MODE
androidx.legacy.v4.R$drawable
androidx.core.content.res.GradientColorInflaterCompat:
    private void <init>()
    static android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    private static final int TILE_MODE_CLAMP
    private static final int TILE_MODE_REPEAT
    private static final int TILE_MODE_MIRROR
bolts.Task$11
com.facebook.appevents.internal.AppEventUtility:
    public void <init>()
    private static boolean isMainThread()
    private static final java.lang.String regex
com.google.zxing.datamatrix.encoder.HighLevelEncoder:
    private void <init>()
    public static java.lang.String encodeHighLevel(java.lang.String)
    private static final char PAD
    static final char LATCH_TO_C40
    static final char LATCH_TO_BASE256
    static final char UPPER_SHIFT
    private static final char MACRO_05
    private static final char MACRO_06
    static final char LATCH_TO_ANSIX12
    static final char LATCH_TO_TEXT
    static final char LATCH_TO_EDIFACT
    static final char C40_UNLATCH
    static final char X12_UNLATCH
    private static final java.lang.String MACRO_05_HEADER
    private static final java.lang.String MACRO_06_HEADER
    private static final java.lang.String MACRO_TRAILER
    static final int ASCII_ENCODATION
    static final int C40_ENCODATION
    static final int TEXT_ENCODATION
    static final int X12_ENCODATION
    static final int EDIFACT_ENCODATION
    static final int BASE256_ENCODATION
kotlin.coroutines.jvm.internal.BaseContinuationImpl
kotlin.sequences.MergingSequence
com.twitter.sdk.android.tweetui.VideoScribeClient:
    public abstract void impression(com.twitter.sdk.android.core.internal.scribe.ScribeItem)
kotlin.internal.ContractsDsl
android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener
kotlin.sequences.TakeSequence$iterator$1
androidx.customview.view.AbsSavedState:
    protected void <init>(android.os.Parcel)
androidx.print.R
kotlin.io.FilesKt__FileTreeWalkKt
kotlin.sequences.DropSequence$iterator$1
io.flutter.embedding.android.FlutterActivity:
    public static android.content.Intent createDefaultIntent(android.content.Context)
    public static io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder withNewEngine()
    public static io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder withCachedEngine(java.lang.String)
    private static void registerPlugins(io.flutter.embedding.engine.FlutterEngine)
    void setDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
    protected io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
    public void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
    private static final java.lang.String TAG
androidx.appcompat.app.AppCompatDelegate$NightMode
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1
bolts.CancellationToken
com.twitter.sdk.android.core.models.Place$BoundingBox
androidx.cursoradapter.widget.SimpleCursorAdapter
kotlin.io.FileTreeWalk$DirectoryState
com.facebook.share.model.ShareOpenGraphAction$Builder:
    public synthetic bridge com.facebook.share.model.ShareOpenGraphValueContainer$Builder readFrom(com.facebook.share.model.ShareOpenGraphValueContainer)
    public synthetic bridge com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
    public synthetic bridge java.lang.Object build()
    private static final java.lang.String ACTION_TYPE_KEY
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallbackProxy
androidx.core.internal.view.SupportMenuItem:
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
com.google.zxing.aztec.decoder.Decoder$1
androidx.appcompat.widget.AppCompatProgressBarHelper
okhttp3.CacheControl$Builder:
    public okhttp3.CacheControl$Builder noStore()
    public okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)
    public okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit)
    public okhttp3.CacheControl$Builder noTransform()
com.squareup.picasso.GetAction
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4
kotlin.text.ScreenFloatValueRegEx
androidx.customview.R$layout
com.google.zxing.oned.rss.Pair
kotlin.coroutines.CombinedContext$Serialized$Companion
com.facebook.share.model.AppInviteContent$1
androidx.multidex.MultiDex
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6
com.twitter.sdk.android.core.internal.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper$1
androidx.asynclayoutinflater.R$styleable
com.iyaffle.launchreview.R$style
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase
androidx.appcompat.view.menu.MenuItemImpl:
    java.lang.Runnable getCallback()
    public android.view.MenuItem setCallback(java.lang.Runnable)
    private static final java.lang.String TAG
    private static final int SHOW_AS_ACTION_MASK
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
    private static final int IS_ACTION
    static final int NO_ICON
kotlin.coroutines.RestrictsSuspension
io.flutter.plugins.sharedpreferences.R$integer
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2
com.facebook.share.internal.LikeActionController$SerializeToDiskWorkItem
okio.HashingSink
androidx.recyclerview.widget.SortedList$Callback
androidx.fragment.app.FragmentManager$BackStackEntry
androidx.drawerlayout.R
androidx.vectordrawable.R$drawable
androidx.core.view.DragStartHelper
io.flutter.embedding.engine.FlutterShellArgs:
    public void <init>(java.lang.String[])
    public void <init>(java.util.Set)
    public void add(java.lang.String)
    public void remove(java.lang.String)
    public static final java.lang.String ARG_KEY_TRACE_STARTUP
    public static final java.lang.String ARG_TRACE_STARTUP
    public static final java.lang.String ARG_KEY_START_PAUSED
    public static final java.lang.String ARG_START_PAUSED
    public static final java.lang.String ARG_KEY_DISABLE_SERVICE_AUTH_CODES
    public static final java.lang.String ARG_DISABLE_SERVICE_AUTH_CODES
    public static final java.lang.String ARG_KEY_ENDLESS_TRACE_BUFFER
    public static final java.lang.String ARG_ENDLESS_TRACE_BUFFER
    public static final java.lang.String ARG_KEY_USE_TEST_FONTS
    public static final java.lang.String ARG_USE_TEST_FONTS
    public static final java.lang.String ARG_KEY_ENABLE_DART_PROFILING
    public static final java.lang.String ARG_ENABLE_DART_PROFILING
    public static final java.lang.String ARG_KEY_ENABLE_SOFTWARE_RENDERING
    public static final java.lang.String ARG_ENABLE_SOFTWARE_RENDERING
    public static final java.lang.String ARG_KEY_SKIA_DETERMINISTIC_RENDERING
    public static final java.lang.String ARG_SKIA_DETERMINISTIC_RENDERING
    public static final java.lang.String ARG_KEY_TRACE_SKIA
    public static final java.lang.String ARG_TRACE_SKIA
    public static final java.lang.String ARG_KEY_DUMP_SHADER_SKP_ON_SHADER_COMPILATION
    public static final java.lang.String ARG_DUMP_SHADER_SKP_ON_SHADER_COMPILATION
    public static final java.lang.String ARG_KEY_CACHE_SKSL
    public static final java.lang.String ARG_CACHE_SKSL
    public static final java.lang.String ARG_KEY_VERBOSE_LOGGING
    public static final java.lang.String ARG_VERBOSE_LOGGING
    public static final java.lang.String ARG_KEY_OBSERVATORY_PORT
    public static final java.lang.String ARG_OBSERVATORY_PORT
    public static final java.lang.String ARG_KEY_DART_FLAGS
    public static final java.lang.String ARG_DART_FLAGS
androidx.swiperefreshlayout.R
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23
androidx.versionedparcelable.VersionedParcel:
    private void writeCollection(java.util.Collection,int)
    private int getType(java.lang.Object)
    private void writeSerializable(java.io.Serializable)
    private int readExceptionCode()
    private java.lang.Exception readException(int,java.lang.String)
    protected static java.lang.Throwable getRootCause(java.lang.Throwable)
    private java.lang.Exception createException(int,java.lang.String)
    private java.util.Collection readCollection(int,java.util.Collection)
    protected abstract void writeByteArray(byte[],int,int)
    protected abstract void writeLong(long)
    protected abstract void writeFloat(float)
    protected abstract void writeDouble(double)
    protected abstract void writeStrongBinder(android.os.IBinder)
    protected abstract void writeBoolean(boolean)
    protected abstract void writeStrongInterface(android.os.IInterface)
    protected abstract void writeBundle(android.os.Bundle)
    protected abstract long readLong()
    protected abstract float readFloat()
    protected abstract double readDouble()
    protected abstract android.os.IBinder readStrongBinder()
    protected abstract android.os.Bundle readBundle()
    protected abstract boolean readBoolean()
    public void writeStrongInterface(android.os.IInterface,int)
    public void writeBundle(android.os.Bundle,int)
    public void writeBoolean(boolean,int)
    public void writeByteArray(byte[],int,int,int)
    public void writeLong(long,int)
    public void writeFloat(float,int)
    public void writeDouble(double,int)
    public void writeStrongBinder(android.os.IBinder,int)
    public boolean readBoolean(boolean,int)
    public long readLong(long,int)
    public float readFloat(float,int)
    public double readDouble(double,int)
    public android.os.IBinder readStrongBinder(android.os.IBinder,int)
    public android.os.Bundle readBundle(android.os.Bundle,int)
    public void writeByte(byte,int)
    public void writeSize(android.util.Size,int)
    public void writeSizeF(android.util.SizeF,int)
    public void writeSparseBooleanArray(android.util.SparseBooleanArray,int)
    public void writeBooleanArray(boolean[],int)
    protected void writeBooleanArray(boolean[])
    public boolean[] readBooleanArray(boolean[],int)
    protected boolean[] readBooleanArray()
    public void writeCharArray(char[],int)
    public char[] readCharArray(char[],int)
    public void writeIntArray(int[],int)
    protected void writeIntArray(int[])
    public int[] readIntArray(int[],int)
    protected int[] readIntArray()
    public void writeLongArray(long[],int)
    protected void writeLongArray(long[])
    public long[] readLongArray(long[],int)
    protected long[] readLongArray()
    public void writeFloatArray(float[],int)
    protected void writeFloatArray(float[])
    public float[] readFloatArray(float[],int)
    protected float[] readFloatArray()
    public void writeDoubleArray(double[],int)
    protected void writeDoubleArray(double[])
    public double[] readDoubleArray(double[],int)
    protected double[] readDoubleArray()
    public void writeSet(java.util.Set,int)
    public void writeList(java.util.List,int)
    public void writeArray(java.lang.Object[],int)
    protected void writeArray(java.lang.Object[])
    public void writeSerializable(java.io.Serializable,int)
    public void writeException(java.lang.Exception,int)
    protected void writeNoException()
    public java.lang.Exception readException(java.lang.Exception,int)
    public byte readByte(byte,int)
    public android.util.Size readSize(android.util.Size,int)
    public android.util.SizeF readSizeF(android.util.SizeF,int)
    public android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int)
    public java.util.Set readSet(java.util.Set,int)
    public java.util.List readList(java.util.List,int)
    public java.lang.Object[] readArray(java.lang.Object[],int)
    protected java.lang.Object[] readArray(java.lang.Object[])
    protected java.io.Serializable readSerializable()
    private static final java.lang.String TAG
    private static final int EX_SECURITY
    private static final int EX_BAD_PARCELABLE
    private static final int EX_ILLEGAL_ARGUMENT
    private static final int EX_NULL_POINTER
    private static final int EX_ILLEGAL_STATE
    private static final int EX_NETWORK_MAIN_THREAD
    private static final int EX_UNSUPPORTED_OPERATION
    private static final int EX_PARCELABLE
    private static final int TYPE_VERSIONED_PARCELABLE
    private static final int TYPE_PARCELABLE
    private static final int TYPE_SERIALIZABLE
    private static final int TYPE_STRING
    private static final int TYPE_BINDER
androidx.core.text.TextDirectionHeuristicCompat
androidx.customview.widget.ExploreByTouchHelper$1
androidx.media.MediaBrowserServiceCompat$BrowserRoot
androidx.core.app.SharedElementCallback:
    public void <init>()
    private static android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
    public void onRejectSharedElements(java.util.List)
    public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
    public android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
    public void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener)
    private android.graphics.Matrix mTempMatrix
    private static final int MAX_IMAGE_SIZE
    private static final java.lang.String BUNDLE_SNAPSHOT_BITMAP
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX
androidx.core.graphics.drawable.IconCompat$IconType
kotlin.io.AccessDeniedException
io.flutter.plugins.urllauncher.BuildConfig
androidx.recyclerview.widget.SortedListAdapterCallback
com.facebook.LegacyTokenHelper:
    public static void putToken(android.os.Bundle,java.lang.String)
    public static java.util.Date getExpirationDate(android.os.Bundle)
    public static void putExpirationDate(android.os.Bundle,java.util.Date)
    public static long getExpirationMilliseconds(android.os.Bundle)
    public static void putExpirationMilliseconds(android.os.Bundle,long)
    public static java.util.Set getPermissions(android.os.Bundle)
    public static void putPermissions(android.os.Bundle,java.util.Collection)
    public static void putDeclinedPermissions(android.os.Bundle,java.util.Collection)
    public static void putExpiredPermissions(android.os.Bundle,java.util.Collection)
    public static void putSource(android.os.Bundle,com.facebook.AccessTokenSource)
    public static java.util.Date getLastRefreshDate(android.os.Bundle)
    public static void putLastRefreshDate(android.os.Bundle,java.util.Date)
    public static long getLastRefreshMilliseconds(android.os.Bundle)
    public static void putLastRefreshMilliseconds(android.os.Bundle,long)
    public static void putApplicationId(android.os.Bundle,java.lang.String)
    static void putDate(android.os.Bundle,java.lang.String,java.util.Date)
    private void serializeKey(java.lang.String,android.os.Bundle,android.content.SharedPreferences$Editor)
    public void save(android.os.Bundle)
    public static final java.lang.String TOKEN_KEY
    public static final java.lang.String EXPIRATION_DATE_KEY
    public static final java.lang.String LAST_REFRESH_DATE_KEY
    public static final java.lang.String TOKEN_SOURCE_KEY
    public static final java.lang.String PERMISSIONS_KEY
    public static final java.lang.String DECLINED_PERMISSIONS_KEY
    public static final java.lang.String EXPIRED_PERMISSIONS_KEY
    public static final java.lang.String APPLICATION_ID_KEY
    private static final long INVALID_BUNDLE_MILLISECONDS
    private static final java.lang.String IS_SSO_KEY
    public static final java.lang.String DEFAULT_CACHE_KEY
    private static final java.lang.String JSON_VALUE_TYPE
    private static final java.lang.String JSON_VALUE
    private static final java.lang.String JSON_VALUE_ENUM_TYPE
    private static final java.lang.String TYPE_BOOLEAN
    private static final java.lang.String TYPE_BOOLEAN_ARRAY
    private static final java.lang.String TYPE_BYTE
    private static final java.lang.String TYPE_BYTE_ARRAY
    private static final java.lang.String TYPE_SHORT
    private static final java.lang.String TYPE_SHORT_ARRAY
    private static final java.lang.String TYPE_INTEGER
    private static final java.lang.String TYPE_INTEGER_ARRAY
    private static final java.lang.String TYPE_LONG
    private static final java.lang.String TYPE_LONG_ARRAY
    private static final java.lang.String TYPE_FLOAT
    private static final java.lang.String TYPE_FLOAT_ARRAY
    private static final java.lang.String TYPE_DOUBLE
    private static final java.lang.String TYPE_DOUBLE_ARRAY
    private static final java.lang.String TYPE_CHAR
    private static final java.lang.String TYPE_CHAR_ARRAY
    private static final java.lang.String TYPE_STRING
    private static final java.lang.String TYPE_STRING_LIST
    private static final java.lang.String TYPE_ENUM
com.appleeducate.getversion.R$dimen
androidx.browser.R$styleable
androidx.swiperefreshlayout.R$id
androidx.recyclerview.widget.OpReorderer
io.flutter.embedding.android.FlutterFragmentActivity
kotlin.collections.EmptySet
android.support.v4.media.MediaMetadataCompatApi21:
    public static java.util.Set keySet(java.lang.Object)
    public static android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String)
    public static long getLong(java.lang.Object,java.lang.String)
    public static java.lang.Object getRating(java.lang.Object,java.lang.String)
    public static java.lang.CharSequence getText(java.lang.Object,java.lang.String)
    public static java.lang.Object createFromParcel(android.os.Parcel)
    private void <init>()
kotlin.jvm.internal.ArrayLongIterator
kotlin.UByte$Companion
com.facebook.common.R$integer
kotlin.sequences.TransformingIndexedSequence
androidx.core.view.PointerIconCompat
androidx.legacy.v4.R$string
com.google.zxing.NotFoundException
com.squareup.picasso.PicassoDrawable:
    private static final float FADE_DURATION
androidx.appcompat.view.SupportMenuInflater$MenuState:
    private static final int defaultGroupId
    private static final int defaultItemId
    private static final int defaultItemCategory
    private static final int defaultItemOrder
    private static final int defaultItemCheckable
    private static final boolean defaultItemChecked
    private static final boolean defaultItemVisible
    private static final boolean defaultItemEnabled
kotlin.collections.CollectionsKt
kotlin.reflect.KParameter$DefaultImpls
androidx.annotation.ColorInt
androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public static final int INVALID_SPAN_ID
kotlin.OptionalExpectation
com.facebook.share.widget.LikeView$2
com.facebook.share.internal.ShareInternalUtility$3:
    public boolean onActivityResult(int,android.content.Intent)
androidx.legacy.v4.R$layout
kotlin.jvm.functions.Function21
com.google.zxing.common.DefaultGridSampler
androidx.appcompat.view.menu.StandardMenuPopup:
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
com.google.gson.LongSerializationPolicy:
    public abstract com.google.gson.JsonElement serialize(java.lang.Long)
io.flutter.plugin.common.ErrorLogResult
androidx.browser.customtabs.CustomTabsCallback
androidx.media.VolumeProviderCompat$Callback
androidx.core.app.ActivityOptionsCompat
androidx.appcompat.app.AlertController$CheckedItemAdapter
androidx.cardview.R$style:
    private void <init>()
androidx.multidex.MultiDexApplication
com.facebook.GraphRequest$GraphJSONObjectCallback
androidx.customview.widget.FocusStrategy$BoundsAdapter
com.facebook.FacebookDialogException:
    static final long serialVersionUID
com.squareup.picasso.Downloader$Response:
    public void <init>(android.graphics.Bitmap,boolean)
    public void <init>(java.io.InputStream,boolean)
    public void <init>(android.graphics.Bitmap,boolean,long)
androidx.recyclerview.widget.AsyncListUtil$1
kotlin.sequences.FilteringSequence$iterator$1
com.facebook.share.internal.VideoUploader$TransferChunkWorkItem$1
com.twitter.sdk.android.tweetui.AbstractTweetView$PermalinkClickListener
okhttp3.internal.platform.Jdk9Platform:
    public javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.common.BuildConfig
kotlin.io.FilePathComponents
com.facebook.ProfileManager:
    public static final java.lang.String ACTION_CURRENT_PROFILE_CHANGED
    public static final java.lang.String EXTRA_OLD_PROFILE
    public static final java.lang.String EXTRA_NEW_PROFILE
androidx.core.text.PrecomputedTextCompat:
    public static androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)
    private void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[])
    private void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params)
    private int findParaIndex(int)
    public static java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)
    public int getParagraphCount()
    public int getParagraphStart(int)
    public int getParagraphEnd(int)
    private final int[] mParagraphEnds
    private static final char LINE_FEED
kotlin.text.Regex$findAll$1
androidx.appcompat.app.ActionBar$TabListener
kotlin.contracts.Returns
androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy
androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper
io.flutter.Log:
    public void <init>()
    public static void setLogLevel(int)
    public static void v(java.lang.String,java.lang.String,java.lang.Throwable)
    public static void i(java.lang.String,java.lang.String)
    public static void i(java.lang.String,java.lang.String,java.lang.Throwable)
    public static void d(java.lang.String,java.lang.String,java.lang.Throwable)
    public static void w(java.lang.String,java.lang.String,java.lang.Throwable)
    public static void wtf(java.lang.String,java.lang.String)
    public static void wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com.twitter.sdk.android.tweetcomposer.TweetUploadService:
    public static final java.lang.String UPLOAD_SUCCESS
    public static final java.lang.String UPLOAD_FAILURE
    public static final java.lang.String TWEET_COMPOSE_CANCEL
    public static final java.lang.String EXTRA_TWEET_ID
    public static final java.lang.String EXTRA_RETRY_INTENT
    static final java.lang.String TAG
    static final java.lang.String EXTRA_USER_TOKEN
    static final java.lang.String EXTRA_TWEET_TEXT
    static final java.lang.String EXTRA_IMAGE_URI
    private static final int PLACEHOLDER_ID
    private static final java.lang.String PLACEHOLDER_SCREEN_NAME
com.google.zxing.oned.rss.expanded.decoders.FieldParser
kotlin.jvm.JvmDefault
com.google.zxing.PlanarYUVLuminanceSource
androidx.appcompat.widget.AbsActionBarView:
    static synthetic void access$001(androidx.appcompat.widget.AbsActionBarView,int)
    static synthetic void access$101(androidx.appcompat.widget.AbsActionBarView,int)
    public androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
    public void animateToVisibility(int)
    public boolean showOverflowMenu()
    public void postShowOverflowMenu()
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public boolean isOverflowReserved()
    public boolean canShowOverflowMenu()
    public void dismissPopupMenus()
    private static final int FADE_DURATION
androidx.drawerlayout.R$style
androidx.core.app.NotificationCompat$StreamType
com.twitter.sdk.android.tweetui.internal.MediaTimeUtils:
    private void <init>()
    private static final java.lang.String TIME_FORMAT_LONG
    private static final java.lang.String TIME_FORMAT_SHORT
com.twitter.sdk.android.tweetui.internal.TweetMediaUtils:
    private void <init>()
    public static com.twitter.sdk.android.core.models.MediaEntity getPhotoEntity(com.twitter.sdk.android.core.models.Tweet)
    public static java.util.List getPhotoEntities(com.twitter.sdk.android.core.models.Tweet)
    public static boolean hasPhoto(com.twitter.sdk.android.core.models.Tweet)
    public static com.twitter.sdk.android.core.models.MediaEntity getVideoEntity(com.twitter.sdk.android.core.models.Tweet)
    public static boolean hasSupportedVideo(com.twitter.sdk.android.core.models.Tweet)
    static java.util.List getAllMediaEntities(com.twitter.sdk.android.core.models.Tweet)
    public static final java.lang.String PHOTO_TYPE
    public static final java.lang.String VIDEO_TYPE
    public static final java.lang.String GIF_TYPE
    private static final java.lang.String CONTENT_TYPE_MP4
    private static final java.lang.String CONTENT_TYPE_HLS
    private static final int LOOP_VIDEO_IN_MILLIS
androidx.core.view.LayoutInflaterCompat:
    private void <init>()
    public static void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)
    public static androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)
    private static final java.lang.String TAG
androidx.appcompat.widget.ActivityChooserView$2
androidx.core.view.MotionEventCompat:
    public static int getActionMasked(android.view.MotionEvent)
    public static int getActionIndex(android.view.MotionEvent)
    public static int findPointerIndex(android.view.MotionEvent,int)
    public static int getPointerId(android.view.MotionEvent,int)
    public static float getX(android.view.MotionEvent,int)
    public static float getY(android.view.MotionEvent,int)
    public static int getPointerCount(android.view.MotionEvent)
    public static int getSource(android.view.MotionEvent)
    public static float getAxisValue(android.view.MotionEvent,int)
    public static float getAxisValue(android.view.MotionEvent,int,int)
    public static int getButtonState(android.view.MotionEvent)
    private void <init>()
    public static final int ACTION_MASK
    public static final int ACTION_POINTER_DOWN
    public static final int ACTION_POINTER_UP
    public static final int ACTION_HOVER_MOVE
    public static final int ACTION_SCROLL
    public static final int ACTION_POINTER_INDEX_MASK
    public static final int ACTION_POINTER_INDEX_SHIFT
    public static final int ACTION_HOVER_ENTER
    public static final int ACTION_HOVER_EXIT
    public static final int AXIS_X
    public static final int AXIS_Y
    public static final int AXIS_PRESSURE
    public static final int AXIS_SIZE
    public static final int AXIS_TOUCH_MAJOR
    public static final int AXIS_TOUCH_MINOR
    public static final int AXIS_TOOL_MAJOR
    public static final int AXIS_TOOL_MINOR
    public static final int AXIS_ORIENTATION
    public static final int AXIS_VSCROLL
    public static final int AXIS_HSCROLL
    public static final int AXIS_Z
    public static final int AXIS_RX
    public static final int AXIS_RY
    public static final int AXIS_RZ
    public static final int AXIS_HAT_X
    public static final int AXIS_HAT_Y
    public static final int AXIS_LTRIGGER
    public static final int AXIS_RTRIGGER
    public static final int AXIS_THROTTLE
    public static final int AXIS_RUDDER
    public static final int AXIS_WHEEL
    public static final int AXIS_GAS
    public static final int AXIS_BRAKE
    public static final int AXIS_DISTANCE
    public static final int AXIS_TILT
    public static final int AXIS_SCROLL
    public static final int AXIS_RELATIVE_X
    public static final int AXIS_RELATIVE_Y
    public static final int AXIS_GENERIC_1
    public static final int AXIS_GENERIC_2
    public static final int AXIS_GENERIC_3
    public static final int AXIS_GENERIC_4
    public static final int AXIS_GENERIC_5
    public static final int AXIS_GENERIC_6
    public static final int AXIS_GENERIC_7
    public static final int AXIS_GENERIC_8
    public static final int AXIS_GENERIC_9
    public static final int AXIS_GENERIC_10
    public static final int AXIS_GENERIC_11
    public static final int AXIS_GENERIC_12
    public static final int AXIS_GENERIC_13
    public static final int AXIS_GENERIC_14
    public static final int AXIS_GENERIC_15
    public static final int AXIS_GENERIC_16
    public static final int BUTTON_PRIMARY
androidx.core.app.JobIntentService$CompatJobEngine
androidx.core.view.NestedScrollingChildHelper:
    public void onDetachedFromWindow()
    public void onStopNestedScroll(android.view.View)
androidx.core.view.DragAndDropPermissionsCompat
com.twitter.sdk.android.core.internal.scribe.SyndicatedSdkImpressionEvent:
    public void <init>(com.twitter.sdk.android.core.internal.scribe.EventNamespace,long,java.lang.String,java.lang.String)
    public static final java.lang.String CLIENT_NAME
    private static final java.lang.String SCRIBE_CATEGORY
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$1
com.facebook.share.internal.LikeActionController$11
androidx.browser.customtabs.PostMessageService$1
com.facebook.internal.CollectionMapper$1
androidx.legacy.v4.R$styleable
androidx.customview.R$dimen
com.facebook.share.model.ShareModelBuilder:
    public abstract com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
androidx.core.provider.FontsContractCompat$4$5
androidx.asynclayoutinflater.R$style
com.twitter.sdk.android.R$styleable
androidx.appcompat.widget.AppCompatRadioButton
androidx.core.content.ContextCompat$LegacyServiceMapHolder
com.facebook.FacebookContentProvider:
    private static final java.lang.String ATTACHMENT_URL_BASE
    private static final java.lang.String INVALID_FILE_NAME
androidx.drawerlayout.R$attr
com.facebook.share.model.ShareMessengerURLActionButton$Builder
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
androidx.vectordrawable.R
androidx.appcompat.app.AppCompatDelegateImpl
com.facebook.share.internal.LikeDialog$WebFallbackHandler
com.twitter.sdk.android.tweetui.internal.util.HtmlEntities
androidx.recyclerview.R$dimen
kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings
com.twitter.sdk.android.tweetui.BuildConfig
androidx.annotation.Size
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
io.flutter.plugins.packageinfo.R$string
com.facebook.internal.CollectionMapper$ValueMapper
zhuoyuan.li.fluttershareme.R$bool
kotlin.coroutines.experimental.ContinuationInterceptor$DefaultImpls
com.twitter.sdk.android.R$style
com.twitter.sdk.android.core.models.Card:
    public void <init>(com.twitter.sdk.android.core.models.BindingValues,java.lang.String)
androidx.coordinatorlayout.R$string
com.facebook.share.R$drawable
androidx.legacy.coreui.R$layout
com.twitter.sdk.android.core.internal.SessionMonitor$MonitorState:
    private boolean isOnSameDate(long,long)
    public synchronized boolean beginVerification(long)
    public synchronized void endVerification(long)
    public boolean verifying
    public long lastVerification
    private static final long TIME_THRESHOLD_IN_MILLIS
kotlin.io.FileWalkDirection
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$2
io.flutter.plugins.packageinfo.R$styleable
com.twitter.sdk.android.tweetui.TimelineDelegate$DefaultCallback
kotlin.annotation.Target
kotlin.coroutines.CoroutineContext$Element
android.support.v4.media.session.MediaControllerCompatApi24
kotlin.coroutines.ContinuationInterceptor$DefaultImpls
kotlin.jvm.Transient
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase
androidx.media.MediaBrowserServiceCompatApi26$MediaBrowserServiceAdaptor
com.appleeducate.getversion.R$drawable
com.facebook.share.widget.DeviceShareButton$1
androidx.annotation.StringDef
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate
com.twitter.sdk.android.tweetui.Timeline
androidx.core.graphics.TypefaceCompatUtil:
    private void <init>()
    private static final java.lang.String TAG
    private static final java.lang.String CACHE_FILE_PREFIX
com.twitter.sdk.android.tweetui.CollectionTimeline
androidx.appcompat.app.AppCompatDelegateImpl$1
androidx.appcompat.app.ResourcesFlusher
kotlin.sequences.DropTakeSequence
androidx.recyclerview.widget.DiffUtil$ItemCallback
okhttp3.RealCall:
    public okhttp3.Request request()
    synchronized void setForWebSocket()
    public synchronized boolean isExecuted()
    public boolean isCanceled()
    okhttp3.internal.connection.StreamAllocation streamAllocation()
androidx.versionedparcelable.ParcelUtils
androidx.appcompat.app.AlertController$ButtonHandler
com.example.connectivity.BuildConfig
kotlin.reflect.KType$DefaultImpls
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator
com.google.gson.JsonParser
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector:
    private java.lang.reflect.Method showSoftInputUnchecked
com.facebook.share.model.GameRequestContent
kotlin.text.CharsKt
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenDescending$1
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue
androidx.asynclayoutinflater.view.AsyncLayoutInflater$1
bolts.BoltsExecutors
kotlin.ranges.ClosedFloatRange
kotlin.time.ExperimentalTime
kotlin.text.StringsKt__IndentKt
kotlin.io.TextStreamsKt
androidx.core.view.accessibility.AccessibilityEventCompat:
    private void <init>()
    public static int getRecordCount(android.view.accessibility.AccessibilityEvent)
    public static void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)
    public static void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int)
    public static int getMovementGranularity(android.view.accessibility.AccessibilityEvent)
    public static void setAction(android.view.accessibility.AccessibilityEvent,int)
    public static int getAction(android.view.accessibility.AccessibilityEvent)
    public static final int TYPE_VIEW_HOVER_ENTER
    public static final int TYPE_VIEW_HOVER_EXIT
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_START
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_END
    public static final int TYPE_WINDOW_CONTENT_CHANGED
    public static final int TYPE_VIEW_SCROLLED
    public static final int TYPE_VIEW_TEXT_SELECTION_CHANGED
    public static final int TYPE_ANNOUNCEMENT
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUSED
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    public static final int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    public static final int TYPE_GESTURE_DETECTION_START
    public static final int TYPE_GESTURE_DETECTION_END
    public static final int TYPE_TOUCH_INTERACTION_START
    public static final int TYPE_TOUCH_INTERACTION_END
    public static final int TYPE_WINDOWS_CHANGED
    public static final int TYPE_VIEW_CONTEXT_CLICKED
    public static final int TYPE_ASSIST_READING_CONTEXT
    public static final int CONTENT_CHANGE_TYPE_UNDEFINED
    public static final int CONTENT_CHANGE_TYPE_SUBTREE
    public static final int CONTENT_CHANGE_TYPE_TEXT
    public static final int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
    public static final int TYPES_ALL_MASK
com.twitter.sdk.android.tweetui.R$string:
    private void <init>()
com.facebook.share.internal.ShareContentValidation$ApiValidator
androidx.core.content.res.FontResourcesParserCompat:
    private void <init>()
    private static final int NORMAL_WEIGHT
    private static final int ITALIC
    public static final int FETCH_STRATEGY_BLOCKING
    public static final int FETCH_STRATEGY_ASYNC
    public static final int INFINITE_TIMEOUT_VALUE
    private static final int DEFAULT_TIMEOUT_MILLIS
com.twitter.sdk.android.core.internal.scribe.EventsHandler$2
retrofit2.Utils:
    private void <init>()
com.facebook.share.ShareApi$5
com.twitter.sdk.android.tweetui.FormattedTweetText
io.flutter.plugins.deviceinfo.R$color
com.google.zxing.pdf417.decoder.BarcodeValue
androidx.fragment.app.FragmentActivity$HostCallbacks:
    public androidx.fragment.app.FragmentActivity onGetHost()
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
    public synthetic bridge java.lang.Object onGetHost()
androidx.recyclerview.widget.AdapterHelper:
    void <init>(androidx.recyclerview.widget.AdapterHelper$Callback)
    void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean)
    private void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    private void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    private void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    private void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    private int updatePositionWithPostponed(int,int)
    private boolean canFindInPreLayout(int)
    private void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    private void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    varargs androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[])
    void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int)
    int findPositionOffset(int)
    int findPositionOffset(int,int)
    boolean onItemRangeChanged(int,int,java.lang.Object)
    boolean onItemRangeInserted(int,int)
    boolean onItemRangeRemoved(int,int)
    boolean onItemRangeMoved(int,int,int)
    public androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object)
    public void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    void recycleUpdateOpsAndClearList(java.util.List)
    private androidx.core.util.Pools$Pool mUpdateOpPool
    final java.util.ArrayList mPendingUpdates
    final java.util.ArrayList mPostponedList
    final androidx.recyclerview.widget.AdapterHelper$Callback mCallback
    java.lang.Runnable mOnItemProcessedCallback
    final boolean mDisableRecycler
    final androidx.recyclerview.widget.OpReorderer mOpReorderer
    private int mExistingUpdateTypes
    static final int POSITION_TYPE_INVISIBLE
    static final int POSITION_TYPE_NEW_OR_LAID_OUT
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.core.hardware.display.DisplayManagerCompat
org.intellij.lang.annotations.Flow
androidx.core.app.FrameMetricsAggregator$MetricType
kotlin.UShortArray$Iterator
androidx.core.widget.TextViewCompat:
    private void <init>()
    private static java.lang.reflect.Field retrieveField(java.lang.String)
    private static int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)
    public static void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
    public static int getMaxLines(android.widget.TextView)
    public static int getMinLines(android.widget.TextView)
    public static void setTextAppearance(android.widget.TextView,int)
    public static android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
    public static void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)
    public static void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
    public static void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
    public static int getAutoSizeTextType(android.widget.TextView)
    public static int getAutoSizeStepGranularity(android.widget.TextView)
    public static int getAutoSizeMinTextSize(android.widget.TextView)
    public static int getAutoSizeMaxTextSize(android.widget.TextView)
    public static int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
    public static void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
    private static final java.lang.String LOG_TAG
    public static final int AUTO_SIZE_TEXT_TYPE_NONE
    public static final int AUTO_SIZE_TEXT_TYPE_UNIFORM
    private static java.lang.reflect.Field sMaximumField
    private static boolean sMaximumFieldFetched
    private static java.lang.reflect.Field sMaxModeField
    private static boolean sMaxModeFieldFetched
    private static java.lang.reflect.Field sMinimumField
    private static boolean sMinimumFieldFetched
    private static java.lang.reflect.Field sMinModeField
    private static boolean sMinModeFieldFetched
    private static final int LINES
com.facebook.common.R
okio.HashingSource
kotlin.io.FilesKt__UtilsKt$copyRecursively$2
com.google.zxing.Result
androidx.recyclerview.widget.RecyclerView$1
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler:
    private static final java.lang.String TAG
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1
androidx.core.graphics.PathParser:
    private void <init>()
    private static final java.lang.String LOGTAG
kotlin.sequences.DistinctIterator
kotlin.jvm.internal.markers.KMutableMap
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi21
okhttp3.internal.http.Http1xStream$ChunkedSource:
    private static final long NO_CHUNK_YET
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1
com.google.zxing.qrcode.decoder.DataMask$2
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi28
androidx.core.content.PermissionChecker
kotlin.coroutines.experimental.AbstractCoroutineContextElement
com.google.zxing.pdf417.decoder.ec.ErrorCorrection
io.flutter.embedding.android.FlutterSurfaceView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static final java.lang.String TAG
androidx.legacy.coreui.R$color
io.flutter.plugins.connectivity.R$color
androidx.fragment.app.FragmentTabHost$TabInfo
com.google.zxing.MultiFormatReader
androidx.core.app.NotificationCompatSideChannelService
androidx.core.view.DragStartHelper$OnDragStartListener
com.google.zxing.qrcode.decoder.Decoder
com.facebook.share.internal.AppInviteDialogFeature
com.twitter.sdk.android.tweetui.TweetTimelineRecyclerViewAdapter
bolts.Task$4
com.twitter.sdk.android.core.models.MediaEntity$Sizes
com.facebook.internal.NativeProtocol$WakizashiAppInfo:
    static final java.lang.String WAKIZASHI_PACKAGE
com.google.zxing.client.result.AddressBookDoCoMoResultParser
com.facebook.FacebookException:
    static final long serialVersionUID
io.flutter.plugins.urllauncher.R$styleable
kotlin.jvm.functions.Function16
com.twitter.sdk.android.core.internal.ActivityLifecycleManager$Callbacks:
    public void onActivityCreated(android.app.Activity,android.os.Bundle)
    public void onActivityStarted(android.app.Activity)
    public void onActivityResumed(android.app.Activity)
    public void onActivityPaused(android.app.Activity)
    public void onActivityStopped(android.app.Activity)
    public void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
    public void onActivityDestroyed(android.app.Activity)
kotlin.Lazy
kotlin.sequences.SequencesKt__SequencesKt
androidx.appcompat.view.ActionMode
com.twitter.sdk.android.core.internal.scribe.ScribeItem$MediaDetails:
    public static final int TYPE_CONSUMER
    public static final int TYPE_AMPLIFY
    public static final int TYPE_ANIMATED_GIF
    public static final int TYPE_VINE
    public static final java.lang.String GIF_TYPE
com.squareup.picasso.UrlConnectionDownloader:
    public void shutdown()
    static final java.lang.String RESPONSE_SOURCE
    private static final java.lang.String FORCE_CACHE
androidx.customview.widget.ViewDragHelper$2
androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    public void <init>()
androidx.recyclerview.widget.AsyncListDiffer$1$1
androidx.core.widget.PopupMenuCompat
bolts.AndroidExecutors
kotlin.reflect.KTypeProjection$Companion
android.support.v4.media.session.MediaSessionCompat:
    public void <init>(android.content.Context,java.lang.String)
    public void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)
    public void <init>(android.content.Context,java.lang.String,android.os.Bundle)
    private void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,android.os.Bundle)
    private void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl)
    public static android.support.v4.media.session.MediaSessionCompat fromMediaSession(android.content.Context,java.lang.Object)
    static android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat)
    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)
    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
    public void setSessionActivity(android.app.PendingIntent)
    public void setMediaButtonReceiver(android.app.PendingIntent)
    public void setFlags(int)
    public void setPlaybackToLocal(int)
    public void setPlaybackToRemote(androidx.media.VolumeProviderCompat)
    public void setActive(boolean)
    public boolean isActive()
    public void sendSessionEvent(java.lang.String,android.os.Bundle)
    public void release()
    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    public android.support.v4.media.session.MediaControllerCompat getController()
    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    public void setQueue(java.util.List)
    public void setQueueTitle(java.lang.CharSequence)
    public void setRatingType(int)
    public void setCaptioningEnabled(boolean)
    public void setRepeatMode(int)
    public void setShuffleMode(int)
    public void setExtras(android.os.Bundle)
    public java.lang.Object getMediaSession()
    public java.lang.Object getRemoteControlClient()
    public final androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()
    public java.lang.String getCallingPackage()
    public void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    public void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl
    private final android.support.v4.media.session.MediaControllerCompat mController
    private final java.util.ArrayList mActiveListeners
    static final java.lang.String TAG
    public static final int FLAG_HANDLES_MEDIA_BUTTONS
    public static final int FLAG_HANDLES_TRANSPORT_CONTROLS
    public static final int FLAG_HANDLES_QUEUE_COMMANDS
    public static final java.lang.String ACTION_FLAG_AS_INAPPROPRIATE
    public static final java.lang.String ACTION_SKIP_AD
    public static final java.lang.String ACTION_FOLLOW
    public static final java.lang.String ACTION_UNFOLLOW
    public static final java.lang.String ARGUMENT_MEDIA_ATTRIBUTE
    public static final java.lang.String ARGUMENT_MEDIA_ATTRIBUTE_VALUE
    public static final int MEDIA_ATTRIBUTE_ARTIST
    public static final int MEDIA_ATTRIBUTE_ALBUM
    public static final int MEDIA_ATTRIBUTE_PLAYLIST
    public static final java.lang.String ACTION_PLAY_FROM_URI
    public static final java.lang.String ACTION_PREPARE
    public static final java.lang.String ACTION_PREPARE_FROM_MEDIA_ID
    public static final java.lang.String ACTION_PREPARE_FROM_SEARCH
    public static final java.lang.String ACTION_PREPARE_FROM_URI
    public static final java.lang.String ACTION_SET_CAPTIONING_ENABLED
    public static final java.lang.String ACTION_SET_REPEAT_MODE
    public static final java.lang.String ACTION_SET_SHUFFLE_MODE
    public static final java.lang.String ACTION_SET_RATING
    public static final java.lang.String ACTION_ARGUMENT_MEDIA_ID
    public static final java.lang.String ACTION_ARGUMENT_QUERY
    public static final java.lang.String ACTION_ARGUMENT_URI
    public static final java.lang.String ACTION_ARGUMENT_RATING
    public static final java.lang.String ACTION_ARGUMENT_EXTRAS
    public static final java.lang.String ACTION_ARGUMENT_CAPTIONING_ENABLED
    public static final java.lang.String ACTION_ARGUMENT_REPEAT_MODE
    public static final java.lang.String ACTION_ARGUMENT_SHUFFLE_MODE
    public static final java.lang.String KEY_TOKEN
    public static final java.lang.String KEY_EXTRA_BINDER
    public static final java.lang.String KEY_SESSION_TOKEN2_BUNDLE
    private static final int MAX_BITMAP_SIZE_IN_DP
    private static final java.lang.String DATA_CALLING_PACKAGE
    private static final java.lang.String DATA_CALLING_PID
    private static final java.lang.String DATA_CALLING_UID
    private static final java.lang.String DATA_EXTRAS
    static int sMaxBitmapSize
com.google.gson.stream.MalformedJsonException:
    public void <init>(java.lang.String,java.lang.Throwable)
    public void <init>(java.lang.Throwable)
    private static final long serialVersionUID
com.squareup.picasso.RemoteViewsAction$NotificationAction
androidx.media.VolumeProviderCompat$ControlType
kotlin.sequences.IndexingSequence
com.facebook.appevents.codeless.internal.EventBinding:
    public com.facebook.appevents.codeless.internal.EventBinding$ActionType getType()
    public com.facebook.appevents.codeless.internal.EventBinding$MappingMethod getMethod()
    public java.lang.String getAppVersion()
    public java.lang.String getComponentId()
    public java.lang.String getPathType()
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4
com.google.zxing.qrcode.decoder.Mode:
    public static com.google.zxing.qrcode.decoder.Mode forBits(int)
androidx.drawerlayout.R$styleable
io.flutter.embedding.android.FlutterFragment
io.flutter.embedding.engine.plugins.PluginRegistry:
    public abstract void add(java.util.Set)
    public abstract boolean has(java.lang.Class)
    public abstract io.flutter.embedding.engine.plugins.FlutterPlugin get(java.lang.Class)
    public abstract void remove(java.lang.Class)
    public abstract void remove(java.util.Set)
    public abstract void removeAll()
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
androidx.appcompat.widget.AppCompatImageHelper:
    void setInternalImageTint(android.content.res.ColorStateList)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1
androidx.browser.customtabs.CustomTabsClient$2
android.support.v4.media.session.IMediaSession:
    public abstract void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
    public abstract boolean sendMediaButton(android.view.KeyEvent)
    public abstract void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
    public abstract boolean isTransportControlEnabled()
    public abstract java.lang.String getPackageName()
    public abstract java.lang.String getTag()
    public abstract android.app.PendingIntent getLaunchPendingIntent()
    public abstract long getFlags()
    public abstract android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes()
    public abstract void adjustVolume(int,int,java.lang.String)
    public abstract void setVolumeTo(int,int,java.lang.String)
    public abstract android.support.v4.media.MediaMetadataCompat getMetadata()
    public abstract android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public abstract java.util.List getQueue()
    public abstract java.lang.CharSequence getQueueTitle()
    public abstract android.os.Bundle getExtras()
    public abstract int getRatingType()
    public abstract boolean isCaptioningEnabled()
    public abstract int getRepeatMode()
    public abstract boolean isShuffleModeEnabledRemoved()
    public abstract int getShuffleMode()
    public abstract void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public abstract void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
    public abstract void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public abstract void removeQueueItemAt(int)
    public abstract void prepare()
    public abstract void prepareFromMediaId(java.lang.String,android.os.Bundle)
    public abstract void prepareFromSearch(java.lang.String,android.os.Bundle)
    public abstract void prepareFromUri(android.net.Uri,android.os.Bundle)
    public abstract void play()
    public abstract void playFromMediaId(java.lang.String,android.os.Bundle)
    public abstract void playFromSearch(java.lang.String,android.os.Bundle)
    public abstract void playFromUri(android.net.Uri,android.os.Bundle)
    public abstract void skipToQueueItem(long)
    public abstract void pause()
    public abstract void stop()
    public abstract void next()
    public abstract void previous()
    public abstract void fastForward()
    public abstract void rewind()
    public abstract void seekTo(long)
    public abstract void rate(android.support.v4.media.RatingCompat)
    public abstract void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
    public abstract void setCaptioningEnabled(boolean)
    public abstract void setRepeatMode(int)
    public abstract void setShuffleModeEnabledRemoved(boolean)
    public abstract void setShuffleMode(int)
    public abstract void sendCustomAction(java.lang.String,android.os.Bundle)
androidx.loader.app.LoaderManager$LoaderCallbacks
com.facebook.share.internal.LikeActionController$7$1
com.google.gson.internal.LinkedHashTreeMap$KeySet$1
androidx.cardview.R$attr:
    private void <init>()
androidx.fragment.app.FragmentController:
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public int getActiveFragmentsCount()
    public java.util.List getActiveFragments(java.util.List)
    public void restoreAllState(android.os.Parcelable,java.util.List)
    public java.util.List retainNonConfig()
    public void dispatchReallyStop()
    public void dispatchDestroyView()
    public void doLoaderStart()
    public void doLoaderStop(boolean)
    public void doLoaderRetain()
    public void doLoaderDestroy()
    public void reportLoaderStart()
    public androidx.collection.SimpleArrayMap retainLoaderNonConfig()
    public void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
    public void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.twitter.sdk.android.tweetui.TweetUtils
android.support.v4.media.session.MediaSessionCompatApi21
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$1
androidx.documentfile.provider.DocumentsContractApi19
androidx.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor
androidx.media.session.MediaButtonReceiver
com.facebook.share.model.ShareMediaContent:
    private void <init>(com.facebook.share.model.ShareMediaContent$Builder)
    synthetic void <init>(com.facebook.share.model.ShareMediaContent$Builder,com.facebook.share.model.ShareMediaContent$1)
io.flutter.plugins.deviceinfo.R$styleable
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7
androidx.media.AudioAttributesImpl:
    public abstract java.lang.Object getAudioAttributes()
    public abstract int getVolumeControlStream()
    public abstract int getLegacyStreamType()
    public abstract int getRawLegacyStreamType()
    public abstract int getContentType()
    public abstract int getUsage()
    public abstract int getFlags()
    public abstract android.os.Bundle toBundle()
com.facebook.share.BuildConfig
kotlin.coroutines.experimental.SafeContinuation$Companion
com.google.gson.JsonPrimitive:
    public void <init>(java.lang.Character)
    com.google.gson.JsonPrimitive deepCopy()
    public java.math.BigDecimal getAsBigDecimal()
    public java.math.BigInteger getAsBigInteger()
    public float getAsFloat()
    public short getAsShort()
    public byte getAsByte()
    public char getAsCharacter()
    synthetic bridge com.google.gson.JsonElement deepCopy()
com.twitter.sdk.android.core.internal.scribe.EventsFilesManager:
    public long getLastRollOverTime()
    public void deleteAllEventsFiles()
    public static final java.lang.String ROLL_OVER_FILE_NAME_SEPARATOR
    public static final int MAX_BYTE_SIZE_PER_FILE
    public static final int MAX_FILES_IN_BATCH
    public static final int MAX_FILES_TO_KEEP
androidx.core.util.PatternsCompat
com.twitter.sdk.android.core.TwitterContext
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1
io.flutter.plugins.packageinfo.R$attr
kotlin.ranges.ClosedDoubleRange
com.facebook.share.model.ShareVideoContent:
    private void <init>(com.facebook.share.model.ShareVideoContent$Builder)
    synthetic void <init>(com.facebook.share.model.ShareVideoContent$Builder,com.facebook.share.model.ShareVideoContent$1)
kotlin.sequences.USequencesKt___USequencesKt
io.flutter.plugins.urllauncher.UrlLauncherPlugin:
    public static void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
    private static final java.lang.String TAG
androidx.vectordrawable.R$string
androidx.asynclayoutinflater.R$string
com.google.gson.internal.Excluder:
    public com.google.gson.internal.Excluder withVersion(double)
    public varargs com.google.gson.internal.Excluder withModifiers(int[])
    public com.google.gson.internal.Excluder disableInnerClassSerialization()
    public com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation()
    public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)
    private static final double IGNORE_VERSIONS
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    public void <init>()
    public static final int DIRECTION_LEFT
    public static final int DIRECTION_TOP
    public static final int DIRECTION_RIGHT
    public static final int DIRECTION_BOTTOM
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23
okhttp3.Cache$Entry
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1
com.facebook.share.internal.LikeButton
com.twitter.sdk.android.core.models.SearchMetadata
androidx.appcompat.widget.ActionBarOverlayLayout:
    public boolean isInOverlayMode()
    public boolean isHideOnContentScrollEnabled()
    public void initFeature(int)
    public boolean hasIcon()
    public boolean hasLogo()
    public boolean canShowOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public boolean showOverflowMenu()
    public boolean hideOverflowMenu()
    public void setMenuPrepared()
    public void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
    public void saveToolbarHierarchyState(android.util.SparseArray)
    public void restoreToolbarHierarchyState(android.util.SparseArray)
    public void dismissPopups()
    private static final java.lang.String TAG
    private static final int ACTION_BAR_ANIMATE_DELAY
androidx.core.app.ShareCompat$IntentReader
androidx.annotation.MainThread
io.flutter.app.FlutterActivity
androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    private void <init>()
    private static final java.lang.String TAG
com.facebook.share.internal.CameraEffectJSONUtility$1:
    public void setOnArgumentsBuilder(com.facebook.share.model.CameraEffectArguments$Builder,java.lang.String,java.lang.Object)
com.facebook.share.internal.LikeActionController$4
kotlin.sequences.EmptySequence
kotlin.text.StringsKt__StringNumberConversionsJVMKt
io.flutter.embedding.android.FlutterView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,io.flutter.embedding.android.FlutterView$RenderMode)
    public void <init>(android.content.Context,io.flutter.embedding.android.FlutterView$TransparencyMode)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,io.flutter.embedding.android.FlutterView$RenderMode,io.flutter.embedding.android.FlutterView$TransparencyMode)
    private static final java.lang.String TAG
com.twitter.sdk.android.core.models.TweetBuilder:
    public com.twitter.sdk.android.core.models.TweetBuilder setCoordinates(com.twitter.sdk.android.core.models.Coordinates)
    public com.twitter.sdk.android.core.models.TweetBuilder setCreatedAt(java.lang.String)
    public com.twitter.sdk.android.core.models.TweetBuilder setCurrentUserRetweet(java.lang.Object)
    public com.twitter.sdk.android.core.models.TweetBuilder setEntities(com.twitter.sdk.android.core.models.TweetEntities)
    public com.twitter.sdk.android.core.models.TweetBuilder setExtendedEntities(com.twitter.sdk.android.core.models.TweetEntities)
    public com.twitter.sdk.android.core.models.TweetBuilder setFavoriteCount(java.lang.Integer)
    public com.twitter.sdk.android.core.models.TweetBuilder setFilterLevel(java.lang.String)
    public com.twitter.sdk.android.core.models.TweetBuilder setId(long)
    public com.twitter.sdk.android.core.models.TweetBuilder setIdStr(java.lang.String)
    public com.twitter.sdk.android.core.models.TweetBuilder setInReplyToScreenName(java.lang.String)
    public com.twitter.sdk.android.core.models.TweetBuilder setInReplyToStatusId(long)
    public com.twitter.sdk.android.core.models.TweetBuilder setInReplyToStatusIdStr(java.lang.String)
    public com.twitter.sdk.android.core.models.TweetBuilder setInReplyToUserId(long)
    public com.twitter.sdk.android.core.models.TweetBuilder setInReplyToUserIdStr(java.lang.String)
    public com.twitter.sdk.android.core.models.TweetBuilder setLang(java.lang.String)
    public com.twitter.sdk.android.core.models.TweetBuilder setPlace(com.twitter.sdk.android.core.models.Place)
    public com.twitter.sdk.android.core.models.TweetBuilder setPossiblySensitive(boolean)
    public com.twitter.sdk.android.core.models.TweetBuilder setScopes(java.lang.Object)
    public com.twitter.sdk.android.core.models.TweetBuilder setQuotedStatusId(long)
    public com.twitter.sdk.android.core.models.TweetBuilder setQuotedStatusIdStr(java.lang.String)
    public com.twitter.sdk.android.core.models.TweetBuilder setQuotedStatus(com.twitter.sdk.android.core.models.Tweet)
    public com.twitter.sdk.android.core.models.TweetBuilder setRetweetCount(int)
    public com.twitter.sdk.android.core.models.TweetBuilder setRetweeted(boolean)
    public com.twitter.sdk.android.core.models.TweetBuilder setRetweetedStatus(com.twitter.sdk.android.core.models.Tweet)
    public com.twitter.sdk.android.core.models.TweetBuilder setSource(java.lang.String)
    public com.twitter.sdk.android.core.models.TweetBuilder setText(java.lang.String)
    public com.twitter.sdk.android.core.models.TweetBuilder setDisplayTextRange(java.util.List)
    public com.twitter.sdk.android.core.models.TweetBuilder setTruncated(boolean)
    public com.twitter.sdk.android.core.models.TweetBuilder setUser(com.twitter.sdk.android.core.models.User)
    public com.twitter.sdk.android.core.models.TweetBuilder setWithheldCopyright(boolean)
    public com.twitter.sdk.android.core.models.TweetBuilder setWithheldInCountries(java.util.List)
    public com.twitter.sdk.android.core.models.TweetBuilder setWithheldScope(java.lang.String)
    public com.twitter.sdk.android.core.models.TweetBuilder setCard(com.twitter.sdk.android.core.models.Card)
kotlin.jvm.functions.FunctionN
androidx.core.text.BidiFormatter$Builder
kotlin.collections.MapWithDefaultImpl
kotlin.random.RandomKt
kotlin.jvm.internal.PropertyReference1
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder
kotlin.UNumbersKt
kotlin.sequences.TakeWhileSequence
androidx.multidex.MultiDex$V14$JBMR11ElementConstructor
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder:
    void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
com.google.zxing.client.result.URLTOResultParser
com.facebook.internal.NativeProtocol$KatanaAppInfo:
    static final java.lang.String KATANA_PACKAGE
com.iyaffle.launchreview.R$drawable
androidx.recyclerview.widget.FastScroller$2
com.google.zxing.BinaryBitmap
com.squareup.picasso.ContactsPhotoRequestHandler:
    private static final int ID_LOOKUP
    private static final int ID_THUMBNAIL
    private static final int ID_CONTACT
    private static final int ID_DISPLAY_PHOTO
androidx.annotation.NonNull
androidx.drawerlayout.R$color
kotlin.properties.Delegates$observable$1
androidx.core.R$string
android.support.v4.media.MediaBrowserCompat$MediaItem:
    public static android.support.v4.media.MediaBrowserCompat$MediaItem fromMediaItem(java.lang.Object)
    public static java.util.List fromMediaItemList(java.util.List)
    public void <init>(android.support.v4.media.MediaDescriptionCompat,int)
    public int getFlags()
    public boolean isBrowsable()
    public boolean isPlayable()
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public java.lang.String getMediaId()
    public static final int FLAG_BROWSABLE
    public static final int FLAG_PLAYABLE
com.google.zxing.Reader
androidx.arch.core.executor.DefaultTaskExecutor$1:
    private static final java.lang.String THREAD_NAME_STEM
com.google.zxing.ChecksumException
kotlin.collections.ArraysKt___ArraysKt$withIndex$8
androidx.core.util.Pools$SimplePool
retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall:
    public boolean isExecuted()
    public void cancel()
    public okhttp3.Request request()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
androidx.core.text.util.LinkifyCompat
androidx.lifecycle.livedata.core.R
androidx.documentfile.provider.DocumentFile
com.facebook.internal.CallbackManagerImpl:
    private static synchronized com.facebook.internal.CallbackManagerImpl$Callback getStaticCallback(java.lang.Integer)
    private static boolean runStaticCallback(int,int,android.content.Intent)
    public void unregisterCallback(int)
    public boolean onActivityResult(int,int,android.content.Intent)
kotlin.jvm.internal.MutablePropertyReference0
kotlin.coroutines.CombinedContext$writeReplace$1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs
com.facebook.AccessTokenManager:
    public static final java.lang.String TAG
    public static final java.lang.String ACTION_CURRENT_ACCESS_TOKEN_CHANGED
    public static final java.lang.String EXTRA_OLD_ACCESS_TOKEN
    public static final java.lang.String EXTRA_NEW_ACCESS_TOKEN
    public static final java.lang.String SHARED_PREFERENCES_NAME
    private static final int TOKEN_EXTEND_THRESHOLD_SECONDS
    private static final int TOKEN_EXTEND_RETRY_SECONDS
    private static final java.lang.String TOKEN_EXTEND_GRAPH_PATH
    private static final java.lang.String ME_PERMISSIONS_GRAPH_PATH
com.twitter.sdk.android.tweetui.internal.ClickableLinkSpan
androidx.core.content.pm.PermissionInfoCompat$Protection
androidx.legacy.coreui.R$attr
kotlin.Experimental
kotlin.io.ConsoleKt
kotlin.coroutines.experimental.CoroutineContext$plus$1
androidx.appcompat.app.WindowDecorActionBar$1
androidx.core.util.Pools$Pool
com.google.zxing.common.DetectorResult
androidx.recyclerview.widget.RecyclerView$Adapter:
    public void <init>()
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    public abstract void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
    public final androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int)
    public final void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public int getItemViewType(int)
    public void setHasStableIds(boolean)
    public long getItemId(int)
    public void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final boolean hasObservers()
    public final void notifyDataSetChanged()
    public final void notifyItemChanged(int)
    public final void notifyItemChanged(int,java.lang.Object)
    public final void notifyItemRangeChanged(int,int)
    public final void notifyItemRangeChanged(int,int,java.lang.Object)
    public final void notifyItemInserted(int)
    public final void notifyItemMoved(int,int)
    public final void notifyItemRangeInserted(int,int)
    public final void notifyItemRemoved(int)
    public final void notifyItemRangeRemoved(int,int)
    private final androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable
    private boolean mHasStableIds
com.twitter.sdk.android.core.TwitterConfig$1
com.google.zxing.oned.OneDReader:
    public void <init>()
    private com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map)
    protected static void recordPattern(com.google.zxing.common.BitArray,int,int[])
    protected static void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[])
    protected static float patternMatchVariance(int[],int[],float)
    public com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
    public com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
    public void reset()
    public abstract com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
kotlin.io.FilesKt__FileReadWriteKt
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase
androidx.annotation.RequiresPermission
androidx.fragment.app.Fragment:
    public static androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
    public androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
    public androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
    public final int getId()
    public final java.lang.String getTag()
    public final android.os.Bundle getArguments()
    public void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
    public void setTargetFragment(androidx.fragment.app.Fragment,int)
    public final androidx.fragment.app.Fragment getTargetFragment()
    public final int getTargetRequestCode()
    public final androidx.fragment.app.FragmentActivity requireActivity()
    public final java.lang.Object getHost()
    public final java.lang.Object requireHost()
    public final java.lang.CharSequence getText(int)
    public final varargs java.lang.String getString(int,java.lang.Object[])
    public final androidx.fragment.app.FragmentManager requireFragmentManager()
    public final androidx.fragment.app.Fragment getParentFragment()
    public final boolean isDetached()
    public final boolean isRemoving()
    public final boolean isInLayout()
    public final boolean isVisible()
    public final boolean isHidden()
    public final boolean hasOptionsMenu()
    public final boolean isMenuVisible()
    public void setHasOptionsMenu(boolean)
    public void setMenuVisibility(boolean)
    public void setUserVisibleHint(boolean)
    public boolean getUserVisibleHint()
    public androidx.loader.app.LoaderManager getLoaderManager()
    public void startActivity(android.content.Intent)
    public void startActivity(android.content.Intent,android.os.Bundle)
    public void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public final void requestPermissions(java.lang.String[],int)
    public boolean shouldShowRequestPermissionRationale(java.lang.String)
    public final android.view.LayoutInflater getLayoutInflater()
    public void registerForContextMenu(android.view.View)
    public void unregisterForContextMenu(android.view.View)
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setEnterTransition(java.lang.Object)
    public void setReturnTransition(java.lang.Object)
    public void setExitTransition(java.lang.Object)
    public void setReenterTransition(java.lang.Object)
    public void setSharedElementEnterTransition(java.lang.Object)
    public void setSharedElementReturnTransition(java.lang.Object)
    public void setAllowEnterTransitionOverlap(boolean)
    public void setAllowReturnTransitionOverlap(boolean)
    public void postponeEnterTransition()
    static final int INITIALIZING
    static final int CREATED
    static final int ACTIVITY_CREATED
    static final int STARTED
    static final int RESUMED
kotlin.coroutines.jvm.internal.SuspendFunction
androidx.core.widget.NestedScrollView:
    public boolean isFillViewport()
    public boolean isSmoothScrollingEnabled()
    static final int ANIMATED_SCROLL_GAP
    static final float MAX_SCROLL_FACTOR
    private static final java.lang.String TAG
    private static final int INVALID_POINTER
kotlin.ReplaceWith
com.twitter.sdk.android.core.internal.ActivityLifecycleManager$ActivityLifecycleCallbacksWrapper
com.facebook.share.widget.MessageDialog$NativeHandler$1
androidx.media.MediaSessionManager
com.example.connectivity.R$id
android.support.v4.media.RatingCompat$StarStyle
kotlin.LateinitKt
io.flutter.plugins.urllauncher.R$string
kotlin.coroutines.experimental.migration.ContinuationMigration
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$2
androidx.recyclerview.widget.SortedList
android.support.v4.media.session.PlaybackStateCompat$State
kotlin.io.ByteStreamsKt$iterator$1
kotlin.coroutines.jvm.internal.RunSuspend
kotlin.jvm.internal.Ref$LongRef
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState
com.twitter.sdk.android.core.internal.SessionVerifier:
    public abstract void verifySession(com.twitter.sdk.android.core.Session)
com.facebook.internal.FileLruCache$1
androidx.appcompat.app.AlertDialog
androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    public int getChildCount()
    public android.view.View getParent()
com.google.zxing.common.reedsolomon.GenericGFPoly:
    int evaluateAt(int)
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar:
    public android.content.Context context()
    public android.content.Context activeContext()
    public io.flutter.view.TextureRegistry textures()
    public io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry()
    public io.flutter.view.FlutterView view()
    public java.lang.String lookupKeyForAsset(java.lang.String)
    public java.lang.String lookupKeyForAsset(java.lang.String,java.lang.String)
    public io.flutter.plugin.common.PluginRegistry$Registrar publish(java.lang.Object)
    public io.flutter.plugin.common.PluginRegistry$Registrar addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
    public io.flutter.plugin.common.PluginRegistry$Registrar addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
    public io.flutter.plugin.common.PluginRegistry$Registrar addNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
    public io.flutter.plugin.common.PluginRegistry$Registrar addUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
    public io.flutter.plugin.common.PluginRegistry$Registrar addViewDestroyListener(io.flutter.plugin.common.PluginRegistry$ViewDestroyListener)
    private static final java.lang.String TAG
com.twitter.sdk.android.core.models.MentionEntity
androidx.collection.LruCache:
    public void resize(int)
    public final java.lang.Object remove(java.lang.Object)
    public final void evictAll()
    public final synchronized int size()
    public final synchronized int maxSize()
    public final synchronized int hitCount()
    public final synchronized int missCount()
    public final synchronized int createCount()
    public final synchronized int putCount()
    public final synchronized int evictionCount()
    public final synchronized java.util.Map snapshot()
kotlin.reflect.KMutableProperty2
androidx.customview.R$attr
com.google.gson.JsonNull:
    com.google.gson.JsonNull deepCopy()
    synthetic bridge com.google.gson.JsonElement deepCopy()
androidx.documentfile.provider.RawDocumentFile
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow
kotlin.jvm.Strictfp
androidx.core.content.ContentResolverCompat:
    private void <init>()
androidx.lifecycle.viewmodel.R
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    public void <init>(androidx.recyclerview.widget.RecyclerView)
    boolean shouldIgnore()
    public boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
    public void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public androidx.core.view.AccessibilityDelegateCompat getItemDelegate()
    final androidx.recyclerview.widget.RecyclerView mRecyclerView
    final androidx.core.view.AccessibilityDelegateCompat mItemDelegate
com.twitter.sdk.android.BuildConfig
com.google.zxing.pdf417.encoder.PDF417ErrorCorrection:
    private void <init>()
    static int getRecommendedMinimumErrorCorrectionLevel(int)
androidx.appcompat.widget.ActivityChooserView$5
com.twitter.sdk.android.tweetui.BaseTweetView$1
androidx.lifecycle.ReportFragment:
    static androidx.lifecycle.ReportFragment get(android.app.Activity)
    void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    private static final java.lang.String REPORT_FRAGMENT_TAG
com.twitter.sdk.android.tweetui.R$dimen:
    private void <init>()
androidx.appcompat.widget.ActionBarContextView$1
io.flutter.plugins.share.R$color
androidx.core.app.CoreComponentFactory:
    private static final java.lang.String TAG
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2
com.google.zxing.datamatrix.encoder.ErrorCorrection:
    private void <init>()
    private static final int MODULO_VALUE
com.example.connectivity.ConnectivityPlugin
com.twitter.sdk.android.R$dimen
com.facebook.CallbackManager$Factory:
    public void <init>()
androidx.media.MediaSessionManager$RemoteUserInfoImpl
kotlin.LazyKt__LazyJVMKt
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback
com.google.zxing.common.reedsolomon.ReedSolomonException
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1
kotlin.random.XorWowRandom
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric
kotlin.jvm.internal.InlineMarker
io.flutter.plugin.common.EventChannel:
    private static final java.lang.String TAG
com.google.zxing.client.result.GeoParsedResult
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1
com.facebook.share.model.ShareMessengerGenericTemplateContent:
    protected void <init>(com.facebook.share.model.ShareMessengerGenericTemplateContent$Builder)
com.facebook.internal.Logger:
    public int getPriority()
    public void setPriority(int)
    public java.lang.String getContents()
    public void append(java.lang.StringBuilder)
    public static final java.lang.String LOG_TAG_BASE
androidx.recyclerview.widget.ListAdapter
com.appleeducate.getversion.R$string
io.flutter.embedding.engine.dart.DartExecutor$DartCallback
kotlin.jvm.internal.markers.KMutableListIterator
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt
com.google.zxing.client.result.AddressBookParsedResult
kotlin.ParameterName
com.google.zxing.oned.ITFReader
com.facebook.share.internal.LikeActionController$CreateLikeActionControllerWorkItem
androidx.recyclerview.widget.DefaultItemAnimator$4
io.flutter.embedding.engine.FlutterEngineCache:
    public boolean contains(java.lang.String)
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1
kotlin.contracts.ContractBuilder$DefaultImpls
androidx.core.view.ViewParentCompat:
    private void <init>()
    public static boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onStopNestedScroll(android.view.ViewParent,android.view.View)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
    public static void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
    public static void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
    private static final java.lang.String TAG
com.twitter.sdk.android.core.models.TwitterCollection$Metadata
bolts.Task$12
kotlin.jvm.functions.Function4
androidx.core.widget.PopupWindowCompat:
    private void <init>()
    public static boolean getOverlapAnchor(android.widget.PopupWindow)
    public static int getWindowLayoutType(android.widget.PopupWindow)
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sGetWindowLayoutTypeMethod
    private static boolean sGetWindowLayoutTypeMethodAttempted
bolts.AppLinkNavigation$NavigationResult
io.flutter.app.FlutterActivityDelegate
com.twitter.sdk.android.core.internal.AdvertisingInfoServiceStrategy$1
androidx.core.content.pm.PermissionInfoCompat
kotlin.io.SerializableKt
androidx.core.view.ViewCompat$ScrollIndicators
io.flutter.embedding.android.SplashScreenProvider
androidx.core.view.NestedScrollingParentHelper:
    public void onStopNestedScroll(android.view.View)
kotlin.jvm.internal.ByteSpreadBuilder
androidx.core.view.accessibility.AccessibilityWindowInfoCompat
com.facebook.internal.instrument.errorreport.ErrorReportData:
    private static final java.lang.String PRARAM_ERROR_MESSAGE
    private static final java.lang.String PARAM_TIMESTAMP
com.facebook.appevents.internal.SessionInfo:
    public java.lang.Long getSessionStartTime()
    public void setSourceApplicationInfo(com.facebook.appevents.internal.SourceApplicationInfo)
    private static final java.lang.String LAST_SESSION_INFO_START_KEY
    private static final java.lang.String LAST_SESSION_INFO_END_KEY
    private static final java.lang.String INTERRUPTION_COUNT_KEY
    private static final java.lang.String SESSION_ID_KEY
androidx.appcompat.widget.PopupMenu
androidx.appcompat.view.menu.CascadingMenuPopup:
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    static final int HORIZ_POSITION_LEFT
    static final int HORIZ_POSITION_RIGHT
    static final int SUBMENU_TIMEOUT_MS
kotlin.text.Typography
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder
retrofit2.RequestBuilder:
    private static final java.lang.String PATH_SEGMENT_ALWAYS_ENCODE_SET
kotlin.ULongArray
androidx.core.provider.FontsContractCompat$4$6
androidx.appcompat.content.res.AppCompatResources:
    private void <init>()
    private static final java.lang.String LOG_TAG
com.twitter.sdk.android.tweetui.ColorUtils
kotlinx.android.parcel.TypeParceler
io.flutter.plugin.common.FlutterException:
    private static final java.lang.String TAG
kotlin.jvm.functions.Function20
androidx.annotation.RequiresApi
okhttp3.internal.Util:
    private void <init>()
    public static void closeQuietly(java.net.ServerSocket)
    public static java.lang.String md5Hex(java.lang.String)
    public static java.lang.String shaBase64(java.lang.String)
    public static java.lang.String toHumanReadableAscii(java.lang.String)
kotlinx.android.parcel.RawValue
com.facebook.internal.BundleJSONConverter$3:
    public void setOnJSON(org.json.JSONObject,java.lang.String,java.lang.Object)
com.twitter.sdk.android.tweetui.TweetTimelineRecyclerViewAdapter$TweetViewHolder
com.twitter.sdk.android.tweetcomposer.ComposerActivity$Builder
com.twitter.sdk.android.core.internal.scribe.ScribeHandler:
    public void scribeAndFlush(com.twitter.sdk.android.core.internal.scribe.ScribeEvent)
    protected com.twitter.sdk.android.core.internal.scribe.EventsStrategy getDisabledEventsStrategy()
kotlin.jvm.internal.LocalVariableReference
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2
com.facebook.share.internal.LegacyNativeDialogParameters:
    public void <init>()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle
com.twitter.sdk.android.tweetui.TweetTextUtils
androidx.viewpager.R$color
kotlin.internal.AccessibleLateinitPropertyLiteral
kotlin.jvm.internal.ShortSpreadBuilder
androidx.recyclerview.widget.AsyncListUtil$2
androidx.recyclerview.widget.AsyncDifferConfig$Builder
com.twitter.sdk.android.tweetui.internal.MultiTouchImageView:
    private static final long SCALE_ANIMATION_DURATION
    private static final float DOUBLE_TAP_SCALE_FACTOR
    private static final float MINIMUM_SCALE_FACTOR
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
com.google.zxing.datamatrix.encoder.SymbolInfo:
    public static void overrideSymbolSet(com.google.zxing.datamatrix.encoder.SymbolInfo[])
    public static com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int)
    public static com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint)
    public static com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,boolean,boolean)
    private static com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,boolean)
    public int getCodewordCount()
androidx.appcompat.view.menu.MenuView$ItemView:
    public abstract void setTitle(java.lang.CharSequence)
    public abstract void setEnabled(boolean)
    public abstract void setCheckable(boolean)
    public abstract void setChecked(boolean)
    public abstract void setShortcut(boolean,char)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract boolean showsIcon()
com.google.zxing.datamatrix.decoder.Version$ECB
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24
kotlin.collections.AbstractMap$keys$1$iterator$1
kotlin.jvm.internal.BooleanCompanionObject
com.facebook.appevents.AppEvent$SerializationProxyV1:
    private void <init>(java.lang.String,boolean,boolean)
    private static final long serialVersionUID
io.flutter.embedding.engine.systemchannels.SystemChannel:
    private static final java.lang.String TAG
com.facebook.common.R$string:
    private void <init>()
retrofit2.Retrofit$Builder:
    public retrofit2.Retrofit$Builder addCallAdapterFactory(retrofit2.CallAdapter$Factory)
    public retrofit2.Retrofit$Builder callbackExecutor(java.util.concurrent.Executor)
    public retrofit2.Retrofit$Builder validateEagerly(boolean)
bolts.AppLinkResolver
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
okhttp3.MultipartBody$Part:
    public static okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
    public static okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
    public static okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2
com.twitter.sdk.android.core.TwitterCore:
    private synchronized void createGuestClient()
    private synchronized void createGuestClient(com.twitter.sdk.android.core.TwitterApiClient)
    public com.twitter.sdk.android.core.TwitterApiClient getApiClient()
    public void addGuestApiClient(com.twitter.sdk.android.core.TwitterApiClient)
    public void addApiClient(com.twitter.sdk.android.core.TwitterSession,com.twitter.sdk.android.core.TwitterApiClient)
    public com.twitter.sdk.android.core.TwitterApiClient getGuestApiClient()
    public static final java.lang.String TAG
    static final java.lang.String PREF_KEY_ACTIVE_TWITTER_SESSION
    static final java.lang.String PREF_KEY_TWITTER_SESSION
    static final java.lang.String PREF_KEY_ACTIVE_GUEST_SESSION
    static final java.lang.String PREF_KEY_GUEST_SESSION
    static final java.lang.String SESSION_PREF_FILE_NAME
    static final java.lang.String KIT_SCRIBE_NAME
com.google.zxing.InvertedLuminanceSource
okio.SegmentedByteString:
    public okio.ByteString toAsciiUppercase()
    public okio.ByteString md5()
    public okio.ByteString sha256()
    public java.lang.String base64Url()
    public okio.ByteString substring(int)
    public java.nio.ByteBuffer asByteBuffer()
    public void write(java.io.OutputStream)
    public int indexOf(byte[],int)
    public int lastIndexOf(byte[],int)
    byte[] internalArray()
kotlin.reflect.KType
androidx.core.view.ViewConfigurationCompat:
    public static int getScaledPagingTouchSlop(android.view.ViewConfiguration)
    public static boolean hasPermanentMenuKey(android.view.ViewConfiguration)
    public static float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)
    public static float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)
    private static float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)
    private void <init>()
    private static final java.lang.String TAG
io.flutter.plugins.urllauncher.R$drawable
com.facebook.share.internal.LikeActionController$10
com.facebook.share.internal.LikeDialogFeature
kotlin.UIntArrayKt
com.facebook.share.widget.LikeView$1
com.google.zxing.oned.UPCEANReader:
    protected void <init>()
    static int[] findStartGuardPattern(com.google.zxing.common.BitArray)
    static int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[])
    private static int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[])
    static int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][])
    public com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
    public com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map)
    boolean checkChecksum(java.lang.String)
    int[] decodeEnd(com.google.zxing.common.BitArray,int)
    abstract com.google.zxing.BarcodeFormat getBarcodeFormat()
    protected abstract int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
    private final java.lang.StringBuilder decodeRowStringBuffer
    private final com.google.zxing.oned.UPCEANExtensionSupport extensionReader
    private final com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport
    private static final float MAX_AVG_VARIANCE
    private static final float MAX_INDIVIDUAL_VARIANCE
androidx.legacy.coreutils.R$drawable
androidx.annotation.DimenRes
androidx.fragment.R$layout
androidx.core.app.NotificationCompat$MessagingStyle
androidx.appcompat.app.ActionBar$LayoutParams:
    public void <init>(int,int,int)
    public void <init>(int)
kotlin.coroutines.experimental.migration.ExperimentalContextMigration
com.facebook.internal.LockOnGetVariable:
    public void <init>(java.lang.Object)
    private void waitOnInit()
    public java.lang.Object getValue()
kotlin.native.concurrent.SharedImmutable
com.twitter.sdk.android.tweetui.TweetTimelineListAdapter
com.google.zxing.qrcode.detector.AlignmentPattern
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection
com.facebook.share.internal.LikeBoxCountView$LikeBoxCountViewCaretPosition
androidx.loader.R$drawable
com.google.zxing.qrcode.encoder.ByteMatrix:
    public void set(int,int,byte)
com.facebook.share.internal.LikeActionController$CreationCallback
androidx.recyclerview.widget.SnapHelper
kotlin.io.FileTreeWalk$WalkState
androidx.browser.browseractions.BrowserActionsIntent$Builder
kotlin.coroutines.experimental.migration.ExperimentalContextMigration$Key
com.facebook.CallbackManager:
    public abstract boolean onActivityResult(int,int,android.content.Intent)
com.google.zxing.oned.EAN13Writer:
    private static final int CODE_WIDTH
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo
kotlin.jvm.internal.Intrinsics:
    public static java.lang.String stringPlus(java.lang.String,java.lang.Object)
    public static void checkNotNull(java.lang.Object)
    public static void checkNotNull(java.lang.Object,java.lang.String)
    public static void throwNpe()
    public static void throwNpe(java.lang.String)
    public static void throwUninitializedProperty(java.lang.String)
    public static void throwUninitializedPropertyAccessException(java.lang.String)
    public static void throwAssert()
    public static void throwAssert(java.lang.String)
    public static void throwIllegalArgument()
    public static void throwIllegalArgument(java.lang.String)
    public static void throwIllegalState()
    public static void throwIllegalState(java.lang.String)
    public static void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)
    public static void checkNotNullExpressionValue(java.lang.Object,java.lang.String)
    public static void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String,java.lang.String)
    public static void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String)
    public static void checkFieldIsNotNull(java.lang.Object,java.lang.String,java.lang.String)
    public static void checkFieldIsNotNull(java.lang.Object,java.lang.String)
    public static void checkNotNullParameter(java.lang.Object,java.lang.String)
    public static int compare(long,long)
    public static int compare(int,int)
    public static boolean areEqual(java.lang.Object,java.lang.Object)
    public static boolean areEqual(java.lang.Double,java.lang.Double)
    public static boolean areEqual(java.lang.Double,double)
    public static boolean areEqual(double,java.lang.Double)
    public static boolean areEqual(java.lang.Float,java.lang.Float)
    public static boolean areEqual(java.lang.Float,float)
    public static boolean areEqual(float,java.lang.Float)
    public static void throwUndefinedForReified()
    public static void throwUndefinedForReified(java.lang.String)
    public static void reifiedOperationMarker(int,java.lang.String)
    public static void reifiedOperationMarker(int,java.lang.String,java.lang.String)
    public static void needClassReification()
    public static void needClassReification(java.lang.String)
    public static void checkHasClass(java.lang.String)
    public static void checkHasClass(java.lang.String,java.lang.String)
android.support.v4.media.MediaBrowserCompatApi26
android.support.customtabs.ICustomTabsCallback$Stub$Proxy
kotlin.random.AbstractPlatformRandom
okhttp3.internal.Version:
    private void <init>()
androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable
androidx.appcompat.view.menu.SubMenuBuilder:
    public void setShortcutsVisible(boolean)
    public java.lang.String getActionViewStatesKey()
androidx.legacy.v4.R$id
com.twitter.sdk.android.core.DefaultLogger:
    public void <init>(int)
    public int getLogLevel()
    public void setLogLevel(int)
    public void v(java.lang.String,java.lang.String,java.lang.Throwable)
    public void i(java.lang.String,java.lang.String,java.lang.Throwable)
    public void v(java.lang.String,java.lang.String)
    public void i(java.lang.String,java.lang.String)
kotlinx.android.parcel.WriteWith
com.twitter.sdk.android.core.R$layout:
    private void <init>()
androidx.multidex.BuildConfig
kotlin.jvm.internal.IntCompanionObject
zhuoyuan.li.fluttershareme.R$id
com.facebook.internal.FacebookDialogBase:
    protected void <init>(com.facebook.internal.FragmentWrapper,int)
    public final void registerCallback(com.facebook.CallbackManager,com.facebook.FacebookCallback,int)
    protected void setRequestCode(int)
    public boolean canShow(java.lang.Object)
    protected boolean canShowImpl(java.lang.Object,java.lang.Object)
    protected void startActivityForResult(android.content.Intent,int)
    private static final java.lang.String TAG
com.appleeducate.getversion.R$id
androidx.annotation.RequiresPermission$Read
androidx.versionedparcelable.CustomVersionedParcelable:
    public void onPreParceling(boolean)
    public void onPostParceling()
com.twitter.sdk.android.core.identity.OAuthHandler
kotlin.text.StringsKt__StringBuilderJVMKt
kotlin.collections.SetsKt___SetsKt
kotlin.time.FormatToDecimalsKt
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener
io.flutter.plugins.deviceinfo.R$attr
kotlin.jvm.internal.MagicApiIntrinsics
androidx.cursoradapter.widget.CursorAdapter:
    public void <init>(android.content.Context,android.database.Cursor)
    public void <init>(android.content.Context,android.database.Cursor,int)
    protected void init(android.content.Context,android.database.Cursor,boolean)
    public boolean hasStableIds()
    public android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public android.widget.FilterQueryProvider getFilterQueryProvider()
    public void setFilterQueryProvider(android.widget.FilterQueryProvider)
    protected android.widget.FilterQueryProvider mFilterQueryProvider
    public static final int FLAG_AUTO_REQUERY
    public static final int FLAG_REGISTER_CONTENT_OBSERVER
com.twitter.sdk.android.tweetui.internal.AspectRatioFrameLayout:
    private static final float DEFAULT_ASPECT_RATIO
    private static final int DEFAULT_ADJUST_DIMENSION
    static final int ADJUST_DIMENSION_HEIGHT
    static final int ADJUST_DIMENSION_WIDTH
androidx.cardview.R$color:
    private void <init>()
kotlin.collections.AbstractList$SubList
okhttp3.internal.tls.OkHostnameVerifier:
    private static final int ALT_DNS_NAME
    private static final int ALT_IPA_NAME
com.facebook.core.R$layout
com.facebook.common.R$attr
io.flutter.embedding.engine.systemchannels.SettingsChannel:
    private static final java.lang.String TAG
    public static final java.lang.String CHANNEL_NAME
    private static final java.lang.String TEXT_SCALE_FACTOR
    private static final java.lang.String ALWAYS_USE_24_HOUR_FORMAT
    private static final java.lang.String PLATFORM_BRIGHTNESS
io.flutter.plugins.packageinfo.R$style
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener
kotlin.jvm.internal.FunctionImpl
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3
kotlin.NumbersKt__NumbersJVMKt
com.facebook.core.R$dimen
com.twitter.sdk.android.core.TwitterRateLimit:
    public int getLimit()
    public int getRemaining()
    public long getReset()
    private static final java.lang.String LIMIT_KEY
    private static final java.lang.String REMAINING_KEY
    private static final java.lang.String RESET_KEY
okhttp3.internal.framed.Ping:
    public long roundTripTime()
    public long roundTripTime(long,java.util.concurrent.TimeUnit)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
kotlin.jvm.PurelyImplements
com.facebook.appevents.UserDataStore$2
android.support.v4.media.MediaMetadataCompat:
    void <init>(android.os.Bundle)
    public boolean containsKey(java.lang.String)
    public java.lang.CharSequence getText(java.lang.String)
    public java.lang.String getString(java.lang.String)
    public long getLong(java.lang.String)
    public android.support.v4.media.RatingCompat getRating(java.lang.String)
    public android.graphics.Bitmap getBitmap(java.lang.String)
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public int size()
    public java.util.Set keySet()
    public android.os.Bundle getBundle()
    public java.lang.Object getMediaMetadata()
    private android.support.v4.media.MediaDescriptionCompat mDescription
    private static final java.lang.String TAG
    public static final java.lang.String METADATA_KEY_TITLE
    public static final java.lang.String METADATA_KEY_ARTIST
    public static final java.lang.String METADATA_KEY_DURATION
    public static final java.lang.String METADATA_KEY_ALBUM
    public static final java.lang.String METADATA_KEY_AUTHOR
    public static final java.lang.String METADATA_KEY_WRITER
    public static final java.lang.String METADATA_KEY_COMPOSER
    public static final java.lang.String METADATA_KEY_COMPILATION
    public static final java.lang.String METADATA_KEY_DATE
    public static final java.lang.String METADATA_KEY_YEAR
    public static final java.lang.String METADATA_KEY_GENRE
    public static final java.lang.String METADATA_KEY_TRACK_NUMBER
    public static final java.lang.String METADATA_KEY_NUM_TRACKS
    public static final java.lang.String METADATA_KEY_DISC_NUMBER
    public static final java.lang.String METADATA_KEY_ALBUM_ARTIST
    public static final java.lang.String METADATA_KEY_ART
    public static final java.lang.String METADATA_KEY_ART_URI
    public static final java.lang.String METADATA_KEY_ALBUM_ART
    public static final java.lang.String METADATA_KEY_ALBUM_ART_URI
    public static final java.lang.String METADATA_KEY_USER_RATING
    public static final java.lang.String METADATA_KEY_RATING
    public static final java.lang.String METADATA_KEY_DISPLAY_TITLE
    public static final java.lang.String METADATA_KEY_DISPLAY_SUBTITLE
    public static final java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION
    public static final java.lang.String METADATA_KEY_DISPLAY_ICON
    public static final java.lang.String METADATA_KEY_DISPLAY_ICON_URI
    public static final java.lang.String METADATA_KEY_MEDIA_ID
    public static final java.lang.String METADATA_KEY_MEDIA_URI
    public static final java.lang.String METADATA_KEY_BT_FOLDER_TYPE
    public static final java.lang.String METADATA_KEY_ADVERTISEMENT
    public static final java.lang.String METADATA_KEY_DOWNLOAD_STATUS
    static final int METADATA_TYPE_LONG
    static final int METADATA_TYPE_TEXT
    static final int METADATA_TYPE_BITMAP
    static final int METADATA_TYPE_RATING
kotlin.sequences.SequencesKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1
kotlin.ranges.CharRange
androidx.recyclerview.widget.AsyncListUtil
kotlin.collections.ArraysUtilJVM
kotlin.sequences.ConstrainedOnceSequence
kotlin.DeprecationLevel
com.twitter.sdk.android.core.internal.AdvertisingInfoServiceStrategy$AdvertisingConnection
com.google.gson.JsonStreamParser
androidx.recyclerview.widget.DefaultItemAnimator
androidx.browser.R$attr
io.flutter.embedding.android.FlutterView$TransparencyMode
androidx.core.view.ScaleGestureDetectorCompat
androidx.core.view.ViewGroupCompat:
    private void <init>()
    public static boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
    public static int getLayoutMode(android.view.ViewGroup)
    public static void setLayoutMode(android.view.ViewGroup,int)
    public static void setTransitionGroup(android.view.ViewGroup,boolean)
    public static int getNestedScrollAxes(android.view.ViewGroup)
    public static final int LAYOUT_MODE_CLIP_BOUNDS
    public static final int LAYOUT_MODE_OPTICAL_BOUNDS
com.twitter.sdk.android.tweetui.FilterTimelineDelegate$TimelineFilterCallback$1$1
androidx.core.app.NotificationCompat$CarExtender
androidx.asynclayoutinflater.R$integer
kotlin.text.MatchGroup
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener
com.twitter.sdk.android.tweetui.Utils
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$6
kotlin.text.Regex$Serialized
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    private static final float PRECISION
    public static final int MAX_NUM_POINTS
    public static final double EPSILON
android.support.v4.app.INotificationSideChannel
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$3
bolts.BoltsExecutors$ImmediateExecutor
com.facebook.common.R$anim
kotlin.StandardKt__SynchronizedKt
kotlin.jvm.internal.markers.KMutableMap$Entry
androidx.collection.CircularArray
androidx.loader.R$color
com.google.zxing.datamatrix.detector.Detector$1
kotlin.sequences.SequencesKt___SequencesKt$onEach$1
com.twitter.sdk.android.core.models.TwitterCollection$Content
com.google.zxing.client.result.SMSMMSResultParser
kotlin.collections.Grouping
com.google.zxing.pdf417.detector.PDF417DetectorResult
com.google.zxing.qrcode.decoder.DataMask$3
com.google.zxing.client.result.VEventResultParser
zhuoyuan.li.fluttershareme.R$anim
kotlin.text.CharDirectionality
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder
com.facebook.FacebookSdkNotInitializedException:
    public void <init>()
    public void <init>(java.lang.String,java.lang.Throwable)
    public void <init>(java.lang.Throwable)
    static final long serialVersionUID
androidx.annotation.GuardedBy
com.google.zxing.multi.qrcode.detector.MultiDetector
kotlin.ranges.ULongProgressionIterator
kotlin.jvm.KotlinReflectionNotSupportedError
com.google.zxing.client.result.VCardResultParser
androidx.core.R$integer
androidx.recyclerview.widget.AdapterHelper$Callback
kotlin.jvm.JvmSuppressWildcards
com.facebook.core.R$styleable
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6
kotlin.coroutines.experimental.ContinuationInterceptor$Key
com.facebook.internal.ImageResponse
androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    public void <init>()
    private androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int)
    public void clear()
    public void setMaxRecycledViews(int,int)
    public int getRecycledViewCount(int)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)
    int size()
    public void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    long runningAverage(long,long)
    void factorInCreateTime(int,long)
    void factorInBindTime(int,long)
    boolean willCreateInTime(int,long,long)
    boolean willBindInTime(int,long,long)
    void attach()
    void detach()
    void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
    android.util.SparseArray mScrap
    private int mAttachCount
    private static final int DEFAULT_MAX_SCRAP
kotlin.sequences.SequencesKt___SequencesKt
bolts.Task$3
com.twitter.sdk.android.core.models.UserValue:
    public void <init>(java.lang.String)
zhuoyuan.li.fluttershareme.R$layout
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1
io.flutter.embedding.engine.plugins.service.ServiceControlSurface
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
kotlin.text.MatchNamedGroupCollection
com.facebook.appevents.aam.MetadataViewObserver:
    static void stopTrackingActivity(android.app.Activity)
    private void stopTracking()
    private static final int MAX_TEXT_LENGTH
androidx.appcompat.view.ActionBarPolicy:
    public boolean enableHomeButtonByDefault()
okhttp3.internal.tls.BasicCertificateChainCleaner:
    private static final int MAX_SIGNERS
io.flutter.embedding.engine.loader.FlutterLoader$Settings:
    public void setLogTag(java.lang.String)
io.flutter.plugins.sharedpreferences.BuildConfig
androidx.core.util.Pools$SynchronizedPool
com.google.zxing.ReaderException:
    void <init>(java.lang.Throwable)
kotlin.jvm.functions.Function15
android.support.v4.media.MediaBrowserCompatApi21$MediaItem
androidx.appcompat.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB:
    public void refreshVisibility()
androidx.recyclerview.widget.AdapterHelper$UpdateOp
androidx.core.app.ShareCompat
androidx.core.content.SharedPreferencesCompat$EditorCompat
com.facebook.share.ShareApi$6
com.facebook.share.internal.LikeActionController$LikeRequestWrapper
androidx.appcompat.view.WindowCallbackWrapper
com.google.zxing.client.result.GeoResultParser
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9
org.intellij.lang.annotations.Pattern
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
androidx.customview.widget.ViewDragHelper$1
com.facebook.login.WebLoginMethodHandler:
    private static final java.lang.String WEB_VIEW_AUTH_HANDLER_STORE
    private static final java.lang.String WEB_VIEW_AUTH_HANDLER_TOKEN_KEY
androidx.lifecycle.MethodCallsLogger:
    public boolean approveCall(java.lang.String,int)
androidx.appcompat.widget.PopupMenu$1
com.facebook.internal.BoltsMeasurementEventListener:
    private static final java.lang.String MEASUREMENT_EVENT_NOTIFICATION_NAME
    private static final java.lang.String MEASUREMENT_EVENT_NAME_KEY
    private static final java.lang.String MEASUREMENT_EVENT_ARGS_KEY
    private static final java.lang.String BOLTS_MEASUREMENT_EVENT_PREFIX
kotlin.coroutines.CoroutineContext$DefaultImpls
androidx.legacy.coreui.R
com.twitter.sdk.android.R$drawable
com.twitter.sdk.android.core.models.HashtagEntity
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3
okhttp3.internal.http.StatusLine:
    public static okhttp3.internal.http.StatusLine get(okhttp3.Response)
    public static final int HTTP_TEMP_REDIRECT
    public static final int HTTP_PERM_REDIRECT
    public static final int HTTP_CONTINUE
androidx.annotation.TransitionRes
androidx.appcompat.widget.ListPopupWindow:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static boolean isConfirmKey(int)
    public int getPromptPosition()
    public void setForceIgnoreOutsideTouch(boolean)
    public void setDropDownAlwaysVisible(boolean)
    public boolean isDropDownAlwaysVisible()
    public void setSoftInputMode(int)
    public int getSoftInputMode()
    public void setListSelector(android.graphics.drawable.Drawable)
    public int getAnimationStyle()
    public int getHeight()
    public void setHeight(int)
    public void setWindowLayoutType(int)
    public void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
    public void setPromptView(android.view.View)
    public void postShow()
    public int getInputMethodMode()
    public boolean performItemClick(int)
    public java.lang.Object getSelectedItem()
    public int getSelectedItemPosition()
    public long getSelectedItemId()
    public android.view.View getSelectedView()
    void setListItemExpandMax(int)
    public boolean onKeyDown(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public boolean onKeyPreIme(int,android.view.KeyEvent)
    public android.view.View$OnTouchListener createDragToOpenListener(android.view.View)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    static final int EXPAND_LIST_TIMEOUT
    public static final int POSITION_PROMPT_ABOVE
    public static final int POSITION_PROMPT_BELOW
    public static final int MATCH_PARENT
    public static final int WRAP_CONTENT
    public static final int INPUT_METHOD_FROM_FOCUSABLE
    public static final int INPUT_METHOD_NEEDED
    public static final int INPUT_METHOD_NOT_NEEDED
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord
kotlin.sequences.Sequence
androidx.core.app.ComponentActivity$ExtraData
androidx.appcompat.view.menu.ActionMenuItem:
    public androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean)
    public boolean invoke()
    private static final int NO_ICON
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
com.facebook.internal.instrument.crashreport.CrashReportData:
    private static final java.lang.String PARAM_TIMESTAMP
    private static final java.lang.String PARAM_APP_VERSION
    private static final java.lang.String PARAM_DEVICE_OS
    private static final java.lang.String PARAM_DEVICE_MODEL
    private static final java.lang.String PARAM_REASON
    private static final java.lang.String PARAM_CALLSTACK
com.google.zxing.oned.UPCEANExtension5Support
com.facebook.share.model.ShareMessengerMediaTemplateContent:
    private void <init>(com.facebook.share.model.ShareMessengerMediaTemplateContent$Builder)
    synthetic void <init>(com.facebook.share.model.ShareMessengerMediaTemplateContent$Builder,com.facebook.share.model.ShareMessengerMediaTemplateContent$1)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface
retrofit2.Retrofit:
    public java.util.List callAdapterFactories()
    public java.util.List converterFactories()
    public java.util.concurrent.Executor callbackExecutor()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public void setFullSpan(boolean)
    public final int getSpanIndex()
    public static final int INVALID_SPAN_ID
com.facebook.internal.FileLruCache$Limits
com.facebook.internal.WorkQueue
kotlin.io.TerminateException
kotlin.comparisons.UComparisonsKt___UComparisonsKt
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback
androidx.annotation.PluralsRes
androidx.recyclerview.widget.DiffUtil
kotlin.reflect.KProperty2
com.google.zxing.oned.EAN13Reader:
    public void <init>()
    private static void determineFirstDigit(java.lang.StringBuilder,int)
    protected int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
    com.google.zxing.BarcodeFormat getBarcodeFormat()
    private final int[] decodeMiddleCounters
com.squareup.picasso.RemoteViewsAction
com.twitter.sdk.android.core.internal.scribe.EventsHandler:
    public void recordEventSync(java.lang.Object)
    public void disable()
    protected abstract com.twitter.sdk.android.core.internal.scribe.EventsStrategy getDisabledEventsStrategy()
    protected void executeSync(java.lang.Runnable)
okio.ByteString:
    private okio.ByteString digest(java.lang.String)
    public static okio.ByteString decodeHex(java.lang.String)
    private static int decodeHexDigit(char)
    public okio.ByteString md5()
    public okio.ByteString sha1()
    public okio.ByteString sha256()
    public java.lang.String base64Url()
    public okio.ByteString toAsciiUppercase()
    public okio.ByteString substring(int)
    byte[] internalArray()
    public java.nio.ByteBuffer asByteBuffer()
    public void write(java.io.OutputStream)
    public boolean rangeEquals(int,okio.ByteString,int,int)
    public final boolean startsWith(okio.ByteString)
    public final boolean startsWith(byte[])
    public final boolean endsWith(okio.ByteString)
    public final boolean endsWith(byte[])
    public final int indexOf(okio.ByteString)
    public final int indexOf(okio.ByteString,int)
    public final int indexOf(byte[])
    public int indexOf(byte[],int)
    public final int lastIndexOf(okio.ByteString)
    public final int lastIndexOf(okio.ByteString,int)
    public final int lastIndexOf(byte[])
    public int lastIndexOf(byte[],int)
    private static final long serialVersionUID
io.flutter.embedding.engine.loader.ResourceExtractor:
    static long getVersionCode(android.content.pm.PackageInfo)
    void <init>(java.lang.String,java.lang.String,android.content.pm.PackageManager,android.content.res.AssetManager)
    private static java.lang.String[] getExistingTimestamps(java.io.File)
    private static void deleteFiles(java.lang.String,java.util.HashSet)
    private static java.lang.String checkTimestamp(java.io.File,android.content.pm.PackageManager,java.lang.String)
    private static void copy(java.io.InputStream,java.io.OutputStream)
    static synthetic java.lang.String access$000(java.io.File,android.content.pm.PackageManager,java.lang.String)
    static synthetic void access$100(java.lang.String,java.util.HashSet)
    static synthetic void access$200(java.io.InputStream,java.io.OutputStream)
    io.flutter.embedding.engine.loader.ResourceExtractor addResource(java.lang.String)
    io.flutter.embedding.engine.loader.ResourceExtractor addResources(java.util.Collection)
    io.flutter.embedding.engine.loader.ResourceExtractor start()
    private final java.lang.String mDataDirPath
    private final java.lang.String mPackageName
    private final android.content.pm.PackageManager mPackageManager
    private final android.content.res.AssetManager mAssetManager
    private final java.util.HashSet mResources
    private io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask mExtractTask
    private static final java.lang.String TAG
    private static final java.lang.String TIMESTAMP_PREFIX
androidx.recyclerview.widget.ListUpdateCallback
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1
androidx.multidex.MultiDexExtractor$ExtractedDex
com.twitter.HitHighlighter
com.google.zxing.maxicode.decoder.BitMatrixParser
kotlin.io.FilesKt
com.facebook.internal.ImageResponseCache$BufferedHttpInputStream
kotlin.jvm.internal.LongCompanionObject
androidx.browser.customtabs.TrustedWebUtils
com.facebook.share.widget.GameRequestDialog$1
com.dxc.mtahackathon.R$layout
com.twitter.sdk.android.tweetui.internal.VideoControlView:
    static final long PROGRESS_BAR_TICKS
    static final int FADE_DURATION_MS
    private static final int SHOW_PROGRESS_MSG
androidx.fragment.app.DialogFragment:
    public void setStyle(int,int)
    public int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
    public void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
    public void dismiss()
    public void dismissAllowingStateLoss()
    public int getTheme()
    public void setCancelable(boolean)
    public boolean isCancelable()
    public boolean getShowsDialog()
    public static final int STYLE_NORMAL
    public static final int STYLE_NO_TITLE
    public static final int STYLE_NO_FRAME
    public static final int STYLE_NO_INPUT
    private static final java.lang.String SAVED_DIALOG_STATE_TAG
    private static final java.lang.String SAVED_STYLE
    private static final java.lang.String SAVED_THEME
    private static final java.lang.String SAVED_CANCELABLE
    private static final java.lang.String SAVED_SHOWS_DIALOG
    private static final java.lang.String SAVED_BACK_STACK_ID
androidx.appcompat.R$styleable:
    private void <init>()
okhttp3.Cookie$Builder
com.facebook.core.R$attr
androidx.appcompat.app.AlertController
androidx.recyclerview.widget.AsyncListDiffer$1$2
androidx.slidingpanelayout.R$styleable
io.flutter.app.FlutterFragmentActivity
com.twitter.sdk.android.tweetui.TweetRepository$5
com.facebook.appevents.internal.ActivityLifecycleTracker:
    public static boolean isTracking()
    private static final java.lang.String INCORRECT_IMPL_WARNING
    private static final long INTERRUPTION_THRESHOLD_MILLISECONDS
com.facebook.share.internal.WebDialogParameters:
    public void <init>()
    public static android.os.Bundle create(com.facebook.share.model.AppGroupCreationContent)
    public static android.os.Bundle create(com.facebook.share.model.GameRequestContent)
androidx.multidex.MultiDex$V19
kotlin.collections.MutableMapWithDefault
androidx.media.MediaBrowserServiceCompat$ConnectionRecord
androidx.core.view.DisplayCutoutCompat
kotlin.collections.CollectionsKt___CollectionsKt
com.facebook.share.internal.CameraEffectJSONUtility$2:
    public void setOnArgumentsBuilder(com.facebook.share.model.CameraEffectArguments$Builder,java.lang.String,java.lang.Object)
android.support.v4.media.MediaBrowserCompat$SearchCallback:
    public void <init>()
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    private void <init>()
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter
androidx.appcompat.widget.FitWindowsViewGroup
com.google.zxing.pdf417.decoder.BoundingBox
com.google.zxing.oned.MultiFormatUPCEANReader
com.facebook.share.internal.LikeActionController$3
kotlin.jvm.internal.MutablePropertyReference0Impl
com.twitter.sdk.android.core.models.UserEntities$UrlEntities
com.example.connectivity.R$dimen
kotlin.collections.EmptyList
okhttp3.internal.http.HttpMethod:
    private void <init>()
androidx.recyclerview.widget.RecyclerView$RecyclerListener:
    public abstract void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.random.PlatformRandom
org.intellij.lang.annotations.Subst
androidx.recyclerview.widget.TileList
kotlin.text.Regex$Companion
androidx.appcompat.app.AppCompatDelegateImpl$2
kotlin.jvm.internal.PropertyReference0
androidx.core.widget.TintableCompoundButton
io.flutter.util.Preconditions
com.twitter.sdk.android.tweetui.PlayerActivity:
    public static final java.lang.String PLAYER_ITEM
    public static final java.lang.String SCRIBE_ITEM
kotlin.collections.ReversedListReadOnly
com.twitter.sdk.android.tweetui.VideoScribeClientImpl:
    static com.twitter.sdk.android.core.internal.scribe.EventNamespace getTfwImpressionNamespace()
    public void impression(com.twitter.sdk.android.core.internal.scribe.ScribeItem)
    static final java.lang.String TFW_CLIENT_EVENT_PAGE
    static final java.lang.String TFW_CLIENT_EVENT_SECTION
    static final java.lang.String SCRIBE_IMPRESSION_ACTION
    static final java.lang.String SCRIBE_PLAY_ACTION
io.flutter.plugins.share.R$id
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt
com.google.zxing.qrcode.detector.AlignmentPatternFinder
com.facebook.share.widget.ShareButton
androidx.recyclerview.widget.FastScroller$1
kotlin.text.MatcherMatchResult$groups$1
com.facebook.internal.ImageRequest
io.flutter.embedding.engine.dart.DartExecutor:
    public void executeDartCallback(io.flutter.embedding.engine.dart.DartExecutor$DartCallback)
    public io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
    public int getPendingChannelResponseCount()
    public void setIsolateServiceIdListener(io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener)
    private static final java.lang.String TAG
retrofit2.ServiceMethod:
    static final java.lang.String PARAM
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest
com.facebook.appevents.codeless.CodelessMatcher:
    private static final java.lang.String PARENT_CLASS_NAME
    private static final java.lang.String CURRENT_CLASS_NAME
kotlin.collections.ArraysKt___ArraysKt$withIndex$7
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt
com.facebook.internal.WorkQueue$WorkItem
okio.GzipSink
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder
com.google.zxing.client.result.EmailDoCoMoResultParser
com.twitter.sdk.android.core.services.params.Geocode$Distance
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder
androidx.viewpager.widget.PagerTitleStrip
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1
androidx.core.graphics.PathUtils
android.support.v4.media.session.MediaSessionCompat$QueueItem:
    public void <init>(android.support.v4.media.MediaDescriptionCompat,long)
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public long getQueueId()
    public java.lang.Object getQueueItem()
    public static final int UNKNOWN_ID
com.squareup.picasso.Stats:
    void shutdown()
    private static final int CACHE_HIT
    private static final int CACHE_MISS
    private static final int BITMAP_DECODE_FINISHED
    private static final int BITMAP_TRANSFORMED_FINISHED
    private static final int DOWNLOAD_FINISHED
    private static final java.lang.String STATS_THREAD_NAME
kotlin.NumbersKt__NumbersKt
kotlin.Triple
androidx.appcompat.view.menu.MenuBuilder:
    private void dispatchSaveInstanceState(android.os.Bundle)
    private void dispatchRestoreInstanceState(android.os.Bundle)
    public androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
    public void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
    public void savePresenterStates(android.os.Bundle)
    public void restorePresenterStates(android.os.Bundle)
    public void saveActionViewStates(android.os.Bundle)
    public void restoreActionViewStates(android.os.Bundle)
    protected java.lang.String getActionViewStatesKey()
    public void removeItemAt(int)
    public void clearAll()
    public void setShortcutsVisible(boolean)
    public android.graphics.drawable.Drawable getHeaderIcon()
    public android.view.View getHeaderView()
    public void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    public void setOptionalIconsVisible(boolean)
    public void setOverrideVisibleItems(boolean)
    private android.util.SparseArray mFrozenViewStates
    private static final java.lang.String TAG
    private static final java.lang.String PRESENTER_KEY
    private static final java.lang.String ACTION_VIEW_STATES_KEY
    private static final java.lang.String EXPANDED_ACTION_VIEW_ID
com.google.zxing.pdf417.detector.Detector
io.flutter.plugins.deviceinfo.R$dimen
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable
com.squareup.picasso.OkHttpDownloader:
    public void <init>(android.content.Context,long)
    protected final com.squareup.okhttp.OkHttpClient getClient()
    public void shutdown()
kotlin.collections.AbstractList
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21
io.flutter.plugin.common.PluginRegistry$PluginRegistrantCallback
com.google.zxing.maxicode.decoder.Decoder
kotlin.collections.AbstractMutableSet
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    public void <init>()
    public abstract android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
org.jetbrains.annotations.Nls
androidx.appcompat.widget.ThemeUtils:
    public static android.content.res.ColorStateList createDisabledStateList(int,int)
    private void <init>()
com.facebook.share.internal.VideoUploader$UploadWorkItemBase
androidx.appcompat.app.ActionBarDrawerToggle$Delegate
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
androidx.appcompat.widget.ButtonBarLayout:
    private static final int PEEK_BUTTON_DP
androidx.appcompat.widget.RtlSpacingHelper:
    public static final int UNDEFINED
androidx.browser.customtabs.CustomTabsIntent$Builder:
    public androidx.browser.customtabs.CustomTabsIntent$Builder setToolbarColor(int)
    public androidx.browser.customtabs.CustomTabsIntent$Builder enableUrlBarHiding()
    public androidx.browser.customtabs.CustomTabsIntent$Builder setCloseButtonIcon(android.graphics.Bitmap)
    public androidx.browser.customtabs.CustomTabsIntent$Builder setShowTitle(boolean)
    public androidx.browser.customtabs.CustomTabsIntent$Builder addMenuItem(java.lang.String,android.app.PendingIntent)
    public androidx.browser.customtabs.CustomTabsIntent$Builder addDefaultShareMenuItem()
    public androidx.browser.customtabs.CustomTabsIntent$Builder setActionButton(android.graphics.Bitmap,java.lang.String,android.app.PendingIntent,boolean)
    public androidx.browser.customtabs.CustomTabsIntent$Builder setActionButton(android.graphics.Bitmap,java.lang.String,android.app.PendingIntent)
    public androidx.browser.customtabs.CustomTabsIntent$Builder addToolbarItem(int,android.graphics.Bitmap,java.lang.String,android.app.PendingIntent)
    public androidx.browser.customtabs.CustomTabsIntent$Builder setSecondaryToolbarColor(int)
    public androidx.browser.customtabs.CustomTabsIntent$Builder setSecondaryToolbarViews(android.widget.RemoteViews,int[],android.app.PendingIntent)
    public androidx.browser.customtabs.CustomTabsIntent$Builder setInstantAppsEnabled(boolean)
    public androidx.browser.customtabs.CustomTabsIntent$Builder setStartAnimations(android.content.Context,int,int)
    public androidx.browser.customtabs.CustomTabsIntent$Builder setExitAnimations(android.content.Context,int,int)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    void log()
    static final java.lang.String TAG
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
    static final int SCROLLING_OFFSET_NaN
androidx.print.PrintHelper$PrintBitmapAdapter
kotlin.jvm.internal.MutablePropertyReference1Impl
com.facebook.share.widget.LikeView$LikeActionControllerCreationCallback
androidx.recyclerview.widget.DefaultItemAnimator$5
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1
kotlin.io.FilesKt__FileReadWriteKt$readLines$1
com.facebook.share.model.ShareMessengerActionButton$Builder
androidx.core.view.ActionProvider:
    public android.content.Context getContext()
    public void refreshVisibility()
    public void subUiVisibilityChanged(boolean)
    private static final java.lang.String TAG
com.facebook.internal.FileLruCache$2
kotlin.annotation.Retention
com.twitter.sdk.android.tweetcomposer.BuildConfig
com.google.zxing.client.result.ISBNParsedResult
androidx.media.MediaBrowserServiceCompat$ConnectionRecord$1
kotlin.reflect.KProperty
com.facebook.ProfileTracker$1
kotlin.text.CharCategory$Companion$categoryMap$2
androidx.appcompat.widget.AppCompatButton
com.google.zxing.aztec.encoder.Encoder:
    private void <init>()
    public static com.google.zxing.aztec.encoder.AztecCode encode(byte[])
    public static final int DEFAULT_EC_PERCENT
    public static final int DEFAULT_AZTEC_LAYERS
    private static final int MAX_NB_BITS
    private static final int MAX_NB_BITS_COMPACT
org.intellij.lang.annotations.RegExp
kotlin.native.concurrent.ThreadLocal
com.facebook.login.WebViewLoginMethodHandler$AuthDialogBuilder:
    public com.facebook.login.WebViewLoginMethodHandler$AuthDialogBuilder setIsRerequest(boolean)
    private static final java.lang.String OAUTH_DIALOG
androidx.versionedparcelable.R
kotlin.text.Regex
com.google.gson.internal.LinkedHashTreeMap
androidx.core.app.NotificationManagerCompat
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState
kotlin.sequences.MergingSequence$iterator$1
android.support.customtabs.IPostMessageService
androidx.appcompat.app.NavItemSelectedListener
androidx.core.app.NotificationManagerCompat$CancelTask
com.google.zxing.oned.rss.expanded.BitArrayBuilder
kotlin.jvm.internal.MutablePropertyReference1
androidx.appcompat.widget.ActivityChooserView$4
androidx.collection.ArraySet:
    public void <init>(androidx.collection.ArraySet)
    public void <init>(java.util.Collection)
    public void append(java.lang.Object)
    public void addAll(androidx.collection.ArraySet)
    public boolean removeAll(androidx.collection.ArraySet)
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
com.google.gson.internal.Primitives:
    private void <init>()
    public static boolean isWrapperType(java.lang.reflect.Type)
    public static java.lang.Class unwrap(java.lang.Class)
androidx.coordinatorlayout.R
zhuoyuan.li.fluttershareme.R$integer
com.twitter.sdk.android.tweetui.R
com.dxc.mtahackathon.R$integer
android.support.v4.media.ParceledListSliceAdapterApi21
com.twitter.sdk.android.core.TwitterAuthConfig:
    public void <init>(java.lang.String,java.lang.String)
    static java.lang.String sanitizeAttribute(java.lang.String)
    public int getRequestCode()
    public static final int DEFAULT_AUTH_REQUEST_CODE
com.facebook.appevents.AccessTokenAppIdPair:
    private static final long serialVersionUID
com.google.gson.internal.Streams:
    private void <init>()
com.facebook.share.widget.ShareButtonBase
com.facebook.share.model.ShareMessengerOpenGraphMusicTemplateContent$Builder
io.flutter.plugins.deviceinfo.R$layout
kotlin.internal.RequireKotlinVersionKind
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8
com.twitter.sdk.android.core.internal.AdvertisingInfo
androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback
androidx.recyclerview.R$style
com.facebook.appevents.aam.MetadataRule:
    private static final java.lang.String FIELD_K
    private static final java.lang.String FIELD_V
    private static final java.lang.String FILED_K_DELIMITER
kotlin.jvm.internal.markers.KMutableIterator
kotlin.collections.SlidingWindowKt$windowedIterator$1
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1
kotlin.text.StringsKt__StringsKt$iterator$1
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1
kotlin.StandardKt
okhttp3.TlsVersion:
    public java.lang.String javaName()
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong
com.google.zxing.datamatrix.encoder.Encoder:
    public abstract int getEncodingMode()
com.facebook.share.widget.GameRequestDialog$2
androidx.core.app.NotificationCompat$GroupAlertBehavior
androidx.appcompat.widget.AppCompatSpinner:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,int)
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static final int MAX_ITEMS_MEASURED
    private static final java.lang.String TAG
    private static final int MODE_DIALOG
    private static final int MODE_DROPDOWN
    private static final int MODE_THEME
kotlin.jvm.JvmSynthetic
kotlin.reflect.KMutableProperty1
android.support.v4.media.session.MediaSessionCompat$Callback
kotlin.properties.Delegates
androidx.appcompat.app.AppCompatDelegateImpl$6$1
kotlin.io.ConstantsKt
io.flutter.view.FlutterView$ViewportMetrics
com.twitter.sdk.android.core.identity.TwitterAuthClient
com.facebook.share.model.AppInviteContent$Builder$Destination
androidx.media.app.NotificationCompat$MediaStyle
com.twitter.sdk.android.core.internal.oauth.GuestTokenResponse:
    public void <init>(java.lang.String)
com.facebook.share.Sharer
retrofit2.CallAdapter$Factory:
    protected static java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
kotlin.LazyKt
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper
kotlin.time.Duration$Companion
androidx.core.content.res.ColorStateListInflaterCompat:
    private void <init>()
    private static final int DEFAULT_COLOR
com.google.zxing.pdf417.PDF417Reader
io.flutter.plugins.packageinfo.R$dimen
com.facebook.share.internal.LikeActionController$RequestCompletionCallback
kotlin.collections.ShortIterator
com.facebook.share.model.SharePhotoContent$Builder:
    public synthetic bridge com.facebook.share.model.ShareContent$Builder readFrom(com.facebook.share.model.ShareContent)
    public synthetic bridge com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
    public synthetic bridge java.lang.Object build()
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong
org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
com.google.gson.JsonArray:
    com.google.gson.JsonArray deepCopy()
    public void add(java.lang.Boolean)
    public void add(java.lang.Character)
    public void add(java.lang.Number)
    public void add(java.lang.String)
    public void addAll(com.google.gson.JsonArray)
    public com.google.gson.JsonElement set(int,com.google.gson.JsonElement)
    public boolean remove(com.google.gson.JsonElement)
    public com.google.gson.JsonElement remove(int)
    public boolean contains(com.google.gson.JsonElement)
    public int size()
    public com.google.gson.JsonElement get(int)
    public java.lang.Number getAsNumber()
    public double getAsDouble()
    public java.math.BigDecimal getAsBigDecimal()
    public java.math.BigInteger getAsBigInteger()
    public float getAsFloat()
    public long getAsLong()
    public int getAsInt()
    public byte getAsByte()
    public char getAsCharacter()
    public short getAsShort()
    public boolean getAsBoolean()
    synthetic bridge com.google.gson.JsonElement deepCopy()
io.flutter.plugins.urllauncher.R$dimen
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1
kotlin.PreconditionsKt
androidx.slidingpanelayout.R$layout
com.twitter.sdk.android.tweetcomposer.R$color:
    private void <init>()
io.flutter.plugin.editing.TextInputPlugin:
    android.text.Editable getEditable()
com.example.connectivity.R$integer
kotlin.coroutines.CombinedContext
kotlin._Assertions
androidx.appcompat.widget.ScrollingTabContainerView:
    public void <init>(android.content.Context)
    private androidx.appcompat.widget.LinearLayoutCompat createTabLayout()
    public void animateToVisibility(int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public void updateTab(int)
    public void removeTabAt(int)
    public void removeAllTabs()
    protected android.view.ViewPropertyAnimator mVisibilityAnim
    protected final androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener
    private static final java.lang.String TAG
    private static final int FADE_DURATION
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener
androidx.core.database.DatabaseUtilsCompat
com.google.zxing.common.DecoderResult
io.flutter.plugins.connectivity.R$integer
io.flutter.plugins.share.R$styleable
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1
okio.SegmentPool:
    static final long MAX_SIZE
androidx.asynclayoutinflater.R$id
com.twitter.sdk.android.tweetui.R$drawable:
    private void <init>()
com.google.zxing.oned.UPCAWriter:
    public com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int)
io.flutter.plugins.share.R$attr
kotlin.coroutines.ContinuationKt$Continuation$1
com.twitter.sdk.android.tweetui.internal.SpanClickHandler
kotlin.SynchronizedLazyImpl
okhttp3.internal.http.HttpHeaders:
    private void <init>()
    public static boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
    public static boolean hasVaryAll(okhttp3.Response)
    public static boolean hasVaryAll(okhttp3.Headers)
    private static java.util.Set varyFields(okhttp3.Response)
    public static java.util.Set varyFields(okhttp3.Headers)
    public static okhttp3.Headers varyHeaders(okhttp3.Response)
    public static okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
    public static java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
androidx.appcompat.view.menu.ListMenuPresenter
com.facebook.internal.BundleJSONConverter$2:
    public void setOnJSON(org.json.JSONObject,java.lang.String,java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager:
    public void <init>(android.content.Context,int)
    public void <init>(android.content.Context,int,int,boolean)
    public int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
    public void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
    public void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
    public void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
    public void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)
    public androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
    void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    public int getSpanCount()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    public static final int DEFAULT_SPAN_COUNT
okhttp3.MultipartBody$Builder:
    public okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody)
    public okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String)
    public okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.facebook.appevents.codeless.ViewIndexer:
    public static void sendToServerUnityInstance(java.lang.String)
    public void sendToServerUnity(java.lang.String)
    private static final java.lang.String SUCCESS
    private static final java.lang.String TREE_PARAM
    private static final java.lang.String APP_VERSION_PARAM
    private static final java.lang.String PLATFORM_PARAM
    private static final java.lang.String REQUEST_TYPE
io.flutter.plugins.connectivity.R$id
androidx.annotation.AnimRes
androidx.annotation.XmlRes
kotlin.jvm.internal.Ref$ShortRef
com.facebook.share.model.ShareOpenGraphContent$Builder
com.google.gson.JsonObject:
    com.google.gson.JsonObject deepCopy()
    public com.google.gson.JsonElement remove(java.lang.String)
    public void addProperty(java.lang.String,java.lang.Number)
    public void addProperty(java.lang.String,java.lang.Boolean)
    public void addProperty(java.lang.String,java.lang.Character)
    public int size()
    public boolean has(java.lang.String)
    public com.google.gson.JsonArray getAsJsonArray(java.lang.String)
    public com.google.gson.JsonObject getAsJsonObject(java.lang.String)
    synthetic bridge com.google.gson.JsonElement deepCopy()
kotlin.text.Regex$Serialized$Companion
android.support.v4.media.MediaMetadataCompat$LongKey
com.google.zxing.datamatrix.encoder.DefaultPlacement:
    final int getNumrows()
    final int getNumcols()
    final byte[] getBits()
androidx.appcompat.R
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets:
    public abstract java.lang.String getAssetFilePathByName(java.lang.String)
    public abstract java.lang.String getAssetFilePathByName(java.lang.String,java.lang.String)
    public abstract java.lang.String getAssetFilePathBySubpath(java.lang.String)
    public abstract java.lang.String getAssetFilePathBySubpath(java.lang.String,java.lang.String)
okhttp3.Dispatcher:
    public void <init>(java.util.concurrent.ExecutorService)
    public synchronized void setMaxRequests(int)
    public synchronized int getMaxRequests()
    public synchronized void setMaxRequestsPerHost(int)
    public synchronized int getMaxRequestsPerHost()
    public synchronized void setIdleCallback(java.lang.Runnable)
    public synchronized void cancelAll()
    public synchronized java.util.List queuedCalls()
    public synchronized java.util.List runningCalls()
    public synchronized int queuedCallsCount()
io.flutter.plugins.connectivity.R
kotlin.ranges.URangesKt
androidx.annotation.IntDef
androidx.documentfile.provider.SingleDocumentFile
kotlin.ranges.LongRange
com.facebook.FacebookAuthorizationException
androidx.recyclerview.R$layout
kotlin.annotation.AnnotationRetention
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    public static java.lang.Object createItem(java.lang.Object,long)
    private void <init>()
androidx.core.view.KeyEventDispatcher:
    private void <init>()
kotlin.collections.MapsKt
androidx.multidex.MultiDex$V14$ElementConstructor
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    public static int getPlaybackType(java.lang.Object)
    public static int getVolumeControl(java.lang.Object)
    public static int getMaxVolume(java.lang.Object)
    public static int getCurrentVolume(java.lang.Object)
    private void <init>()
    private static final int FLAG_SCO
    private static final int STREAM_BLUETOOTH_SCO
    private static final int STREAM_SYSTEM_ENFORCED
io.flutter.BuildConfig
androidx.appcompat.view.menu.ActionMenuItemView:
    public void setShortcut(boolean,char)
    public boolean showsIcon()
    private static final java.lang.String TAG
    private static final int MAX_ICON_SIZE
androidx.core.content.res.TypedArrayUtils:
    public static boolean getBoolean(android.content.res.TypedArray,int,int,boolean)
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int)
    public static int getInt(android.content.res.TypedArray,int,int,int)
    public static int getResourceId(android.content.res.TypedArray,int,int,int)
    public static java.lang.String getString(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence getText(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int)
    public static int getAttr(android.content.Context,int,int)
    private void <init>()
    private static final java.lang.String NAMESPACE
kotlin.NumbersKt__BigDecimalsKt
bolts.Task
kotlin.UInt$Companion
bolts.Task$13
com.facebook.internal.instrument.InstrumentUtility:
    public void <init>()
    public static final java.lang.String CRASH_REPORT_PREFIX
    public static final java.lang.String ERROR_REPORT_PREFIX
    private static final java.lang.String FBSDK_PREFIX
    private static final java.lang.String INSTRUMENT_DIR
kotlin.jvm.functions.Function3
androidx.recyclerview.widget.DiffUtil$Range
com.squareup.picasso.Utils$OkHttpLoaderCreator:
    private void <init>()
com.facebook.internal.FacebookRequestErrorClassification:
    public java.util.Map getOtherErrors()
    public java.util.Map getTransientErrors()
    public java.util.Map getLoginRecoverableErrors()
    public static final int EC_SERVICE_UNAVAILABLE
    public static final int EC_APP_TOO_MANY_CALLS
    public static final int EC_RATE
    public static final int EC_USER_TOO_MANY_CALLS
    public static final int EC_INVALID_SESSION
    public static final int EC_INVALID_TOKEN
    public static final int EC_APP_NOT_INSTALLED
    public static final int EC_TOO_MANY_USER_ACTION_CALLS
    public static final int ESC_APP_NOT_INSTALLED
    public static final int ESC_APP_INACTIVE
    public static final java.lang.String KEY_RECOVERY_MESSAGE
    public static final java.lang.String KEY_NAME
    public static final java.lang.String KEY_OTHER
    public static final java.lang.String KEY_TRANSIENT
    public static final java.lang.String KEY_LOGIN_RECOVERABLE
androidx.core.content.pm.ShortcutManagerCompat
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent:
    public void <init>(android.view.KeyEvent)
androidx.coordinatorlayout.R$dimen
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    private static final long REVERSED_BIT
    private static final long REVERSIBLE_FLAG_BIT
androidx.core.widget.ScrollerCompat
com.facebook.internal.UrlRedirectCache
androidx.core.provider.FontsContractCompat$4$7
kotlin.text.MatchResult$Destructured
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener
androidx.media.VolumeProviderCompatApi21
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
com.facebook.appevents.UserDataStore$3
androidx.media.app.NotificationCompat
com.facebook.share.ShareApi
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl
com.twitter.sdk.android.core.internal.SessionMonitor$2
androidx.media.MediaBrowserServiceCompat$ServiceCallbacks
okhttp3.internal.cache.DiskLruCache$1
com.facebook.internal.Utility$Predicate
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener
androidx.customview.widget.FocusStrategy$SequentialComparator
com.google.zxing.datamatrix.decoder.BitMatrixParser
android.support.v4.media.session.IMediaSession$Stub:
    public void <init>()
    public android.os.IBinder asBinder()
    public boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_sendCommand
    static final int TRANSACTION_sendMediaButton
    static final int TRANSACTION_registerCallbackListener
    static final int TRANSACTION_unregisterCallbackListener
    static final int TRANSACTION_isTransportControlEnabled
    static final int TRANSACTION_getPackageName
    static final int TRANSACTION_getTag
    static final int TRANSACTION_getLaunchPendingIntent
    static final int TRANSACTION_getFlags
    static final int TRANSACTION_getVolumeAttributes
    static final int TRANSACTION_adjustVolume
    static final int TRANSACTION_setVolumeTo
    static final int TRANSACTION_getMetadata
    static final int TRANSACTION_getPlaybackState
    static final int TRANSACTION_getQueue
    static final int TRANSACTION_getQueueTitle
    static final int TRANSACTION_getExtras
    static final int TRANSACTION_getRatingType
    static final int TRANSACTION_isCaptioningEnabled
    static final int TRANSACTION_getRepeatMode
    static final int TRANSACTION_isShuffleModeEnabledRemoved
    static final int TRANSACTION_getShuffleMode
    static final int TRANSACTION_addQueueItem
    static final int TRANSACTION_addQueueItemAt
    static final int TRANSACTION_removeQueueItem
    static final int TRANSACTION_removeQueueItemAt
    static final int TRANSACTION_prepare
    static final int TRANSACTION_prepareFromMediaId
    static final int TRANSACTION_prepareFromSearch
    static final int TRANSACTION_prepareFromUri
    static final int TRANSACTION_play
    static final int TRANSACTION_playFromMediaId
    static final int TRANSACTION_playFromSearch
    static final int TRANSACTION_playFromUri
    static final int TRANSACTION_skipToQueueItem
    static final int TRANSACTION_pause
    static final int TRANSACTION_stop
    static final int TRANSACTION_next
    static final int TRANSACTION_previous
    static final int TRANSACTION_fastForward
    static final int TRANSACTION_rewind
    static final int TRANSACTION_seekTo
    static final int TRANSACTION_rate
    static final int TRANSACTION_rateWithExtras
    static final int TRANSACTION_setCaptioningEnabled
    static final int TRANSACTION_setRepeatMode
    static final int TRANSACTION_setShuffleModeEnabledRemoved
    static final int TRANSACTION_setShuffleMode
    static final int TRANSACTION_sendCustomAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl:
    private static final java.lang.String SHARED_PREFERENCES_NAME
    private static final java.lang.String LIST_IDENTIFIER
    private static final java.lang.String BIG_INTEGER_PREFIX
    private static final java.lang.String DOUBLE_PREFIX
com.facebook.login.StartActivityDelegate
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$3
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1
androidx.viewpager.widget.PagerAdapter:
    public java.lang.Object instantiateItem(android.view.View,int)
    public void destroyItem(android.view.View,int,java.lang.Object)
    public void registerDataSetObserver(android.database.DataSetObserver)
    public void unregisterDataSetObserver(android.database.DataSetObserver)
    public java.lang.CharSequence getPageTitle(int)
    public static final int POSITION_UNCHANGED
    public static final int POSITION_NONE
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$7
kotlin.collections.ArrayAsCollection
com.facebook.share.model.AppInviteContent$Builder
androidx.appcompat.widget.ToolbarWidgetWrapper:
    private void ensureSpinner()
    public android.view.ViewGroup getViewGroup()
    public boolean hasExpandedActionView()
    public void collapseActionView()
    public java.lang.CharSequence getSubtitle()
    public void initProgress()
    public void initIndeterminateProgress()
    public boolean hasIcon()
    public boolean hasLogo()
    public boolean canShowOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public boolean showOverflowMenu()
    public boolean hideOverflowMenu()
    public void setMenuPrepared()
    public void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
    public void dismissPopupMenus()
    public int getDisplayOptions()
    public void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
    public boolean hasEmbeddedTabs()
    public boolean isTitleTruncated()
    public void setCollapsible(boolean)
    public void setHomeButtonEnabled(boolean)
    public int getNavigationMode()
    public void setNavigationMode(int)
    public void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public void setDropdownSelectedPosition(int)
    public int getDropdownSelectedPosition()
    public int getDropdownItemCount()
    public android.view.View getCustomView()
    public void animateToVisibility(int)
    public androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
    public void setNavigationIcon(int)
    public void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public void saveHierarchyState(android.util.SparseArray)
    public void restoreHierarchyState(android.util.SparseArray)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public int getHeight()
    public void setVisibility(int)
    public int getVisibility()
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public android.view.Menu getMenu()
    private android.view.View mTabView
    private android.widget.Spinner mSpinner
    private androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
    private static final java.lang.String TAG
    private static final int AFFECTS_LOGO_MASK
    private static final long DEFAULT_FADE_DURATION_MS
kotlin.properties.Delegates$vetoable$1
kotlinx.android.parcel.Parceler
com.twitter.sdk.android.tweetui.FormattedUrlEntity
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23
io.flutter.view.FlutterView$ZeroSides
com.facebook.internal.BundleJSONConverter$Setter:
    public abstract void setOnJSON(org.json.JSONObject,java.lang.String,java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate
kotlinx.android.parcel.IgnoredOnParcel
kotlin.internal.Exact
bolts.AndroidExecutors$1
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation
kotlin.jvm.internal.TypeIntrinsics
io.flutter.plugins.urllauncher.R$color
com.twitter.sdk.android.core.identity.AuthState
androidx.drawerlayout.R$layout
io.flutter.plugins.sharedpreferences.R$styleable
kotlin.io.FileTreeWalk
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt
androidx.core.provider.FontsContractCompat$Columns
com.google.zxing.client.result.TextParsedResult
com.squareup.picasso.Request:
    public com.squareup.picasso.Request$Builder buildUpon()
com.facebook.share.model.ShareStoryContent:
    private void <init>(com.facebook.share.model.ShareStoryContent$Builder)
    synthetic void <init>(com.facebook.share.model.ShareStoryContent$Builder,com.facebook.share.model.ShareStoryContent$1)
androidx.loader.content.Loader:
    public int getId()
    public void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener)
    public void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
    public void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
com.google.zxing.multi.qrcode.QRCodeMultiReader$SAComparator
zhuoyuan.li.fluttershareme.R$xml
okhttp3.Interceptor$Chain:
    public abstract okhttp3.Connection connection()
kotlin.collections.AbstractList$Companion
kotlin.collections.CollectionsKt__MutableCollectionsKt
androidx.core.graphics.drawable.WrappedDrawable:
    public abstract void setWrappedDrawable(android.graphics.drawable.Drawable)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2
com.facebook.ProgressOutputStream:
    long getBatchProgress()
    long getMaxProgress()
com.facebook.CustomTabMainActivity:
    private static final java.lang.String OAUTH_DIALOG
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl
kotlin.reflect.KFunction
kotlin.collections.SetsKt
androidx.lifecycle.ClassesInfoCache:
    private static final int CALL_TYPE_NO_ARG
    private static final int CALL_TYPE_PROVIDER
    private static final int CALL_TYPE_PROVIDER_WITH_EVENT
kotlin.reflect.KMutableProperty2$Setter
kotlin.Function
com.facebook.internal.AppCall:
    public static synchronized com.facebook.internal.AppCall finishPendingCall(java.util.UUID,int)
    public void setRequestCode(int)
com.twitter.sdk.android.core.Twitter:
    private void <init>(com.twitter.sdk.android.core.TwitterConfig)
    public static void initialize(android.content.Context)
    public static void initialize(com.twitter.sdk.android.core.TwitterConfig)
    static synchronized com.twitter.sdk.android.core.Twitter createTwitter(com.twitter.sdk.android.core.TwitterConfig)
    public static boolean isDebug()
    private final android.content.Context context
    private final com.twitter.sdk.android.core.internal.IdManager idManager
    private final java.util.concurrent.ExecutorService executorService
    private final com.twitter.sdk.android.core.TwitterAuthConfig twitterAuthConfig
    private final com.twitter.sdk.android.core.internal.ActivityLifecycleManager lifecycleManager
    private final boolean debug
    public static final java.lang.String TAG
    private static final java.lang.String CONSUMER_KEY
    private static final java.lang.String CONSUMER_SECRET
    private static final java.lang.String NOT_INITIALIZED_MESSAGE
androidx.drawerlayout.widget.DrawerLayout$LayoutParams
kotlin.jvm.internal.Ref$CharRef
androidx.print.PrintHelper
androidx.appcompat.widget.ActivityChooserView$Callbacks
kotlin.collections.AbstractIterator$WhenMappings
kotlin.reflect.KProperty$Getter
androidx.documentfile.provider.TreeDocumentFile
org.intellij.lang.annotations.JdkConstants$CalendarMonth
com.twitter.sdk.android.core.internal.AdvertisingInfoProvider
com.facebook.share.ShareApi$3
androidx.core.view.MarginLayoutParamsCompat:
    public static void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
    public static void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
    public static boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
    public static int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
    public static void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    public static void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    private void <init>()
com.twitter.sdk.android.core.AuthToken:
    public abstract boolean isExpired()
kotlin.jvm.internal.ArrayShortIterator
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1
kotlin.sequences.SequencesKt__SequencesKt$flatten$2
com.twitter.sdk.android.tweetui.R$color
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8
kotlin.jvm.Synchronized
androidx.media.MediaSessionManagerImplApi28
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int)
    private static boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private static void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private void removeAnimatorSetListener()
    public static void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static void clearAnimationCallbacks(android.graphics.drawable.Drawable)
    public void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public void clearAnimationCallbacks()
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState mCachedConstantStateDelegate
    private static final java.lang.String LOGTAG
    private static final java.lang.String ANIMATED_VECTOR
    private static final java.lang.String TARGET
    private static final boolean DBG_ANIMATION_VECTOR_DRAWABLE
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask
androidx.localbroadcastmanager.content.LocalBroadcastManager:
    public void sendBroadcastSync(android.content.Intent)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    static final int MSG_EXEC_PENDING_BROADCASTS
kotlin.UNINITIALIZED_VALUE
io.flutter.app.FlutterPluginRegistry
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData
com.twitter.sdk.android.core.identity.WebViewException:
    public int getErrorCode()
    public java.lang.String getDescription()
    public java.lang.String getFailingUrl()
    private static final long serialVersionUID
androidx.appcompat.app.AlertController$RecycleListView:
    public void setHasDecor(boolean,boolean)
kotlin.sequences.TransformingIndexedSequence$iterator$1
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3
kotlin.LazyKt$WhenMappings
com.twitter.sdk.android.tweetui.TweetUtils$2
com.twitter.sdk.android.tweetui.CollectionTimeline$CollectionCallback
androidx.annotation.IntRange
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation
com.facebook.share.widget.MessageDialog$NativeHandler
com.facebook.internal.DialogPresenter:
    public void <init>()
    public static boolean canPresentWebFallbackDialogWithFeature(com.facebook.internal.DialogFeature)
    public static void setupAppCallForWebFallbackDialog(com.facebook.internal.AppCall,android.os.Bundle,com.facebook.internal.DialogFeature)
    private static android.net.Uri getDialogWebFallbackUri(com.facebook.internal.DialogFeature)
    public static void logDialogActivity(android.content.Context,java.lang.String,java.lang.String)
com.twitter.sdk.android.core.internal.AdvertisingInfoServiceStrategy
androidx.browser.customtabs.CustomTabsServiceConnection
androidx.core.text.BidiFormatter$DirectionalityEstimator
io.flutter.plugin.common.MethodChannel:
    public void resizeChannelBuffer(int)
    private static final java.lang.String TAG
org.jetbrains.annotations.TestOnly
com.google.zxing.qrcode.decoder.DataMask$4
kotlin.collections.AbstractMap$keys$1
kotlin.jvm.internal.MutablePropertyReference2Impl
com.twitter.sdk.android.tweetui.TimelineDelegate$RefreshCallback
com.facebook.share.model.CameraEffectTextures$Builder:
    private com.facebook.share.model.CameraEffectTextures$Builder putParcelableTexture(java.lang.String,android.os.Parcelable)
    public com.facebook.share.model.CameraEffectTextures$Builder putTexture(java.lang.String,android.graphics.Bitmap)
    public com.facebook.share.model.CameraEffectTextures$Builder putTexture(java.lang.String,android.net.Uri)
    public synthetic bridge com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
    public synthetic bridge java.lang.Object build()
kotlin.time.ClockMark
kotlinx.android.extensions.LayoutContainer
com.squareup.picasso.AssetRequestHandler:
    protected static final java.lang.String ANDROID_ASSET
kotlin.collections.FloatIterator
com.twitter.sdk.android.tweetui.FilterTimelineDelegate$TimelineFilterCallback$1
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2
androidx.recyclerview.widget.MessageThreadUtil$2$1
okhttp3.OkHttpClient$1:
    public void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache)
    public okhttp3.internal.connection.StreamAllocation callEngineGetStreamAllocation(okhttp3.Call)
    public okhttp3.HttpUrl getHttpUrlChecked(java.lang.String)
    public void setCallWebSocket(okhttp3.Call)
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback
com.twitter.sdk.android.core.internal.AdvertisingInfoReflectionStrategy
kotlin.io.ByteStreamsKt
com.twitter.sdk.android.core.models.TwitterCollection$Metadata$Position
kotlin.comparisons.UComparisonsKt
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt
com.google.zxing.pdf417.encoder.BarcodeMatrix:
    void set(int,int,byte)
    public byte[][] getMatrix()
kotlin.collections.ArraysKt___ArraysKt$withIndex$2
kotlin.collections.CollectionsKt__IteratorsJVMKt
com.google.zxing.common.GridSampler
com.google.zxing.aztec.decoder.Decoder$Table
kotlin.jvm.functions.Function14
bolts.WebViewAppLinkResolver$2$1
com.facebook.common.R$id:
    private void <init>()
io.flutter.plugins.share.R$string
kotlin.io.TextStreamsKt$readLines$1
androidx.core.widget.ListViewCompat:
    public static boolean canScrollList(android.widget.ListView,int)
    private void <init>()
okio.Segment:
    static final int SIZE
    static final int SHARE_MINIMUM
androidx.core.R$dimen
kotlin.coroutines.experimental.migration.ContextMigration$Key
androidx.core.view.ViewCompat$FocusRealDirection
com.dxc.mtahackathon.R
kotlin.io.LinesSequence$iterator$1
com.facebook.share.model.ShareMessengerOpenGraphMusicTemplateContent:
    private void <init>(com.facebook.share.model.ShareMessengerOpenGraphMusicTemplateContent$Builder)
    synthetic void <init>(com.facebook.share.model.ShareMessengerOpenGraphMusicTemplateContent$Builder,com.facebook.share.model.ShareMessengerOpenGraphMusicTemplateContent$1)
com.twitter.TldLists:
    public void <init>()
androidx.core.app.JobIntentService$GenericWorkItem
androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsFallDialogListener
com.facebook.appevents.internal.SourceApplicationInfo:
    synthetic void <init>(java.lang.String,boolean,com.facebook.appevents.internal.SourceApplicationInfo$1)
    public java.lang.String getCallingApplicationPackage()
    public boolean isOpenedByAppLink()
    private static final java.lang.String SOURCE_APPLICATION_HAS_BEEN_SET_BY_THIS_INTENT
    private static final java.lang.String CALL_APPLICATION_PACKAGE_KEY
    private static final java.lang.String OPENED_BY_APP_LINK_KEY
com.facebook.share.widget.AppInviteDialog
com.facebook.internal.ProfileInformationCache:
    void <init>()
kotlin.comparisons.ComparisonsKt___ComparisonsKt
org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
com.facebook.appevents.codeless.CodelessManager:
    public void <init>()
androidx.customview.widget.FocusStrategy$CollectionAdapter
com.facebook.share.R$styleable
androidx.documentfile.R
com.google.zxing.client.result.BookmarkDoCoMoResultParser
androidx.coordinatorlayout.R$attr
com.twitter.sdk.android.core.TwitterConfig$Builder
okhttp3.Call:
    public abstract okhttp3.Request request()
    public abstract boolean isExecuted()
    public abstract boolean isCanceled()
org.jetbrains.annotations.Nullable
kotlin.text.StringsKt__StringsKt$splitToSequence$1
kotlin.coroutines.jvm.internal.CompletedContinuation
io.flutter.plugin.common.PluginRegistry$Registrar:
    public abstract android.content.Context context()
    public abstract android.content.Context activeContext()
    public abstract io.flutter.view.TextureRegistry textures()
    public abstract io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry()
    public abstract io.flutter.view.FlutterView view()
    public abstract java.lang.String lookupKeyForAsset(java.lang.String)
    public abstract java.lang.String lookupKeyForAsset(java.lang.String,java.lang.String)
    public abstract io.flutter.plugin.common.PluginRegistry$Registrar publish(java.lang.Object)
    public abstract io.flutter.plugin.common.PluginRegistry$Registrar addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
    public abstract io.flutter.plugin.common.PluginRegistry$Registrar addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
    public abstract io.flutter.plugin.common.PluginRegistry$Registrar addNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
    public abstract io.flutter.plugin.common.PluginRegistry$Registrar addUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
    public abstract io.flutter.plugin.common.PluginRegistry$Registrar addViewDestroyListener(io.flutter.plugin.common.PluginRegistry$ViewDestroyListener)
androidx.appcompat.R$layout:
    private void <init>()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring
androidx.media.MediaBrowserServiceCompatApi23
androidx.appcompat.widget.AppCompatSeekBarHelper
kotlin.ExceptionsKt__ExceptionsKt
kotlin.ranges.RangesKt___RangesKt
io.flutter.embedding.engine.FlutterEnginePluginRegistry$FlutterEngineActivityPluginBinding:
    public java.lang.Object getLifecycle()
    public void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
    public void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
    public void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
    public void removeOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
    public void addOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
    public void removeOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
com.facebook.login.LoginResult
androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    void <init>(androidx.recyclerview.widget.RecyclerView)
    private void disableRunOnAnimationRequests()
    private void enableRunOnAnimationRequests()
    private float distanceInfluenceForSnapDuration(float)
    private int computeScrollDuration(int,int,int,int)
    public void run()
    void postOnAnimation()
    public void smoothScrollBy(int,int)
    public void smoothScrollBy(int,int,int,int)
    public void smoothScrollBy(int,int,int)
    public void smoothScrollBy(int,int,int,android.view.animation.Interpolator)
    private int mLastFlingX
    private int mLastFlingY
    android.view.animation.Interpolator mInterpolator
    private boolean mEatRunOnAnimationRequest
    private boolean mReSchedulePostAnimationCallback
    final synthetic androidx.recyclerview.widget.RecyclerView this$0
com.facebook.FacebookSdkVersion
android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler
kotlin.WasExperimental
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1
androidx.annotation.DrawableRes
io.flutter.plugin.platform.PlatformViewRegistryImpl:
    public boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
kotlin.collections.ArraysKt
com.facebook.internal.ImageDownloader$RequestKey
com.facebook.ProfileCache:
    static final java.lang.String CACHED_PROFILE_KEY
    static final java.lang.String SHARED_PREFERENCES_NAME
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$1
kotlin.text.MatcherMatchResult$groupValues$1
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$1
okhttp3.CacheControl:
    public int sMaxAgeSeconds()
    public boolean noTransform()
androidx.appcompat.app.AlertController$4
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
androidx.media.R$string
com.facebook.appevents.AppEventsManager:
    public void <init>()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7
kotlin.coroutines.CoroutineContext$Key
androidx.media.MediaBrowserCompatUtils
kotlin.reflect.KAnnotatedElement
com.facebook.AccessTokenTracker
androidx.recyclerview.widget.ItemTouchHelper$2
com.facebook.share.internal.LikeActionController$GetOGObjectIdRequestWrapper
com.twitter.sdk.android.core.Logger:
    public abstract boolean isLoggable(java.lang.String,int)
    public abstract int getLogLevel()
    public abstract void setLogLevel(int)
    public abstract void d(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void v(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void i(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void w(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void v(java.lang.String,java.lang.String)
    public abstract void i(java.lang.String,java.lang.String)
    public abstract void log(int,java.lang.String,java.lang.String,boolean)
kotlin.ranges.URangesKt___URangesKt
androidx.browser.browseractions.BrowserActionsFallbackMenuUi$BrowserActionsFallMenuUiListener
com.twitter.sdk.android.tweetui.TweetRepository$4
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1
androidx.appcompat.widget.PopupMenu$2
okhttp3.Response:
    public okhttp3.Protocol protocol()
    public java.lang.String message()
    public java.util.List headers(java.lang.String)
    public okhttp3.ResponseBody peekBody(long)
    public boolean isRedirect()
    public okhttp3.Response networkResponse()
    public okhttp3.Response cacheResponse()
    public java.util.List challenges()
com.appleeducate.getversion.R$styleable
com.facebook.share.internal.OpenGraphJSONUtility:
    private void <init>()
com.facebook.appevents.AppEventsLogger$ProductAvailability
kotlin.jvm.JvmWildcard
io.flutter.view.FlutterRunArguments
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy
com.facebook.share.internal.LikeActionController$2
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    private static final long serialVersionUID
com.facebook.share.widget.MessageDialog
kotlin.collections.AbstractList$IteratorImpl
com.google.zxing.datamatrix.decoder.Version$ECBlocks
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl
kotlin.comparisons.NaturalOrderComparator
androidx.annotation.LongDef
kotlin.collections.AbstractMutableList
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1
com.facebook.share.internal.ShareContentValidation:
    public void <init>()
    public static void validateForMessage(com.facebook.share.model.ShareContent)
    public static void validateForApiShare(com.facebook.share.model.ShareContent)
    private static com.facebook.share.internal.ShareContentValidation$Validator getApiValidator()
    static synthetic void access$600(com.facebook.share.model.SharePhoto,com.facebook.share.internal.ShareContentValidation$Validator)
    private static com.facebook.share.internal.ShareContentValidation$Validator ApiValidator
com.twitter.sdk.android.core.models.VideoInfo:
    private void <init>()
    public void <init>(java.util.List,long,java.util.List)
    public final java.util.List aspectRatio
com.facebook.share.model.ShareVideoContent$Builder
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
androidx.recyclerview.widget.OpReorderer$Callback
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder
kotlin.PreconditionsKt__AssertionsJVMKt
androidx.core.app.ServiceCompat
com.facebook.appevents.AppEventsLogger:
    public static void activateApp(android.app.Application)
    public static void activateApp(android.content.Context)
    public static void activateApp(android.content.Context,java.lang.String)
    public static void deactivateApp(android.content.Context)
    public static void deactivateApp(android.content.Context,java.lang.String)
    public static com.facebook.appevents.AppEventsLogger newLogger(android.content.Context,com.facebook.AccessToken)
    public static com.facebook.appevents.AppEventsLogger newLogger(android.content.Context,java.lang.String,com.facebook.AccessToken)
    public static com.facebook.appevents.AppEventsLogger newLogger(android.content.Context,java.lang.String)
    public static void setFlushBehavior(com.facebook.appevents.AppEventsLogger$FlushBehavior)
    public static void setPushNotificationsRegistrationId(java.lang.String)
    public static void augmentWebView(android.webkit.WebView,android.content.Context)
    public static void setUserID(java.lang.String)
    public static void clearUserID()
    public static void setUserData(android.os.Bundle)
    public static void setUserData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    public static java.lang.String getUserData()
    public static void clearUserData()
    public static void updateUserProperties(android.os.Bundle,com.facebook.GraphRequest$Callback)
    public static void updateUserProperties(android.os.Bundle,java.lang.String,com.facebook.GraphRequest$Callback)
    public void logEvent(java.lang.String)
    public void logEvent(java.lang.String,double)
    public void logEvent(java.lang.String,double,android.os.Bundle)
    public void logPurchase(java.math.BigDecimal,java.util.Currency)
    public void logPurchase(java.math.BigDecimal,java.util.Currency,android.os.Bundle)
    public void logPurchaseImplicitly(java.math.BigDecimal,java.util.Currency,android.os.Bundle)
    public void logPushNotificationOpen(android.os.Bundle)
    public void logPushNotificationOpen(android.os.Bundle,java.lang.String)
    public void logProductItem(java.lang.String,com.facebook.appevents.AppEventsLogger$ProductAvailability,com.facebook.appevents.AppEventsLogger$ProductCondition,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal,java.util.Currency,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
    public boolean isValidForAccessToken(com.facebook.AccessToken)
    public void logSdkEvent(java.lang.String,java.lang.Double,android.os.Bundle)
    public java.lang.String getApplicationId()
    public static final java.lang.String ACTION_APP_EVENTS_FLUSHED
    public static final java.lang.String APP_EVENTS_EXTRA_NUM_EVENTS_FLUSHED
    public static final java.lang.String APP_EVENTS_EXTRA_FLUSH_RESULT
kotlin.jvm.internal.ReflectionFactory
bolts.Task$6
com.twitter.sdk.android.core.internal.scribe.EnabledEventsStrategy:
    public void deleteAllEvents()
    public int getRollover()
    static final int UNDEFINED_ROLLOVER_INTERVAL_SECONDS
com.facebook.login.LoginLogger:
    public void logStartLogin(com.facebook.login.LoginClient$Request)
    public void logCompleteLogin(java.lang.String,java.util.Map,com.facebook.login.LoginClient$Result$Code,java.util.Map,java.lang.Exception)
    public void logLoginStatusStart(java.lang.String)
    public void logLoginStatusSuccess(java.lang.String)
    public void logLoginStatusFailure(java.lang.String)
    public void logLoginStatusError(java.lang.String,java.lang.Exception)
    public void logUnexpectedError(java.lang.String,java.lang.String)
    static final java.lang.String EVENT_NAME_LOGIN_METHOD_START
    static final java.lang.String EVENT_NAME_LOGIN_METHOD_COMPLETE
    static final java.lang.String EVENT_NAME_LOGIN_METHOD_NOT_TRIED
    static final java.lang.String EVENT_PARAM_METHOD_RESULT_SKIPPED
    static final java.lang.String EVENT_NAME_LOGIN_START
    static final java.lang.String EVENT_NAME_LOGIN_COMPLETE
    static final java.lang.String EVENT_NAME_LOGIN_STATUS_START
    static final java.lang.String EVENT_NAME_LOGIN_STATUS_COMPLETE
    static final java.lang.String EVENT_PARAM_AUTH_LOGGER_ID
    static final java.lang.String EVENT_PARAM_TIMESTAMP
    static final java.lang.String EVENT_PARAM_LOGIN_RESULT
    static final java.lang.String EVENT_PARAM_METHOD
    static final java.lang.String EVENT_PARAM_ERROR_CODE
    static final java.lang.String EVENT_PARAM_ERROR_MESSAGE
    static final java.lang.String EVENT_PARAM_EXTRAS
    static final java.lang.String EVENT_PARAM_CHALLENGE
    static final java.lang.String EVENT_EXTRAS_TRY_LOGIN_ACTIVITY
    static final java.lang.String EVENT_EXTRAS_MISSING_INTERNET_PERMISSION
    static final java.lang.String EVENT_EXTRAS_NOT_TRIED
    static final java.lang.String EVENT_EXTRAS_NEW_PERMISSIONS
    static final java.lang.String EVENT_EXTRAS_LOGIN_BEHAVIOR
    static final java.lang.String EVENT_EXTRAS_REQUEST_CODE
    static final java.lang.String EVENT_EXTRAS_PERMISSIONS
    static final java.lang.String EVENT_EXTRAS_DEFAULT_AUDIENCE
    static final java.lang.String EVENT_EXTRAS_IS_REAUTHORIZE
    static final java.lang.String EVENT_EXTRAS_FACEBOOK_VERSION
    static final java.lang.String EVENT_EXTRAS_FAILURE
    static final java.lang.String FACEBOOK_PACKAGE_NAME
io.flutter.view.FlutterView$FirstFrameListener
kotlin.coroutines.experimental.migration.ExperimentalContinuationMigration
androidx.browser.browseractions.BrowserActionItem
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState
com.twitter.sdk.android.core.internal.persistence.FileStore
io.flutter.plugins.deviceinfo.R$id
androidx.appcompat.app.TwilightManager$TwilightState
androidx.core.content.FileProvider:
    private static final java.lang.String META_DATA_FILE_PROVIDER_PATHS
    private static final java.lang.String TAG_ROOT_PATH
    private static final java.lang.String TAG_FILES_PATH
    private static final java.lang.String TAG_CACHE_PATH
    private static final java.lang.String TAG_EXTERNAL
    private static final java.lang.String TAG_EXTERNAL_FILES
    private static final java.lang.String TAG_EXTERNAL_CACHE
    private static final java.lang.String TAG_EXTERNAL_MEDIA
    private static final java.lang.String ATTR_NAME
    private static final java.lang.String ATTR_PATH
androidx.appcompat.R$string:
    private void <init>()
kotlin.text.CharDirectionality$Companion
com.twitter.sdk.android.core.internal.scribe.ScribeFilesSender:
    void setScribeService(com.twitter.sdk.android.core.internal.scribe.ScribeFilesSender$ScribeService)
    private static final java.lang.String SEND_FILE_FAILURE_ERROR
com.facebook.appevents.AppEventsLoggerImpl$2
kotlin.ranges.CharProgressionIterator
kotlin.jvm.internal.Ref$IntRef
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1
io.flutter.plugin.common.JSONUtil:
    private void <init>()
    public static java.lang.Object unwrap(java.lang.Object)
com.twitter.sdk.android.core.models.TwitterCollection$TimelineItem$TweetItem
com.facebook.internal.ImageDownloader$CacheReadWorkItem
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData
com.twitter.sdk.android.core.TwitterApiErrorConstants
bolts.Capture
androidx.core.content.ContextCompat:
    protected void <init>()
    public static boolean startActivities(android.content.Context,android.content.Intent[])
    public static boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
    public static java.io.File getDataDir(android.content.Context)
    public static java.io.File[] getObbDirs(android.content.Context)
    private static varargs java.io.File buildPath(java.io.File,java.lang.String[])
    public static int getColor(android.content.Context,int)
    public static int checkSelfPermission(android.content.Context,java.lang.String)
    public static java.io.File getNoBackupFilesDir(android.content.Context)
    public static java.io.File getCodeCacheDir(android.content.Context)
    private static synchronized java.io.File createFilesDir(java.io.File)
    public static android.content.Context createDeviceProtectedStorageContext(android.content.Context)
    public static boolean isDeviceProtectedStorage(android.content.Context)
    public static void startForegroundService(android.content.Context,android.content.Intent)
    public static java.lang.Object getSystemService(android.content.Context,java.lang.Class)
    public static java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
    private static final java.lang.String TAG
androidx.annotation.Dimension
com.google.zxing.common.BitArray:
    public void <init>(int)
    public void set(int)
    public void flip(int)
    public int getNextSet(int)
    public int getNextUnset(int)
    public void setBulk(int,int)
    public void setRange(int,int)
    public void clear()
    public boolean isRange(int,int,boolean)
    public int[] getBitArray()
    public void reverse()
com.facebook.GraphRequest$2
androidx.core.widget.EdgeEffectCompat:
    public void <init>(android.content.Context)
    public void setSize(int,int)
    public boolean isFinished()
    public void finish()
    public boolean onPull(float)
    public boolean onPull(float,float)
    public boolean onRelease()
    public boolean onAbsorb(int)
    public boolean draw(android.graphics.Canvas)
    private android.widget.EdgeEffect mEdgeEffect
com.twitter.sdk.android.tweetui.R$id:
    private void <init>()
com.google.zxing.pdf417.decoder.DetectionResult
okio.Util:
    private void <init>()
    public static long reverseBytesLong(long)
androidx.multidex.MultiDex$V14$JBMR2ElementConstructor
androidx.swiperefreshlayout.R$styleable
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2
kotlin.jvm.internal.ArrayBooleanIterator
kotlin.sequences.SequenceScope
com.google.zxing.pdf417.encoder.Dimensions:
    public void <init>(int,int,int,int)
androidx.appcompat.widget.ShareActionProvider
com.twitter.sdk.android.tweetui.FixedTweetTimeline
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    public void printVPath(int)
    public java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[])
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
com.facebook.AccessToken$AccessTokenCreationCallback
androidx.core.app.NotificationCompat$Action$Builder
com.facebook.share.DeviceShareDialog$Result
bolts.AppLinkNavigation$1
io.flutter.plugins.share.R$layout
io.flutter.view.FlutterMain$Settings
androidx.media.R$layout
androidx.browser.browseractions.BrowserActionsFallbackMenuDialog
io.flutter.plugins.packageinfo.BuildConfig
androidx.appcompat.R$bool:
    private void <init>()
com.facebook.share.internal.LikeActionController$GetPageIdRequestWrapper
com.twitter.sdk.android.tweetui.TimelineListAdapter
android.support.v4.media.session.MediaSessionCompat$SessionFlags
androidx.core.os.UserManagerCompat
org.intellij.lang.annotations.PrintFormat
androidx.appcompat.app.WindowDecorActionBar$TabImpl
androidx.core.util.AtomicFile
androidx.lifecycle.LiveData:
    public void observeForever(androidx.lifecycle.Observer)
    public void removeObservers(androidx.lifecycle.LifecycleOwner)
    int getVersion()
    public boolean hasObservers()
    static final int START_VERSION
androidx.annotation.CallSuper
androidx.vectordrawable.R$integer
androidx.appcompat.app.AppCompatDelegateImpl$3
retrofit2.Call:
    public abstract boolean isExecuted()
    public abstract void cancel()
    public abstract okhttp3.Request request()
okhttp3.CertificatePinner$Pin:
    private static final java.lang.String WILDCARD
androidx.loader.R$layout
io.flutter.embedding.engine.loader.ResourceExtractor$1
androidx.legacy.coreui.R$dimen
kotlin.jvm.internal.PropertyReference2Impl
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider
kotlin.text.CharsetsKt
com.google.zxing.Binarizer
androidx.core.app.ShareCompat$IntentBuilder
okhttp3.internal.framed.FramedConnection$Builder:
    public okhttp3.internal.framed.FramedConnection$Builder socket(java.net.Socket)
    public okhttp3.internal.framed.FramedConnection$Builder pushObserver(okhttp3.internal.framed.PushObserver)
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding:
    public abstract android.content.BroadcastReceiver getBroadcastReceiver()
com.facebook.internal.FetchedAppSettings$DialogFeatureConfig:
    public android.net.Uri getFallbackUrl()
    private static final java.lang.String DIALOG_CONFIG_DIALOG_NAME_FEATURE_NAME_SEPARATOR
    private static final java.lang.String DIALOG_CONFIG_NAME_KEY
    private static final java.lang.String DIALOG_CONFIG_VERSIONS_KEY
    private static final java.lang.String DIALOG_CONFIG_URL_KEY
androidx.media.VolumeProviderCompat$1
androidx.core.view.MenuItemCompat:
    public static void setShowAsAction(android.view.MenuItem,int)
    public static android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
    public static android.view.MenuItem setActionView(android.view.MenuItem,int)
    public static android.view.View getActionView(android.view.MenuItem)
    public static androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem)
    public static boolean expandActionView(android.view.MenuItem)
    public static boolean collapseActionView(android.view.MenuItem)
    public static boolean isActionViewExpanded(android.view.MenuItem)
    public static android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)
    public static java.lang.CharSequence getContentDescription(android.view.MenuItem)
    public static java.lang.CharSequence getTooltipText(android.view.MenuItem)
    public static void setShortcut(android.view.MenuItem,char,char,int,int)
    public static int getNumericModifiers(android.view.MenuItem)
    public static int getAlphabeticModifiers(android.view.MenuItem)
    public static android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
    public static android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
    private void <init>()
    private static final java.lang.String TAG
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
kotlin.ULong$Companion
kotlin.ranges.IntRange
androidx.appcompat.app.ActionBar
android.support.v4.media.session.MediaSessionCompat$2
kotlin.collections.IndexingIterator
com.google.gson.JsonIOException:
    public void <init>(java.lang.String,java.lang.Throwable)
    private static final long serialVersionUID
androidx.asynclayoutinflater.view.AsyncLayoutInflater
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase
okhttp3.internal.http.RetryAndFollowUpInterceptor:
    public okhttp3.OkHttpClient client()
    public void setForWebSocket(boolean)
    public okhttp3.internal.connection.StreamAllocation streamAllocation()
    private static final int MAX_FOLLOW_UPS
com.twitter.sdk.android.core.internal.oauth.OAuthService:
    private static final java.lang.String CLIENT_NAME
kotlin.coroutines.experimental.RestrictsSuspension
com.google.zxing.maxicode.MaxiCodeReader
org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1
androidx.recyclerview.widget.RecyclerView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private void initAutofill()
    private void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
    private java.lang.String getFullClassName(android.content.Context,java.lang.String)
    private void initChildrenHelper()
    static androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)
    static void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    static synthetic void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)
    static synthetic void access$100(androidx.recyclerview.widget.RecyclerView,int)
    static synthetic boolean access$200(androidx.recyclerview.widget.RecyclerView)
    void initAdapterManager()
    public boolean hasFixedSize()
    public void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
    public void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
    public void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
    public void clearOnChildAttachStateChangeListeners()
    boolean removeAnimatingView(android.view.View)
    public void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)
    public void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
    public androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
    public void removeItemDecorationAt(int)
    public void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
    public void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
    public void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
    public void clearOnScrollListeners()
    public void scrollToPosition(int)
    void jumpToPositionForSmoothScroller(int)
    public void smoothScrollToPosition(int)
    public boolean isLayoutFrozen()
    void absorbGlows(int,int)
    void assertInLayoutOrScroll(java.lang.String)
    public void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
    public void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
    void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean isAnimating()
    void offsetPositionRecordsForMove(int,int)
    void offsetPositionRecordsForInsert(int,int)
    void offsetPositionRecordsForRemove(int,int,boolean)
    void viewRangeUpdate(int,int,java.lang.Object)
    boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void invalidateItemDecorations()
    public int getChildPosition(android.view.View)
    public int getChildAdapterPosition(android.view.View)
    public int getChildLayoutPosition(android.view.View)
    public long getChildItemId(android.view.View)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
    androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)
    public android.view.View findChildViewUnder(float,float)
    public void onChildAttachedToWindow(android.view.View)
    public void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
    public boolean hasPendingAdapterUpdates()
    void dispatchChildAttached(android.view.View)
    boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)
    public boolean hasNestedScrollingParent(int)
    final java.lang.Runnable mUpdateChildViewsRunnable
    boolean mEnableFastScroller
    static final java.lang.String TAG
    static final boolean DEBUG
    static final boolean VERBOSE_TRACING
    static final boolean DISPATCH_TEMP_DETACH
    public static final int HORIZONTAL
    public static final int VERTICAL
    static final int DEFAULT_ORIENTATION
    public static final int NO_POSITION
    public static final long NO_ID
    public static final int INVALID_TYPE
    public static final int TOUCH_SLOP_DEFAULT
    public static final int TOUCH_SLOP_PAGING
    static final int MAX_SCROLL_DURATION
    static final java.lang.String TRACE_SCROLL_TAG
    private static final java.lang.String TRACE_ON_LAYOUT_TAG
    private static final java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
    private static final java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG
    static final java.lang.String TRACE_BIND_VIEW_TAG
    static final java.lang.String TRACE_PREFETCH_TAG
    static final java.lang.String TRACE_NESTED_PREFETCH_TAG
    static final java.lang.String TRACE_CREATE_VIEW_TAG
    private static final int INVALID_POINTER
    public static final int SCROLL_STATE_IDLE
    public static final int SCROLL_STATE_DRAGGING
    public static final int SCROLL_STATE_SETTLING
    static final long FOREVER_NS
androidx.core.widget.AutoSizeableTextView:
    public abstract void setAutoSizeTextTypeWithDefaults(int)
    public abstract void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
    public abstract void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
    public abstract int getAutoSizeTextType()
    public abstract int getAutoSizeStepGranularity()
    public abstract int getAutoSizeMinTextSize()
    public abstract int getAutoSizeMaxTextSize()
    public abstract int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface
androidx.browser.browseractions.BrowserActionsIntent
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public int getId()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
androidx.browser.customtabs.CustomTabsClient$2$1
com.facebook.share.model.GameRequestContent$Filters
androidx.versionedparcelable.VersionedParcelStream
androidx.appcompat.app.AppCompatDelegate
androidx.recyclerview.widget.DiffUtil$Callback
androidx.core.view.inputmethod.EditorInfoCompat
kotlinx.android.extensions.CacheImplementation
androidx.appcompat.view.menu.MenuHelper
io.flutter.plugins.sharedpreferences.R$attr
kotlin.text.Regex$fromInt$$inlined$apply$lambda$1
com.facebook.share.internal.LikeBoxCountView
kotlin.jvm.internal.PropertyReference0Impl
com.google.zxing.client.result.WifiResultParser
com.facebook.login.LoginClient:
    void addExtraData(java.lang.String,java.lang.String,boolean)
    com.facebook.login.LoginClient$OnCompletedListener getOnCompletedListener()
    com.facebook.login.LoginClient$BackgroundProcessingListener getBackgroundProcessingListener()
androidx.appcompat.widget.ListPopupWindow$1
androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener
kotlin.Result$Failure
kotlin.jvm.internal.CallableReference$NoReceiver
com.google.zxing.qrcode.detector.FinderPattern
kotlin.collections.AbstractSet
kotlin.time.Clock
com.twitter.sdk.android.core.models.Search
com.google.zxing.client.result.AbstractDoCoMoResultParser
com.facebook.share.model.ShareLinkContent$Builder:
    public com.facebook.share.model.ShareLinkContent$Builder setContentDescription(java.lang.String)
    public com.facebook.share.model.ShareLinkContent$Builder setContentTitle(java.lang.String)
    public com.facebook.share.model.ShareLinkContent$Builder setImageUrl(android.net.Uri)
    public com.facebook.share.model.ShareLinkContent$Builder readFrom(com.facebook.share.model.ShareLinkContent)
    public synthetic bridge com.facebook.share.model.ShareContent$Builder readFrom(com.facebook.share.model.ShareContent)
    public synthetic bridge com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
    public synthetic bridge java.lang.Object build()
com.twitter.sdk.android.core.internal.VineCardUtils:
    private void <init>()
    public static final java.lang.String PLAYER_CARD
    public static final java.lang.String VINE_CARD
    public static final long VINE_USER_ID
com.facebook.appevents.FacebookSDKJSInterface
com.twitter.sdk.android.core.models.TwitterCollection$TimelineItem
kotlin.NumbersKt
android.support.v4.media.MediaDescriptionCompatApi21:
    private void <init>()
com.google.zxing.client.result.SMSTOMMSTOResultParser
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1
okhttp3.internal.framed.FramedConnection$Reader:
    public void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
org.intellij.lang.annotations.JdkConstants$InputEventMask
kotlin.annotation.AnnotationTarget
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo
androidx.recyclerview.widget.DefaultItemAnimator$2
android.support.v4.media.session.MediaSessionCompat$Token:
    void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object,android.support.v4.media.session.IMediaSession)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromBundle(android.os.Bundle)
    public java.lang.Object getToken()
    public android.os.Bundle getSessionToken2Bundle()
    public android.os.Bundle toBundle()
androidx.media.MediaBrowserProtocol
com.facebook.internal.instrument.errorreport.ErrorReportHandler:
    public void <init>()
    private static final int MAX_ERROR_REPORT_NUM
androidx.versionedparcelable.VersionedParcelStream$InputBuffer
com.example.connectivity.R$drawable
com.facebook.internal.ImageRequest$1
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
kotlin.ResultKt
okhttp3.internal.cache.DiskLruCache$Snapshot
com.facebook.share.widget.LikeView$LikeControllerBroadcastReceiver
androidx.swiperefreshlayout.R$integer
androidx.annotation.Px
androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$8
com.facebook.internal.FileLruCache$BufferFile
androidx.vectordrawable.R$color
com.twitter.sdk.android.tweetcomposer.R
androidx.appcompat.text.AllCapsTransformationMethod
org.intellij.lang.annotations.JdkConstants$PatternFlags
androidx.core.provider.FontsContractCompat$4$8
android.support.v4.media.MediaBrowserCompat$Subscription
kotlin.collections.EmptyMap
com.facebook.share.internal.LikeContent
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1
com.twitter.sdk.android.core.R$dimen
io.flutter.plugins.connectivity.R$drawable
com.facebook.share.internal.VideoUploader$StartUploadWorkItem$1
androidx.core.app.NotificationManagerCompat$Task
androidx.core.os.ConfigurationCompat
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1
kotlin.coroutines.jvm.internal.SuspendLambda
com.google.zxing.ResultMetadataType
androidx.legacy.app.ActionBarDrawerToggle
androidx.recyclerview.R$styleable:
    private void <init>()
com.google.gson.DefaultDateTypeAdapter:
    void <init>(int)
androidx.multidex.MultiDexExtractor
androidx.media.AudioAttributesImplApi21:
    void <init>(android.media.AudioAttributes)
    void <init>(android.media.AudioAttributes,int)
    static java.lang.reflect.Method getAudioAttributesToLegacyStreamTypeMethod()
    public static androidx.media.AudioAttributesImpl fromBundle(android.os.Bundle)
    public java.lang.Object getAudioAttributes()
    public int getVolumeControlStream()
    public int getLegacyStreamType()
    public int getRawLegacyStreamType()
    public int getContentType()
    public int getUsage()
    public int getFlags()
    public android.os.Bundle toBundle()
    private static final java.lang.String TAG
    static java.lang.reflect.Method sAudioAttributesToLegacyStreamType
androidx.annotation.StringRes
androidx.asynclayoutinflater.R
com.facebook.appevents.internal.InAppPurchaseActivityLifecycleTracker:
    private static final java.lang.String SERVICE_INTERFACE_NAME
    private static final java.lang.String BILLING_ACTIVITY_NAME
kotlin.reflect.KVisibility
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent
kotlin.SinceKotlin
kotlin.coroutines.SafeContinuation$Companion
io.flutter.view.FlutterView$Provider
kotlin.TuplesKt
androidx.core.view.inputmethod.InputConnectionCompat$2
com.twitter.sdk.android.R$id
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper
io.flutter.embedding.engine.systemchannels.LocalizationChannel:
    private static final java.lang.String TAG
androidx.core.app.JobIntentService$WorkEnqueuer
zhuoyuan.li.fluttershareme.FlutterShareMePlugin$1:
    public void onSuccess(com.facebook.share.Sharer$Result)
    public void onCancel()
    public void onError(com.facebook.FacebookException)
    public synthetic bridge void onSuccess(java.lang.Object)
com.twitter.sdk.android.core.R
androidx.multidex.MultiDex$V14$ICSElementConstructor
kotlin.sequences.SequencesKt__SequenceBuilderKt
androidx.appcompat.app.ToolbarActionBar
io.flutter.embedding.engine.systemchannels.AccessibilityChannel:
    private static final java.lang.String TAG
com.twitter.sdk.android.tweetui.TweetTimelineRecyclerViewAdapter$Builder
okhttp3.Cache$2
com.facebook.internal.ImageResponseCache
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
kotlin.time.AbstractLongClock$LongClockMark
kotlin.reflect.KParameter$Kind
com.twitter.sdk.android.tweetui.R$plurals
androidx.fragment.app.Fragment$SavedState
com.twitter.sdk.android.tweetui.ScribeConstants
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback
com.facebook.share.internal.ResultProcessor
com.twitter.sdk.android.tweetui.internal.util.HtmlEntities$PrimitiveEntityMap
com.google.zxing.client.result.WifiParsedResult
kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder
androidx.core.app.NotificationCompat$InboxStyle
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState
com.google.zxing.common.BitMatrix:
    public static com.google.zxing.common.BitMatrix parse(boolean[][])
    public static com.google.zxing.common.BitMatrix parse(java.lang.String,java.lang.String,java.lang.String)
    public void unset(int,int)
    public void flip(int,int)
    public void xor(com.google.zxing.common.BitMatrix)
    public com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray)
    public void setRow(int,com.google.zxing.common.BitArray)
    public void rotate180()
    public int[] getEnclosingRectangle()
    public int[] getTopLeftOnBit()
    public int[] getBottomRightOnBit()
    public int getRowSize()
    public java.lang.String toString(java.lang.String,java.lang.String,java.lang.String)
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder
androidx.recyclerview.widget.DiffUtil$DiffResult
kotlin.DslMarker
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl
com.google.zxing.common.reedsolomon.GenericGF:
    com.google.zxing.common.reedsolomon.GenericGFPoly getOne()
    public int getSize()
com.facebook.ProfileTracker$ProfileBroadcastReceiver
com.facebook.internal.FetchedAppSettings:
    public java.lang.String getNuxContent()
    public boolean getNuxEnabled()
    public java.lang.String getSmartLoginBookmarkIconURL()
    public java.lang.String getSmartLoginMenuIconURL()
    public boolean getTrackUninstallEnabled()
com.twitter.sdk.android.tweetui.BaseTweetView$3
androidx.core.util.Preconditions:
    public static void checkArgument(boolean)
    public static void checkArgument(boolean,java.lang.Object)
    public static java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)
    public static java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)
    public static void checkState(boolean,java.lang.String)
    public static void checkState(boolean)
    public static int checkFlagsArgument(int,int)
    public static int checkArgumentNonnegative(int,java.lang.String)
    public static long checkArgumentNonnegative(long)
    public static long checkArgumentNonnegative(long,java.lang.String)
    public static int checkArgumentPositive(int,java.lang.String)
    public static float checkArgumentFinite(float,java.lang.String)
    public static float checkArgumentInRange(float,float,float,java.lang.String)
    public static int checkArgumentInRange(int,int,int,java.lang.String)
    public static long checkArgumentInRange(long,long,long,java.lang.String)
    public static java.lang.Object[] checkArrayElementsNotNull(java.lang.Object[],java.lang.String)
    public static java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String)
    public static java.util.Collection checkCollectionNotEmpty(java.util.Collection,java.lang.String)
    public static float[] checkArrayElementsInRange(float[],float,float,java.lang.String)
    private void <init>()
android.support.v4.media.RatingCompat:
    public static android.support.v4.media.RatingCompat newUnratedRating(int)
    public static android.support.v4.media.RatingCompat newHeartRating(boolean)
    public static android.support.v4.media.RatingCompat newThumbRating(boolean)
    public static android.support.v4.media.RatingCompat newStarRating(int,float)
    public static android.support.v4.media.RatingCompat newPercentageRating(float)
    public static android.support.v4.media.RatingCompat fromRating(java.lang.Object)
    public boolean isRated()
    public int getRatingStyle()
    public boolean hasHeart()
    public boolean isThumbUp()
    public float getStarRating()
    public float getPercentRating()
    public java.lang.Object getRating()
    private java.lang.Object mRatingObj
    private static final java.lang.String TAG
    public static final int RATING_NONE
    public static final int RATING_HEART
    public static final int RATING_THUMB_UP_DOWN
    public static final int RATING_3_STARS
    public static final int RATING_4_STARS
    public static final int RATING_5_STARS
    public static final int RATING_PERCENTAGE
    private static final float RATING_NOT_RATED
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1
com.facebook.share.DeviceShareDialog
androidx.slidingpanelayout.R$color
androidx.core.widget.CompoundButtonCompat
kotlin.internal.HidesMembers
okio.Base64:
    private void <init>()
    public static java.lang.String encodeUrl(byte[])
androidx.core.text.TextUtilsCompat
com.facebook.share.internal.GameRequestValidation
io.flutter.plugins.share.BuildConfig
androidx.core.app.NotificationCompat$Action$WearableExtender
com.google.zxing.client.result.ProductResultParser
kotlin.collections.CollectionsKt___CollectionsJvmKt
androidx.browser.browseractions.BrowserActionsFallbackMenuAdapter
bolts.WebViewAppLinkResolver$2$2
kotlin.jvm.internal.ArrayIteratorsKt
io.flutter.plugins.sharedpreferences.R$drawable
zhuoyuan.li.fluttershareme.R$attr
com.facebook.share.widget.LikeView
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener
kotlin.ExperimentalUnsignedTypes
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal
com.squareup.picasso.FetchAction
com.twitter.sdk.android.core.models.Coordinates:
    public void <init>(java.lang.Double,java.lang.Double,java.lang.String)
    public java.lang.Double getLongitude()
    public java.lang.Double getLatitude()
    public final java.util.List coordinates
    public final java.lang.String type
    public static final int INDEX_LONGITUDE
    public static final int INDEX_LATITUDE
androidx.versionedparcelable.ParcelImpl:
    public void <init>(androidx.versionedparcelable.VersionedParcelable)
    public androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
com.google.zxing.qrcode.detector.Detector
androidx.recyclerview.R$id
com.twitter.sdk.android.core.internal.oauth.OAuth1aHeaders:
    public java.util.Map getOAuthEchoHeaders(com.twitter.sdk.android.core.TwitterAuthConfig,com.twitter.sdk.android.core.TwitterAuthToken,java.lang.String,java.lang.String,java.lang.String,java.util.Map)
    public static final java.lang.String HEADER_AUTH_SERVICE_PROVIDER
    public static final java.lang.String HEADER_AUTH_CREDENTIALS
com.google.zxing.oned.OneDimensionalCodeWriter:
    public final com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int)
com.google.zxing.oned.rss.DataCharacter
com.twitter.Extractor$Entity:
    public void <init>(java.util.regex.Matcher,com.twitter.Extractor$Entity$Type,int)
    public void <init>(java.util.regex.Matcher,com.twitter.Extractor$Entity$Type,int,int)
    public java.lang.Integer getStart()
    public java.lang.Integer getEnd()
    public java.lang.String getValue()
    public java.lang.String getListSlug()
    public com.twitter.Extractor$Entity$Type getType()
    public java.lang.String getDisplayURL()
    public void setDisplayURL(java.lang.String)
    public java.lang.String getExpandedURL()
    public void setExpandedURL(java.lang.String)
okhttp3.RequestBody:
    public static okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
kotlin.contracts.SimpleEffect
com.facebook.share.widget.MessageDialog$1
androidx.appcompat.app.AppCompatDialog
io.flutter.app.FlutterActivityDelegate$1$1
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache
kotlin.jvm.functions.Function6
io.flutter.view.AccessibilityBridge$SemanticsNode:
    private void log(java.lang.String,boolean)
bolts.Task$14
androidx.core.view.animation.PathInterpolatorApi14
kotlin.jvm.JvmPackageName
com.google.zxing.datamatrix.encoder.EncoderContext:
    public char getCurrent()
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo
io.flutter.plugins.deviceinfo.R$style
org.jetbrains.annotations.PropertyKey
androidx.fragment.app.FragmentActivity:
    public void supportFinishAfterTransition()
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void supportPostponeEnterTransition()
    public void supportStartPostponedEnterTransition()
    public java.lang.Object getLastCustomNonConfigurationInstance()
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public final void validateRequestPermissionsRequestCode(int)
    public void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    boolean mRequestedPermissionsFromFragment
    private static final java.lang.String TAG
    static final java.lang.String FRAGMENTS_TAG
    static final java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG
    static final java.lang.String ALLOCATED_REQUEST_INDICIES_TAG
    static final java.lang.String REQUEST_FRAGMENT_WHO_TAG
    static final int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
    static final int MSG_RESUME_PENDING
com.twitter.sdk.android.core.internal.AdvertisingInfoProvider$1
androidx.annotation.FractionRes
org.intellij.lang.annotations.JdkConstants$ListSelectionMode
zhuoyuan.li.fluttershareme.R$style
androidx.appcompat.widget.LinearLayoutCompat$DividerMode
com.google.zxing.datamatrix.decoder.DataBlock
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint:
    public static io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint createDefault()
androidx.fragment.app.ListFragment$1
kotlin.ArrayIntrinsicsKt
androidx.appcompat.view.ViewPropertyAnimatorCompatSet
okhttp3.HttpUrl$Builder:
    private okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean)
    private void removeAllCanonicalQueryParameters(java.lang.String)
    public okhttp3.HttpUrl$Builder username(java.lang.String)
    public okhttp3.HttpUrl$Builder encodedUsername(java.lang.String)
    public okhttp3.HttpUrl$Builder password(java.lang.String)
    public okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)
    public okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)
    public okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)
    public okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)
    public okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)
    public okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)
    public okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)
    public okhttp3.HttpUrl$Builder removePathSegment(int)
    public okhttp3.HttpUrl$Builder encodedPath(java.lang.String)
    public okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)
    public okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)
    public okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String)
    public okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String)
    public okhttp3.HttpUrl$Builder fragment(java.lang.String)
    public okhttp3.HttpUrl$Builder encodedFragment(java.lang.String)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser$1
androidx.core.app.NotificationManagerCompat$SideChannelManager
com.facebook.internal.BundleJSONConverter$5:
    public void setOnJSON(org.json.JSONObject,java.lang.String,java.lang.Object)
androidx.recyclerview.widget.SnapHelper$2
androidx.media.VolumeProviderCompatApi21$Delegate
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder
androidx.core.view.MenuItemCompat$1
androidx.media.R$color
com.twitter.sdk.android.core.internal.SessionMonitor$1:
    public void onActivityStarted(android.app.Activity)
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$4
com.facebook.internal.FileLruCache$StreamCloseCallback
com.facebook.FacebookGraphResponseException:
    public final com.facebook.GraphResponse getGraphResponse()
com.google.zxing.ResultPoint
kotlin.sequences.TakeWhileSequence$iterator$1
kotlin.jvm.internal.CollectionToArray
kotlin.internal.PureReifiable
androidx.media.R$id
kotlin.reflect.KProperty0$Getter
io.flutter.view.FlutterView$2
kotlin.text.StringsKt__StringsJVMKt
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface
com.google.zxing.oned.Code39Reader:
    public void <init>()
    public void <init>(boolean)
    public void <init>(boolean,boolean)
    private static int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[])
    private static int toNarrowWidePattern(int[])
    private static char patternToChar(int)
    private static java.lang.String decodeExtended(java.lang.CharSequence)
    public com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
    private final boolean usingCheckDigit
    private final boolean extendedMode
    private final java.lang.StringBuilder decodeRowResult
    private final int[] counters
    static final java.lang.String ALPHABET_STRING
    static final int ASTERISK_ENCODING
com.squareup.picasso.NetworkRequestHandler:
    static final int RETRY_COUNT
    private static final java.lang.String SCHEME_HTTP
    private static final java.lang.String SCHEME_HTTPS
androidx.appcompat.widget.Toolbar:
    private static boolean isCustomView(android.view.View)
    public void setTitleMargin(int,int,int,int)
    public boolean canShowOverflowMenu()
    public boolean isOverflowMenuShowPending()
    public boolean hideOverflowMenu()
    public void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)
    public void dismissPopupMenus()
    public boolean isTitleTruncated()
    public boolean hasExpandedActionView()
    public void inflateMenu(int)
    public void setContentInsetsAbsolute(int,int)
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    private static final java.lang.String TAG
com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget
com.facebook.internal.FileLruCache$3
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread
androidx.legacy.content.WakefulBroadcastReceiver
kotlin.jvm.internal.ShortCompanionObject
com.facebook.appevents.InternalAppEventsLogger:
    public static void setUserData(android.os.Bundle)
    public void logEventFromSE(java.lang.String)
androidx.core.content.pm.PackageInfoCompat
com.twitter.sdk.android.core.models.Configuration
com.google.zxing.client.result.ExpandedProductParsedResult
okhttp3.Cache$CacheResponseBody$1
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2
com.google.zxing.client.result.ParsedResultType
androidx.lifecycle.LiveData$AlwaysActiveObserver
androidx.core.app.ActivityManagerCompat
com.google.zxing.oned.UPCEANExtensionSupport
androidx.browser.R$layout
androidx.swiperefreshlayout.widget.CircularProgressDrawable$ProgressDrawableSize
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
kotlin.coroutines.experimental.CoroutineContext$Element
com.google.zxing.qrcode.decoder.DataMask$5
com.iyaffle.launchreview.R$attr
io.flutter.plugin.common.MethodCall:
    public boolean hasArgument(java.lang.String)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale
com.google.zxing.datamatrix.decoder.Version$1
kotlin.collections.GroupingKt__GroupingJVMKt
androidx.appcompat.widget.AppCompatHintHelper:
    private void <init>()
okhttp3.MediaType:
    public java.lang.String subtype()
    public java.nio.charset.Charset charset()
    private static final java.lang.String TOKEN
    private static final java.lang.String QUOTED
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4
com.facebook.internal.CollectionMapper$Collection
com.facebook.share.model.ShareOpenGraphValueContainer$Builder:
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putBoolean(java.lang.String,boolean)
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putBooleanArray(java.lang.String,boolean[])
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putDouble(java.lang.String,double)
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putDoubleArray(java.lang.String,double[])
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putInt(java.lang.String,int)
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putIntArray(java.lang.String,int[])
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putLong(java.lang.String,long)
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putLongArray(java.lang.String,long[])
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putObject(java.lang.String,com.facebook.share.model.ShareOpenGraphObject)
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putObjectArrayList(java.lang.String,java.util.ArrayList)
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putPhoto(java.lang.String,com.facebook.share.model.SharePhoto)
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putPhotoArrayList(java.lang.String,java.util.ArrayList)
    public com.facebook.share.model.ShareOpenGraphValueContainer$Builder putStringArrayList(java.lang.String,java.util.ArrayList)
    public synthetic bridge com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
com.iyaffle.launchreview.R$layout
com.twitter.sdk.android.core.internal.AdvertisingInfoStrategy
kotlin.coroutines.experimental.CombinedContext$toString$1
kotlin.coroutines.experimental.SafeContinuation
com.facebook.ShareGraphRequest
androidx.recyclerview.widget.RecyclerView$LayoutManager:
    public static int getChildMeasureSpec(int,int,int,boolean)
    public void assertInLayoutOrScroll(java.lang.String)
    public void setAutoMeasureEnabled(boolean)
    public final void setItemPrefetchEnabled(boolean)
    public final boolean isItemPrefetchEnabled()
    public void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    public void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    public void postOnAnimation(java.lang.Runnable)
    public void scrollToPosition(int)
    public void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
    public void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
    public void endAnimation(android.view.View)
    public void removeAllViews()
    public int getItemViewType(android.view.View)
    public void detachView(android.view.View)
    public void attachView(android.view.View)
    public void removeDetachedView(android.view.View)
    public void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
    public void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
    public int getPaddingStart()
    public int getPaddingEnd()
    public boolean isFocused()
    public boolean hasFocus()
    public int getItemCount()
    public void ignoreView(android.view.View)
    public void stopIgnoringView(android.view.View)
    public void measureChild(android.view.View,int,int)
    public boolean isMeasurementCacheEnabled()
    public void setMeasurementCacheEnabled(boolean)
    public void layoutDecorated(android.view.View,int,int,int,int)
    public void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
    public void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
    public void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int)
    public void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
    public void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
    void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
    void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    public void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent)
    void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    boolean performAccessibilityAction(int,android.os.Bundle)
    public boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)
    boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle)
    public boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle)
com.facebook.login.LoginStatusClient
androidx.recyclerview.R
com.facebook.share.internal.OpenGraphMessageDialogFeature
org.intellij.lang.annotations.Identifier
androidx.coordinatorlayout.widget.CoordinatorLayout$1
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation
kotlin.ranges.ULongProgression
androidx.customview.R$id
androidx.appcompat.widget.SwitchCompat$1
com.twitter.sdk.android.tweetui.SearchTimeline$SearchCallback
kotlin.reflect.KProperty$DefaultImpls
androidx.core.view.ViewCompat$FocusRelativeDirection
com.twitter.sdk.android.core.internal.network.OkHttpClientHelper:
    public void <init>()
    public static okhttp3.OkHttpClient getCustomOkHttpClient(okhttp3.OkHttpClient,com.twitter.sdk.android.core.GuestSessionProvider)
    public static okhttp3.OkHttpClient getCustomOkHttpClient(okhttp3.OkHttpClient,com.twitter.sdk.android.core.Session,com.twitter.sdk.android.core.TwitterAuthConfig)
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator
kotlin.collections.RingBuffer$iterator$1
kotlin.collections.ArraysKt___ArraysKt$withIndex$1
io.flutter.plugins.sharedpreferences.R$color
androidx.multidex.ZipUtil
androidx.appcompat.view.ActionMode$Callback
kotlin.jvm.functions.Function13
androidx.media.R
kotlin.jvm.internal.CharCompanionObject
com.facebook.share.ShareApi$4
com.facebook.internal.FragmentWrapper:
    public void <init>(androidx.fragment.app.Fragment)
    public void <init>(android.app.Fragment)
    public android.app.Fragment getNativeFragment()
    public androidx.fragment.app.Fragment getSupportFragment()
    private androidx.fragment.app.Fragment supportFragment
    private android.app.Fragment nativeFragment
kotlin.text.DelimitedRangesSequence
com.facebook.share.internal.LikeActionController
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7
kotlin.sequences.SequencesKt___SequencesKt$distinct$1
kotlin.text.CharsKt__CharJVMKt
kotlin.coroutines.ContinuationInterceptor
kotlin.jvm.Throws
androidx.appcompat.widget.PopupMenu$3
kotlin.jvm.internal.PropertyReference
com.google.gson.internal.bind.TypeAdapters:
    private void <init>()
androidx.versionedparcelable.VersionedParcel$1
kotlin.io.FilesKt__UtilsKt$copyRecursively$1
kotlin.jvm.internal.DoubleSpreadBuilder
com.facebook.internal.NativeProtocol$ProtocolVersionQueryResult:
    public com.facebook.internal.NativeProtocol$NativeAppInfo getAppInfo()
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl
kotlin.math.Constants
androidx.browser.customtabs.CustomTabsClient$1
org.intellij.lang.annotations.Language
kotlin.jvm.internal.ArrayDoubleIterator
com.facebook.share.model.ShareMedia$Builder:
    static void writeListTo(android.os.Parcel,int,java.util.List)
    public com.facebook.share.model.ShareMedia$Builder setParameter(java.lang.String,java.lang.String)
    public synthetic bridge com.facebook.share.model.ShareModelBuilder readFrom(com.facebook.share.model.ShareModel)
com.twitter.sdk.android.R$string
kotlin.ranges.RangesKt
androidx.versionedparcelable.NonParcelField
kotlin.random.FallbackThreadLocalRandom$implStorage$1
com.twitter.sdk.android.tweetui.TweetTimelineRecyclerViewAdapter$ReplaceTweetCallback
okhttp3.internal.connection.RealConnection:
    public okhttp3.Protocol protocol()
androidx.core.view.GravityCompat:
    public static void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
    public static void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
    public static void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
    private void <init>()
    public static final int RELATIVE_LAYOUT_DIRECTION
    public static final int START
    public static final int END
    public static final int RELATIVE_HORIZONTAL_GRAVITY_MASK
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    final void clearMutated()
    public final int getEnterFadeDuration()
    public final int getExitFadeDuration()
    public final boolean isStateful()
androidx.appcompat.app.AlertController$AlertParams$1
androidx.recyclerview.widget.ScrollbarHelper:
    private void <init>()
androidx.legacy.coreutils.R$style
com.facebook.share.model.AppGroupCreationContent$Builder
com.twitter.sdk.android.core.models.TwitterCollection
kotlin.reflect.KMutableProperty$Setter
com.facebook.core.R$drawable
kotlin.sequences.SequencesKt___SequencesKt$zip$1
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3
android.support.v4.media.MediaMetadataCompat$RatingKey
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    public androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
    public void onAnimationStart(android.view.View)
    public void onAnimationEnd(android.view.View)
    public void onAnimationCancel(android.view.View)
com.facebook.appevents.AnalyticsUserIDStore$2
io.flutter.plugins.connectivity.R$layout
com.twitter.sdk.android.tweetui.ToggleImageButton:
    public boolean isToggledOn()
kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls
kotlin.random.Random$Companion
androidx.swiperefreshlayout.R$dimen
kotlin.properties.ReadOnlyProperty
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser
kotlin.jvm.internal.ClassBasedDeclarationContainer
android.support.v4.media.MediaBrowserCompat$ConnectionCallback
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener
com.facebook.share.internal.LikeActionController$9
androidx.core.app.NotificationManagerCompat$NotifyTask
kotlin.jvm.internal.Ref$BooleanRef
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi26
io.flutter.embedding.android.FlutterSplashView:
    public void <init>(android.content.Context,android.util.AttributeSet)
kotlin.sequences.SequencesKt__SequencesKt$flatten$1
androidx.core.view.NestedScrollingParent:
    public abstract int getNestedScrollAxes()
androidx.fragment.app.ListFragment
androidx.coordinatorlayout.R$style
com.google.gson.internal.bind.util.ISO8601Utils:
    public void <init>()
    public static java.lang.String format(java.util.Date)
    public static java.lang.String format(java.util.Date,boolean)
    public static java.lang.String format(java.util.Date,boolean,java.util.TimeZone)
    private static void padInt(java.lang.StringBuilder,int,int)
    private static final java.lang.String UTC_ID
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$1
androidx.browser.R$dimen:
    private void <init>()
okio.RealBufferedSink$1
kotlin.io.FileAlreadyExistsException
androidx.core.provider.FontsContractCompat$4$1
kotlin.io.NoSuchFileException
com.facebook.appevents.internal.SourceApplicationInfo$Factory
androidx.viewpager.R$dimen
com.dxc.mtahackathon.R$plurals
androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior
io.flutter.app.FlutterApplication:
    public android.app.Activity getCurrentActivity()
    public void setCurrentActivity(android.app.Activity)
okhttp3.internal.http.HttpDate:
    private void <init>()
    public static final long MAX_DATE
com.twitter.sdk.android.tweetui.R$attr:
    private void <init>()
io.flutter.plugins.deviceinfo.BuildConfig
com.facebook.internal.Validate:
    public static void containsNoNullOrEmpty(java.util.Collection,java.lang.String)
    public static void runningOnUiThread()
    public static varargs void oneOf(java.lang.Object,java.lang.String,java.lang.Object[])
    public static boolean hasWiFiPermission(android.content.Context)
    public static boolean hasChangeWifiStatePermission(android.content.Context)
    public static boolean hasLocationPermission(android.content.Context)
    public static boolean hasBluetoothPermission(android.content.Context)
    public static boolean hasPermission(android.content.Context,java.lang.String)
    public static void checkCustomTabRedirectActivity(android.content.Context)
    public static void checkCustomTabRedirectActivity(android.content.Context,boolean)
    private static final java.lang.String NO_INTERNET_PERMISSION_REASON
    private static final java.lang.String FACEBOOK_ACTIVITY_NOT_FOUND_REASON
    private static final java.lang.String CUSTOM_TAB_REDIRECT_ACTIVITY_NOT_FOUND_REASON
    private static final java.lang.String CONTENT_PROVIDER_NOT_FOUND_REASON
    private static final java.lang.String CONTENT_PROVIDER_BASE
androidx.appcompat.widget.MenuPopupWindow:
    private static final java.lang.String TAG
org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
androidx.loader.content.ModernAsyncTask:
    public static void setDefaultExecutor(java.util.concurrent.Executor)
    public static void execute(java.lang.Runnable)
    public final androidx.loader.content.ModernAsyncTask$Status getStatus()
    public final java.lang.Object get()
    public final java.lang.Object get(long,java.util.concurrent.TimeUnit)
    public final varargs androidx.loader.content.ModernAsyncTask execute(java.lang.Object[])
    protected final varargs void publishProgress(java.lang.Object[])
    private static final java.lang.String LOG_TAG
    private static final int CORE_POOL_SIZE
    private static final int MAXIMUM_POOL_SIZE
    private static final int KEEP_ALIVE
    private static final int MESSAGE_POST_RESULT
    private static final int MESSAGE_POST_PROGRESS
bolts.Task$UnobservedExceptionHandler
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
kotlin.jvm.JvmOverloads
com.facebook.share.internal.LikeActionController$1
androidx.swiperefreshlayout.widget.CircleImageView
kotlin.ranges.UIntRange
io.flutter.plugins.urllauncher.MethodCallHandlerImpl:
    private static final java.lang.String TAG
androidx.appcompat.app.AppCompatDelegateImpl$4
androidx.swiperefreshlayout.R$attr
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder
kotlin.ranges.ClosedRange$DefaultImpls
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl
com.facebook.FacebookRequestError:
    public com.facebook.FacebookRequestError$Category getCategory()
    public java.lang.String getErrorRecoveryMessage()
    public java.lang.String getErrorUserMessage()
    public java.lang.String getErrorUserTitle()
    public org.json.JSONObject getRequestResultBody()
    public org.json.JSONObject getRequestResult()
    public java.lang.Object getBatchRequestResult()
    public java.net.HttpURLConnection getConnection()
    public static final int INVALID_ERROR_CODE
    public static final int INVALID_HTTP_STATUS_CODE
    private static final java.lang.String CODE_KEY
    private static final java.lang.String BODY_KEY
    private static final java.lang.String ERROR_KEY
    private static final java.lang.String ERROR_TYPE_FIELD_KEY
    private static final java.lang.String ERROR_CODE_FIELD_KEY
    private static final java.lang.String ERROR_MESSAGE_FIELD_KEY
    private static final java.lang.String ERROR_CODE_KEY
    private static final java.lang.String ERROR_SUB_CODE_KEY
    private static final java.lang.String ERROR_MSG_KEY
    private static final java.lang.String ERROR_REASON_KEY
    private static final java.lang.String ERROR_USER_TITLE_KEY
    private static final java.lang.String ERROR_USER_MSG_KEY
    private static final java.lang.String ERROR_IS_TRANSIENT_KEY
bolts.AppLinkNavigation
kotlin.contracts.ExperimentalContracts
com.google.gson.stream.JsonScope
kotlin.StandardKt__StandardKt
androidx.fragment.R$integer
com.facebook.share.internal.CameraEffectJSONUtility:
    public void <init>()
    public static com.facebook.share.model.CameraEffectArguments convertToCameraEffectArguments(org.json.JSONObject)
com.facebook.share.model.ShareMessengerURLActionButton:
    private void <init>(com.facebook.share.model.ShareMessengerURLActionButton$Builder)
    synthetic void <init>(com.facebook.share.model.ShareMessengerURLActionButton$Builder,com.facebook.share.model.ShareMessengerURLActionButton$1)
kotlin.math.MathKt__MathHKt
com.twitter.sdk.android.core.identity.SSOAuthHandler
zhuoyuan.li.fluttershareme.R$plurals
androidx.appcompat.view.menu.MenuPopup:
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public int getId()
kotlin.time.TimedValue
com.twitter.sdk.android.core.internal.AdvertisingInfoServiceStrategy$AdvertisingInterface
androidx.legacy.coreui.R$style
com.facebook.GraphRequest$GraphJSONArrayCallback
bolts.Task$5
androidx.core.graphics.drawable.DrawableCompat:
    public static void clearColorFilter(android.graphics.drawable.Drawable)
    public static android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
    public static boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
    private void <init>()
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sSetLayoutDirectionMethod
    private static boolean sSetLayoutDirectionMethodFetched
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1
kotlin.reflect.KMutableProperty
androidx.legacy.coreutils.R$styleable
androidx.viewpager.R$id
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8
okhttp3.Request$Builder:
    public okhttp3.Request$Builder url(java.lang.String)
    public okhttp3.Request$Builder url(java.net.URL)
    public okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
    public okhttp3.Request$Builder get()
    public okhttp3.Request$Builder head()
    public okhttp3.Request$Builder post(okhttp3.RequestBody)
    public okhttp3.Request$Builder delete(okhttp3.RequestBody)
    public okhttp3.Request$Builder delete()
    public okhttp3.Request$Builder put(okhttp3.RequestBody)
    public okhttp3.Request$Builder patch(okhttp3.RequestBody)
    public okhttp3.Request$Builder tag(java.lang.Object)
kotlin.collections.UArraysKt
com.twitter.sdk.android.core.internal.scribe.DefaultScribeClient:
    public void scribe(com.twitter.sdk.android.core.internal.scribe.EventNamespace,java.lang.String)
    private static final java.lang.String SCRIBE_URL
    private static final java.lang.String SCRIBE_PATH_VERSION
    private static final java.lang.String SCRIBE_PATH_TYPE
    private static final java.lang.String DEBUG_BUILD
com.iyaffle.launchreview.R$string
kotlin.jvm.internal.SpreadBuilder
com.facebook.appevents.AppEvent:
    private static final long serialVersionUID
com.facebook.share.internal.LikeContent$Builder
kotlin.UByte
androidx.media.AudioAttributesCompat$AttributeUsage
com.twitter.sdk.android.core.models.BindingValues:
    public boolean containsKey(java.lang.String)
com.twitter.sdk.android.tweetui.SearchTimeline$Builder
com.facebook.share.internal.VideoUploader$StartUploadWorkItem
androidx.recyclerview.widget.ItemTouchHelper$1
kotlin.annotation.Repeatable
androidx.viewpager.R$attr
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command
com.twitter.sdk.android.tweetcomposer.R$style:
    private void <init>()
com.google.zxing.multi.ByQuadrantReader
kotlin.collections.CollectionsKt__ReversedViewsKt
androidx.legacy.coreutils.R$layout
com.facebook.appevents.internal.Constants:
    public void <init>()
    public static final java.lang.String LOG_TIME_APP_EVENT_KEY
    public static final java.lang.String EVENT_NAME_EVENT_KEY
    public static final java.lang.String EVENT_NAME_MD5_EVENT_KEY
    public static final java.lang.String AA_TIME_SPENT_EVENT_NAME
    public static final java.lang.String AA_TIME_SPENT_SCREEN_PARAMETER_NAME
    public static final java.lang.String IAP_PRODUCT_ID
    public static final java.lang.String IAP_PURCHASE_TIME
    public static final java.lang.String IAP_PURCHASE_TOKEN
    public static final java.lang.String IAP_PRODUCT_TYPE
    public static final java.lang.String IAP_PRODUCT_TITLE
    public static final java.lang.String IAP_PRODUCT_DESCRIPTION
    public static final java.lang.String IAP_PACKAGE_NAME
    public static final java.lang.String IAP_SUBSCRIPTION_AUTORENEWING
    public static final java.lang.String IAP_SUBSCRIPTION_PERIOD
    public static final java.lang.String IAP_FREE_TRIAL_PERIOD
    public static final java.lang.String IAP_INTRO_PRICE_AMOUNT_MICROS
    public static final java.lang.String IAP_INTRO_PRICE_CYCLES
    public static final java.lang.String EVENT_PARAM_PRODUCT_ITEM_ID
    public static final java.lang.String EVENT_PARAM_PRODUCT_AVAILABILITY
    public static final java.lang.String EVENT_PARAM_PRODUCT_CONDITION
    public static final java.lang.String EVENT_PARAM_PRODUCT_DESCRIPTION
    public static final java.lang.String EVENT_PARAM_PRODUCT_IMAGE_LINK
    public static final java.lang.String EVENT_PARAM_PRODUCT_LINK
    public static final java.lang.String EVENT_PARAM_PRODUCT_TITLE
    public static final java.lang.String EVENT_PARAM_PRODUCT_GTIN
    public static final java.lang.String EVENT_PARAM_PRODUCT_MPN
    public static final java.lang.String EVENT_PARAM_PRODUCT_BRAND
    public static final java.lang.String EVENT_PARAM_PRODUCT_PRICE_AMOUNT
    public static final java.lang.String EVENT_PARAM_PRODUCT_PRICE_CURRENCY
com.twitter.sdk.android.R$layout
com.google.zxing.DecodeHintType
com.facebook.share.model.CameraEffectTextures:
    public java.lang.Object get(java.lang.String)
com.facebook.internal.FileLruCache$CopyingInputStream
com.twitter.sdk.android.core.models.MediaEntity$Size
androidx.appcompat.view.menu.ExpandedMenuView:
    public void initialize(androidx.appcompat.view.menu.MenuBuilder)
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2
androidx.lifecycle.Transformations$1
kotlin.UByteKt
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi26
androidx.core.util.TimeUtils:
    public static void formatDuration(long,java.lang.StringBuilder)
    private void <init>()
    public static final int HUNDRED_DAY_FIELD_LEN
    private static final int SECONDS_PER_MINUTE
    private static final int SECONDS_PER_HOUR
    private static final int SECONDS_PER_DAY
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1
androidx.legacy.coreutils.R$string
com.google.zxing.datamatrix.DataMatrixReader
androidx.recyclerview.widget.RecyclerView$6
io.flutter.plugins.connectivity.R$string
androidx.appcompat.widget.DecorContentParent
androidx.legacy.v4.R$attr
androidx.viewpager.R$style
androidx.core.widget.AutoScrollHelper:
    public boolean isEnabled()
    public androidx.core.widget.AutoScrollHelper setExclusive(boolean)
    public boolean isExclusive()
    public static final float RELATIVE_UNSPECIFIED
    public static final float NO_MAX
    public static final float NO_MIN
    public static final int EDGE_TYPE_INSIDE
    public static final int EDGE_TYPE_INSIDE_EXTEND
    public static final int EDGE_TYPE_OUTSIDE
    private static final int HORIZONTAL
    private static final int VERTICAL
    private static final int DEFAULT_EDGE_TYPE
    private static final int DEFAULT_MINIMUM_VELOCITY_DIPS
    private static final int DEFAULT_MAXIMUM_VELOCITY_DIPS
    private static final float DEFAULT_MAXIMUM_EDGE
    private static final float DEFAULT_RELATIVE_EDGE
    private static final float DEFAULT_RELATIVE_VELOCITY
    private static final int DEFAULT_RAMP_UP_DURATION
    private static final int DEFAULT_RAMP_DOWN_DURATION
com.google.zxing.oned.rss.expanded.ExpandedPair
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy
kotlin.time.AbstractDoubleClock
com.facebook.appevents.UserDataStore:
    static void setUserDataAndHash(android.os.Bundle)
    static void setUserDataAndHash(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    static void clear()
    static java.lang.String getHashedUserData()
    private static void updateHashUserData(android.os.Bundle)
    private static boolean maybeSHA256Hashed(java.lang.String)
    static synthetic java.lang.String access$300()
    static synthetic void access$400(android.os.Bundle)
    static synthetic java.util.concurrent.ConcurrentHashMap access$500()
    static synthetic void access$600(java.lang.String,java.lang.String)
    static synthetic java.util.concurrent.ConcurrentHashMap access$700()
    private static final java.lang.String USER_DATA_KEY
    private static final java.lang.String INTERNAL_USER_DATA_KEY
    private static final int MAX_NUM
    private static final java.lang.String DATA_SEPARATOR
    public static final java.lang.String EMAIL
    public static final java.lang.String FIRST_NAME
    public static final java.lang.String LAST_NAME
    public static final java.lang.String PHONE
    public static final java.lang.String DATE_OF_BIRTH
    public static final java.lang.String GENDER
    public static final java.lang.String CITY
    public static final java.lang.String STATE
    public static final java.lang.String ZIP
    public static final java.lang.String COUNTRY
androidx.media.MediaSessionManagerImplBase$RemoteUserInfoImplBase
androidx.media.MediaBrowserServiceCompat$Result
io.flutter.view.FlutterMain:
    public void <init>()
    public static void startInitialization(android.content.Context,io.flutter.view.FlutterMain$Settings)
    public static void ensureInitializationComplete(android.content.Context,java.lang.String[])
    public static void ensureInitializationCompleteAsync(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
    public static java.lang.String findAppBundlePath(android.content.Context)
    public static java.lang.String getLookupKeyForAsset(java.lang.String)
    public static java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
    public static void setIsRunningInRobolectricTest(boolean)
kotlin.io.FileTreeWalk$FileTreeWalkIterator
androidx.swiperefreshlayout.R$style
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt
kotlin.experimental.BitwiseOperationsKt
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate:
    void release()
    io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
    void onLowMemory()
    private static final java.lang.String TAG
android.support.v4.media.session.ParcelableVolumeInfo:
    public void <init>(int,int,int,int,int)
com.google.zxing.common.reedsolomon.ReedSolomonDecoder
com.twitter.sdk.android.tweetui.R$anim:
    private void <init>()
android.support.v4.media.MediaBrowserCompat
okio.RealBufferedSink:
    public okio.BufferedSink writeUtf8(java.lang.String,int,int)
    public okio.BufferedSink writeUtf8CodePoint(int)
    public okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
    public okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
    public okio.BufferedSink write(okio.Source,long)
    public okio.BufferedSink writeShortLe(int)
    public okio.BufferedSink writeIntLe(int)
    public okio.BufferedSink writeLong(long)
    public okio.BufferedSink writeLongLe(long)
    public okio.BufferedSink emit()
    public java.io.OutputStream outputStream()
com.facebook.share.internal.VideoUploader$FinishUploadWorkItem$1
com.squareup.picasso.MarkableInputStream:
    private static final int DEFAULT_BUFFER_SIZE
com.facebook.GraphRequestAsyncTask:
    public varargs void <init>(com.facebook.GraphRequest[])
    public void <init>(java.util.Collection)
    public varargs void <init>(java.net.HttpURLConnection,com.facebook.GraphRequest[])
    public void <init>(java.net.HttpURLConnection,java.util.Collection)
    protected final java.lang.Exception getException()
    protected final com.facebook.GraphRequestBatch getRequests()
okio.BufferedSink:
    public abstract okio.BufferedSink write(okio.Source,long)
    public abstract okio.BufferedSink writeUtf8(java.lang.String,int,int)
    public abstract okio.BufferedSink writeUtf8CodePoint(int)
    public abstract okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
    public abstract okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
    public abstract okio.BufferedSink writeShortLe(int)
    public abstract okio.BufferedSink writeIntLe(int)
    public abstract okio.BufferedSink writeLong(long)
    public abstract okio.BufferedSink writeLongLe(long)
    public abstract okio.BufferedSink emit()
    public abstract java.io.OutputStream outputStream()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1
kotlin.comparisons.ComparisonsKt__ComparisonsKt
com.facebook.internal.ImageDownloader$DownloadImageWorkItem
com.facebook.core.R$integer
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
com.facebook.share.model.ShareOpenGraphValueContainer:
    public boolean getBoolean(java.lang.String,boolean)
    public boolean[] getBooleanArray(java.lang.String)
    public double getDouble(java.lang.String,double)
    public double[] getDoubleArray(java.lang.String)
    public int getInt(java.lang.String,int)
    public int[] getIntArray(java.lang.String)
    public long getLong(java.lang.String,long)
    public long[] getLongArray(java.lang.String)
    public com.facebook.share.model.ShareOpenGraphObject getObject(java.lang.String)
    public java.util.ArrayList getObjectArrayList(java.lang.String)
    public com.facebook.share.model.SharePhoto getPhoto(java.lang.String)
    public java.util.ArrayList getPhotoArrayList(java.lang.String)
    public java.util.ArrayList getStringArrayList(java.lang.String)
com.facebook.internal.CollectionMapper$OnMapperCompleteListener
kotlin.PublishedApi
androidx.core.widget.TextViewCompat$AutoSizeTextType
androidx.annotation.NavigationRes
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi24
androidx.appcompat.app.AlertController$5
androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    private void setBooleanProperty(int,boolean)
    private boolean getBooleanProperty(int)
    public java.lang.Object getInfo()
    public void setSource(android.view.View)
    public void setSource(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
    public int getWindowId()
    public int getChildCount()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
    public void addChild(android.view.View)
    public void addChild(android.view.View,int)
    public boolean removeChild(android.view.View)
    public boolean removeChild(android.view.View,int)
    public void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public boolean performAction(int)
    public boolean performAction(int,android.os.Bundle)
    public void setMovementGranularities(int)
    public int getMovementGranularities()
    public java.util.List findAccessibilityNodeInfosByText(java.lang.String)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent()
    public void setParent(android.view.View)
    public void setParent(android.view.View,int)
    public void setBoundsInParent(android.graphics.Rect)
    public void setBoundsInScreen(android.graphics.Rect)
    public void setCheckable(boolean)
    public void setChecked(boolean)
    public void setFocusable(boolean)
    public void setFocused(boolean)
    public boolean isVisibleToUser()
    public void setVisibleToUser(boolean)
    public boolean isAccessibilityFocused()
    public void setAccessibilityFocused(boolean)
    public void setSelected(boolean)
    public void setClickable(boolean)
    public void setLongClickable(boolean)
    public void setEnabled(boolean)
    public void setPassword(boolean)
    public boolean isImportantForAccessibility()
    public void setImportantForAccessibility(boolean)
    public void setPackageName(java.lang.CharSequence)
    public void setText(java.lang.CharSequence)
    public void setContentDescription(java.lang.CharSequence)
    public void recycle()
    public void setViewIdResourceName(java.lang.String)
    public int getLiveRegion()
    public void setLiveRegion(int)
    public int getDrawingOrder()
    public void setDrawingOrder(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo()
    public void setCollectionInfo(java.lang.Object)
    public void setCollectionItemInfo(java.lang.Object)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo()
    public void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
    public java.util.List getActionList()
    public void setContentInvalid(boolean)
    public boolean isContentInvalid()
    public boolean isContextClickable()
    public void setContextClickable(boolean)
    public java.lang.CharSequence getHintText()
    public void setHintText(java.lang.CharSequence)
    public void setError(java.lang.CharSequence)
    public java.lang.CharSequence getError()
    public void setLabelFor(android.view.View)
    public void setLabelFor(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor()
    public void setLabeledBy(android.view.View)
    public void setLabeledBy(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy()
    public boolean canOpenPopup()
    public void setCanOpenPopup(boolean)
    public java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
    public android.os.Bundle getExtras()
    public int getInputType()
    public void setInputType(int)
    public void setMaxTextLength(int)
    public int getMaxTextLength()
    public void setTextSelection(int,int)
    public int getTextSelectionStart()
    public int getTextSelectionEnd()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()
    public void setTraversalBefore(android.view.View)
    public void setTraversalBefore(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()
    public void setTraversalAfter(android.view.View)
    public void setTraversalAfter(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()
    public boolean isDismissable()
    public void setDismissable(boolean)
    public boolean isEditable()
    public void setEditable(boolean)
    public boolean isMultiLine()
    public void setMultiLine(boolean)
    public java.lang.CharSequence getTooltipText()
    public void setTooltipText(java.lang.CharSequence)
    public void setPaneTitle(java.lang.CharSequence)
    public java.lang.CharSequence getPaneTitle()
    public boolean isScreenReaderFocusable()
    public void setScreenReaderFocusable(boolean)
    public boolean isShowingHintText()
    public void setShowingHintText(boolean)
    public boolean isHeading()
    public void setHeading(boolean)
    public boolean refresh()
    public java.lang.CharSequence getRoleDescription()
    public void setRoleDescription(java.lang.CharSequence)
    private static final java.lang.String ROLE_DESCRIPTION_KEY
    private static final java.lang.String PANE_TITLE_KEY
    private static final java.lang.String TOOLTIP_TEXT_KEY
    private static final java.lang.String HINT_TEXT_KEY
    private static final java.lang.String BOOLEAN_PROPERTY_KEY
    private static final int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE
    private static final int BOOLEAN_PROPERTY_IS_HEADING
    private static final int BOOLEAN_PROPERTY_IS_SHOWING_HINT
    public static final int ACTION_FOCUS
    public static final int ACTION_CLEAR_FOCUS
    public static final int ACTION_SELECT
    public static final int ACTION_CLEAR_SELECTION
    public static final int ACTION_CLICK
    public static final int ACTION_LONG_CLICK
    public static final int ACTION_ACCESSIBILITY_FOCUS
    public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS
    public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_NEXT_HTML_ELEMENT
    public static final int ACTION_PREVIOUS_HTML_ELEMENT
    public static final int ACTION_SCROLL_FORWARD
    public static final int ACTION_SCROLL_BACKWARD
    public static final int ACTION_COPY
    public static final int ACTION_PASTE
    public static final int ACTION_CUT
    public static final int ACTION_SET_SELECTION
    public static final int ACTION_EXPAND
    public static final int ACTION_COLLAPSE
    public static final int ACTION_DISMISS
    public static final int ACTION_SET_TEXT
    public static final java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    public static final java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING
    public static final java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_START_INT
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_END_INT
    public static final java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    public static final java.lang.String ACTION_ARGUMENT_ROW_INT
    public static final java.lang.String ACTION_ARGUMENT_COLUMN_INT
    public static final java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y
    public static final int FOCUS_INPUT
    public static final int FOCUS_ACCESSIBILITY
    public static final int MOVEMENT_GRANULARITY_CHARACTER
    public static final int MOVEMENT_GRANULARITY_WORD
    public static final int MOVEMENT_GRANULARITY_LINE
    public static final int MOVEMENT_GRANULARITY_PARAGRAPH
    public static final int MOVEMENT_GRANULARITY_PAGE
androidx.appcompat.view.menu.MenuView:
    public abstract void initialize(androidx.appcompat.view.menu.MenuBuilder)
    public abstract int getWindowAnimations()
androidx.appcompat.widget.SuggestionsAdapter:
    public int getQueryRefinement()
    public void close()
    private static final boolean DBG
    private static final java.lang.String LOG_TAG
    private static final int QUERY_LIMIT
    static final int REFINE_NONE
    static final int REFINE_BY_ENTRY
    static final int REFINE_ALL
    static final int INVALID_INDEX
com.google.zxing.pdf417.PDF417Common
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar
kotlin.text.DelimitedRangesSequence$iterator$1
com.twitter.sdk.android.tweetui.SearchTimeline
kotlin.collections.BooleanIterator
kotlin.UseExperimental
com.twitter.sdk.android.tweetui.UserTimeline$Builder
com.twitter.sdk.android.core.models.BindingValuesAdapter:
    private static final java.lang.String STRING_TYPE
    private static final java.lang.String IMAGE_TYPE
    private static final java.lang.String USER_TYPE
    private static final java.lang.String BOOLEAN_TYPE
    private static final java.lang.String TYPE_MEMBER
    private static final java.lang.String TYPE_VALUE_MEMBER
    private static final java.lang.String IMAGE_VALUE_MEMBER
    private static final java.lang.String USER_VALUE_MEMBER
    private static final java.lang.String BOOLEAN_MEMBER
com.twitter.sdk.android.tweetui.internal.SpanClickHandler$1
com.facebook.internal.instrument.crashreport.CrashHandler:
    public void endApplication()
    private static final int MAX_CRASH_REPORT_NUM
com.twitter.sdk.android.tweetcomposer.R$attr
com.facebook.appevents.aam.MetadataMatcher:
    private static final int MAX_INDICATOR_LENGTH
kotlin.coroutines.jvm.internal.ModuleNameRetriever
com.facebook.GraphRequest$1:
    void <init>(com.facebook.GraphRequest$GraphJSONObjectCallback)
    public void onCompleted(com.facebook.GraphResponse)
    final synthetic com.facebook.GraphRequest$GraphJSONObjectCallback val$callback
com.google.gson.internal.$Gson$Preconditions:
    private void <init>()
androidx.core.view.WindowInsetsCompat:
    public void <init>(androidx.core.view.WindowInsetsCompat)
    public boolean hasSystemWindowInsets()
    public boolean hasInsets()
    public boolean isRound()
    public androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
    public androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)
    public int getStableInsetTop()
    public int getStableInsetLeft()
    public int getStableInsetRight()
    public int getStableInsetBottom()
    public boolean hasStableInsets()
    public androidx.core.view.WindowInsetsCompat consumeStableInsets()
    public androidx.core.view.DisplayCutoutCompat getDisplayCutout()
    public androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.widget.TooltipPopup:
    private static final java.lang.String TAG
androidx.appcompat.app.AppCompatActivity
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
com.twitter.sdk.android.core.internal.scribe.ScribeItem:
    public static com.twitter.sdk.android.core.internal.scribe.ScribeItem fromUser(com.twitter.sdk.android.core.models.User)
    public static com.twitter.sdk.android.core.internal.scribe.ScribeItem fromMessage(java.lang.String)
    public static final int TYPE_TWEET
    public static final int TYPE_USER
    public static final int TYPE_MESSAGE
androidx.recyclerview.widget.SnapHelper$1
androidx.recyclerview.widget.ViewInfoStore$InfoRecord
android.support.v4.media.session.MediaControllerCompat
kotlin.sequences.TransformingSequence$iterator$1
androidx.appcompat.widget.AppCompatRatingBar
com.facebook.core.R
androidx.legacy.coreutils.R$dimen
android.support.customtabs.IPostMessageService$Stub
kotlin.time.DurationUnitKt$WhenMappings
androidx.print.PrintHelper$OnPrintFinishCallback
androidx.core.text.BidiFormatter
androidx.core.view.inputmethod.InputConnectionCompat$1
com.google.zxing.MultiFormatWriter:
    public com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int)
androidx.loader.content.AsyncTaskLoader:
    public void setUpdateThrottle(long)
    public void waitForLoader()
    static final java.lang.String TAG
    static final boolean DEBUG
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry$1
com.facebook.share.internal.LikeDialog$NativeHandler
androidx.recyclerview.widget.DiffUtil$Snake
android.support.v4.media.session.PlaybackStateCompatApi22:
    public static java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)
    private void <init>()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1
okhttp3.Cache$1
bolts.MeasurementEvent
androidx.recyclerview.R$drawable
androidx.fragment.app.FragmentTabHost$DummyTabFactory
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback
kotlin.collections.ArraysKt___ArraysKt$withIndex$9
androidx.recyclerview.R$color
androidx.fragment.R$id
kotlin.coroutines.Continuation
android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy
kotlin.system.TimingKt
androidx.recyclerview.widget.ItemTouchHelper
com.google.zxing.oned.rss.RSSUtils
okio.Timeout:
    public final okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
    public final void waitUntilNotified(java.lang.Object)
android.support.v4.media.session.MediaSessionCompat$3
io.flutter.plugins.deviceinfo.R
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
kotlin.jvm.internal.ArrayCharIterator
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18$1
androidx.lifecycle.ComputableLiveData$1
androidx.drawerlayout.widget.DrawerLayout$1
com.example.connectivity.R$string
kotlin.text.SystemProperties
androidx.core.app.NotificationCompat$Builder
com.twitter.sdk.android.tweetui.PlayerController:
    void <init>(android.view.View,com.twitter.sdk.android.tweetui.internal.VideoView,com.twitter.sdk.android.tweetui.internal.VideoControlView,android.widget.ProgressBar,android.widget.TextView,com.twitter.sdk.android.tweetui.internal.SwipeToDismissTouchListener$Callback)
    private static final java.lang.String TAG
io.flutter.plugin.platform.PlatformPlugin:
    public static final int DEFAULT_SYSTEM_UI
com.google.gson.stream.JsonReader:
    private static final long MIN_INCOMPLETE_INTEGER
    private static final int PEEKED_NONE
    private static final int PEEKED_BEGIN_OBJECT
    private static final int PEEKED_END_OBJECT
    private static final int PEEKED_BEGIN_ARRAY
    private static final int PEEKED_END_ARRAY
    private static final int PEEKED_TRUE
    private static final int PEEKED_FALSE
    private static final int PEEKED_NULL
    private static final int PEEKED_SINGLE_QUOTED
    private static final int PEEKED_DOUBLE_QUOTED
    private static final int PEEKED_UNQUOTED
    private static final int PEEKED_BUFFERED
    private static final int PEEKED_SINGLE_QUOTED_NAME
    private static final int PEEKED_DOUBLE_QUOTED_NAME
    private static final int PEEKED_UNQUOTED_NAME
    private static final int PEEKED_LONG
    private static final int PEEKED_NUMBER
    private static final int PEEKED_EOF
    private static final int NUMBER_CHAR_NONE
    private static final int NUMBER_CHAR_SIGN
    private static final int NUMBER_CHAR_DIGIT
    private static final int NUMBER_CHAR_DECIMAL
    private static final int NUMBER_CHAR_FRACTION_DIGIT
    private static final int NUMBER_CHAR_EXP_E
    private static final int NUMBER_CHAR_EXP_SIGN
    private static final int NUMBER_CHAR_EXP_DIGIT
kotlin.collections.AbstractList$ListIteratorImpl
com.google.zxing.datamatrix.decoder.Decoder
kotlin.text.MatchResult$DefaultImpls
androidx.core.graphics.TypefaceCompatApi21Impl:
    private static final java.lang.String TAG
com.twitter.Autolink$LinkTextModifier
androidx.appcompat.widget.AppCompatDrawableManager:
    private void removeDelegate(java.lang.String,androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate)
    public synchronized void onConfigurationChanged(android.content.Context)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    private static final java.lang.String SKIP_DRAWABLE_TAG
    private static final java.lang.String PLATFORM_VD_CLAZZ
androidx.recyclerview.widget.DividerItemDecoration
android.support.customtabs.ICustomTabsCallback$Stub
androidx.swiperefreshlayout.widget.CircularProgressDrawable
com.google.zxing.aztec.decoder.Decoder
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask
com.twitter.sdk.android.tweetui.LinkClickListener
com.facebook.share.model.AppGroupCreationContent$1
kotlin.properties.ReadWriteProperty
androidx.core.view.ViewCompat:
    private static android.graphics.Rect getEmptyTempRect()
    public static boolean canScrollHorizontally(android.view.View,int)
    public static boolean canScrollVertically(android.view.View,int)
    public static int getOverScrollMode(android.view.View)
    public static void setOverScrollMode(android.view.View,int)
    public static void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public static varargs void setAutofillHints(android.view.View,java.lang.String[])
    public static int getImportantForAutofill(android.view.View)
    public static void setImportantForAutofill(android.view.View,int)
    public static boolean isImportantForAutofill(android.view.View)
    public static boolean hasAccessibilityDelegate(android.view.View)
    public static void setHasTransientState(android.view.View,boolean)
    public static void postInvalidateOnAnimation(android.view.View,int,int,int,int)
    public static boolean isImportantForAccessibility(android.view.View)
    public static boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
    public static androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    public static float getAlpha(android.view.View)
    public static void setLayerType(android.view.View,int,android.graphics.Paint)
    public static int getLayerType(android.view.View)
    public static int getLabelFor(android.view.View)
    public static void setLabelFor(android.view.View,int)
    public static void setLayerPaint(android.view.View,android.graphics.Paint)
    public static void setLayoutDirection(android.view.View,int)
    public static android.view.ViewParent getParentForAccessibility(android.view.View)
    public static android.view.View requireViewById(android.view.View,int)
    public static boolean isOpaque(android.view.View)
    public static int resolveSizeAndState(int,int,int)
    public static int getMeasuredWidthAndState(android.view.View)
    public static int getMeasuredHeightAndState(android.view.View)
    public static int getMeasuredState(android.view.View)
    public static int combineMeasuredStates(int,int)
    public static int getAccessibilityLiveRegion(android.view.View)
    public static void setAccessibilityLiveRegion(android.view.View,int)
    public static int getPaddingStart(android.view.View)
    public static int getPaddingEnd(android.view.View)
    public static void setPaddingRelative(android.view.View,int,int,int,int)
    private static void bindTempDetach()
    public static void dispatchStartTemporaryDetach(android.view.View)
    public static void dispatchFinishTemporaryDetach(android.view.View)
    public static float getTranslationX(android.view.View)
    public static float getTranslationY(android.view.View)
    public static android.graphics.Matrix getMatrix(android.view.View)
    public static androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)
    public static void setTranslationX(android.view.View,float)
    public static void setTranslationY(android.view.View,float)
    public static void setAlpha(android.view.View,float)
    public static void setX(android.view.View,float)
    public static void setY(android.view.View,float)
    public static void setRotation(android.view.View,float)
    public static void setRotationX(android.view.View,float)
    public static void setRotationY(android.view.View,float)
    public static void setScaleX(android.view.View,float)
    public static void setScaleY(android.view.View,float)
    public static float getPivotX(android.view.View)
    public static void setPivotX(android.view.View,float)
    public static float getPivotY(android.view.View)
    public static void setPivotY(android.view.View,float)
    public static float getRotation(android.view.View)
    public static float getRotationX(android.view.View)
    public static float getRotationY(android.view.View)
    public static float getScaleX(android.view.View)
    public static float getScaleY(android.view.View)
    public static float getX(android.view.View)
    public static float getY(android.view.View)
    public static void setElevation(android.view.View,float)
    public static float getElevation(android.view.View)
    public static void setTranslationZ(android.view.View,float)
    public static float getTranslationZ(android.view.View)
    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
    public static boolean getFitsSystemWindows(android.view.View)
    public static void setFitsSystemWindows(android.view.View,boolean)
    public static void jumpDrawablesToCurrentState(android.view.View)
    public static void setSaveFromParentEnabled(android.view.View,boolean)
    public static void setActivated(android.view.View,boolean)
    public static boolean isPaddingRelative(android.view.View)
    public static void setNestedScrollingEnabled(android.view.View,boolean)
    public static boolean isNestedScrollingEnabled(android.view.View)
    public static boolean startNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View)
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
    public static boolean startNestedScroll(android.view.View,int,int)
    public static void stopNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View,int)
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)
    public static boolean dispatchNestedFling(android.view.View,float,float,boolean)
    public static boolean dispatchNestedPreFling(android.view.View,float,float)
    public static boolean isInLayout(android.view.View)
    public static boolean isLaidOut(android.view.View)
    public static boolean isLayoutDirectionResolved(android.view.View)
    public static float getZ(android.view.View)
    public static void setZ(android.view.View,float)
    public static void offsetTopAndBottom(android.view.View,int)
    private static void compatOffsetTopAndBottom(android.view.View,int)
    public static void offsetLeftAndRight(android.view.View,int)
    private static void compatOffsetLeftAndRight(android.view.View,int)
    private static void tickleInvalidationFlag(android.view.View)
    public static void setClipBounds(android.view.View,android.graphics.Rect)
    public static android.graphics.Rect getClipBounds(android.view.View)
    public static boolean hasOnClickListeners(android.view.View)
    public static void setScrollIndicators(android.view.View,int)
    public static void setScrollIndicators(android.view.View,int,int)
    public static int getScrollIndicators(android.view.View)
    public static void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public static boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
    public static void cancelDragAndDrop(android.view.View)
    public static void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
    public static int getNextClusterForwardId(android.view.View)
    public static void setNextClusterForwardId(android.view.View,int)
    public static boolean isKeyboardNavigationCluster(android.view.View)
    public static void setKeyboardNavigationCluster(android.view.View,boolean)
    public static boolean isFocusedByDefault(android.view.View)
    public static void setFocusedByDefault(android.view.View,boolean)
    public static android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
    public static void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
    public static boolean restoreDefaultFocus(android.view.View)
    public static boolean hasExplicitFocusable(android.view.View)
    public static int generateViewId()
    public static void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    public static void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    protected void <init>()
    private static final java.lang.String TAG
    public static final int OVER_SCROLL_ALWAYS
    public static final int OVER_SCROLL_IF_CONTENT_SCROLLS
    public static final int OVER_SCROLL_NEVER
    public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_YES
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    public static final int ACCESSIBILITY_LIVE_REGION_NONE
    public static final int ACCESSIBILITY_LIVE_REGION_POLITE
    public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    public static final int LAYER_TYPE_NONE
    public static final int LAYER_TYPE_SOFTWARE
    public static final int LAYER_TYPE_HARDWARE
    public static final int LAYOUT_DIRECTION_LTR
    public static final int LAYOUT_DIRECTION_RTL
    public static final int LAYOUT_DIRECTION_INHERIT
    public static final int LAYOUT_DIRECTION_LOCALE
    public static final int MEASURED_SIZE_MASK
    public static final int MEASURED_STATE_MASK
    public static final int MEASURED_HEIGHT_STATE_SHIFT
    public static final int MEASURED_STATE_TOO_SMALL
    public static final int SCROLL_AXIS_NONE
    public static final int SCROLL_AXIS_HORIZONTAL
    public static final int SCROLL_AXIS_VERTICAL
    public static final int TYPE_TOUCH
    public static final int TYPE_NON_TOUCH
    public static final int SCROLL_INDICATOR_TOP
    public static final int SCROLL_INDICATOR_BOTTOM
    public static final int SCROLL_INDICATOR_LEFT
    public static final int SCROLL_INDICATOR_RIGHT
    public static final int SCROLL_INDICATOR_START
    public static final int SCROLL_INDICATOR_END
    private static java.lang.reflect.Method sDispatchStartTemporaryDetach
    private static java.lang.reflect.Method sDispatchFinishTemporaryDetach
    private static boolean sTempDetachBound
    private static java.lang.reflect.Method sChildrenDrawingOrderMethod
    private static java.lang.reflect.Field sAccessibilityDelegateField
    private static java.lang.ThreadLocal sThreadLocalRect
io.flutter.embedding.engine.FlutterEnginePluginRegistry:
    public void add(java.util.Set)
    public io.flutter.embedding.engine.plugins.FlutterPlugin get(java.lang.Class)
    public void attachToService(android.app.Service,androidx.lifecycle.Lifecycle,boolean)
    public void onMoveToForeground()
    public void onMoveToBackground()
    public void attachToBroadcastReceiver(android.content.BroadcastReceiver,androidx.lifecycle.Lifecycle)
    public void attachToContentProvider(android.content.ContentProvider,androidx.lifecycle.Lifecycle)
    private static final java.lang.String TAG
okhttp3.internal.tls.CertificateChainCleaner:
    public static varargs okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[])
androidx.browser.customtabs.CustomTabsService$Relation
io.flutter.embedding.engine.FlutterEnginePluginRegistry$FlutterEngineBroadcastReceiverPluginBinding:
    void <init>(android.content.BroadcastReceiver)
    public android.content.BroadcastReceiver getBroadcastReceiver()
    private final android.content.BroadcastReceiver broadcastReceiver
androidx.fragment.app.FragmentManagerImpl$FragmentTag:
    private void <init>()
    public static final int Fragment_id
    public static final int Fragment_name
    public static final int Fragment_tag
androidx.core.os.CancellationSignal:
    private void waitForCancelFinishedLocked()
    public void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)
com.google.gson.JsonElement:
    abstract com.google.gson.JsonElement deepCopy()
    public com.google.gson.JsonNull getAsJsonNull()
    public boolean getAsBoolean()
    java.lang.Boolean getAsBooleanWrapper()
    public java.lang.Number getAsNumber()
    public double getAsDouble()
    public float getAsFloat()
    public long getAsLong()
    public int getAsInt()
    public byte getAsByte()
    public char getAsCharacter()
    public java.math.BigDecimal getAsBigDecimal()
    public java.math.BigInteger getAsBigInteger()
    public short getAsShort()
androidx.swiperefreshlayout.R$drawable
androidx.core.app.NotificationCompat$BadgeIconType
com.google.gson.GsonBuilder:
    public com.google.gson.GsonBuilder setVersion(double)
    public varargs com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[])
    public com.google.gson.GsonBuilder generateNonExecutableJson()
    public com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation()
    public com.google.gson.GsonBuilder serializeNulls()
    public com.google.gson.GsonBuilder enableComplexMapKeySerialization()
    public com.google.gson.GsonBuilder disableInnerClassSerialization()
    public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)
    public com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)
    public varargs com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])
    public com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)
    public com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)
    public com.google.gson.GsonBuilder setPrettyPrinting()
    public com.google.gson.GsonBuilder setLenient()
    public com.google.gson.GsonBuilder disableHtmlEscaping()
    public com.google.gson.GsonBuilder setDateFormat(java.lang.String)
    public com.google.gson.GsonBuilder setDateFormat(int)
    public com.google.gson.GsonBuilder setDateFormat(int,int)
    public com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)
    public com.google.gson.GsonBuilder serializeSpecialFloatingPointValues()
android.support.v4.media.MediaBrowserCompatApi21
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem
io.flutter.embedding.engine.loader.ResourceCleaner:
    private static final java.lang.String TAG
    private static final long DELAY_MS
com.twitter.Extractor:
    private void removeOverlappingEntities(java.util.List)
    private java.util.List extractHashtagsWithIndices(java.lang.String,boolean)
    public java.util.List extractEntitiesWithIndices(java.lang.String)
    public java.util.List extractMentionedScreennames(java.lang.String)
    public java.util.List extractMentionedScreennamesWithIndices(java.lang.String)
    public java.util.List extractMentionsOrListsWithIndices(java.lang.String)
    public java.lang.String extractReplyScreenname(java.lang.String)
    public java.util.List extractURLs(java.lang.String)
    public java.util.List extractHashtags(java.lang.String)
    public java.util.List extractHashtagsWithIndices(java.lang.String)
    public java.util.List extractCashtags(java.lang.String)
    public java.util.List extractCashtagsWithIndices(java.lang.String)
    public void setExtractURLWithoutProtocol(boolean)
    public boolean isExtractURLWithoutProtocol()
    public void modifyIndicesFromUnicodeToUTF16(java.lang.String,java.util.List)
    public void modifyIndicesFromUTF16ToToUnicode(java.lang.String,java.util.List)
androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    public void <init>()
    void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public void setTargetPosition(int)
    public android.graphics.PointF computeScrollVectorForPosition(int)
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public boolean isPendingInitialRun()
    public int getTargetPosition()
    void onAnimation(int,int)
    public int getChildPosition(android.view.View)
    public int getChildCount()
    public android.view.View findViewByPosition(int)
    public void instantScrollToPosition(int)
    protected void normalize(android.graphics.PointF)
    protected abstract void onStart()
    protected abstract void onStop()
    protected abstract void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    protected abstract void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    private int mTargetPosition
    private androidx.recyclerview.widget.RecyclerView mRecyclerView
    private androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager
    private boolean mPendingInitialRun
    private boolean mRunning
    private android.view.View mTargetView
    private final androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction
    private boolean mStarted
org.jetbrains.annotations.NotNull
com.facebook.share.R$bool
com.twitter.sdk.android.core.internal.TwitterSessionVerifier$AccountServiceProvider:
    public com.twitter.sdk.android.core.services.AccountService getAccountService(com.twitter.sdk.android.core.TwitterSession)
androidx.appcompat.widget.Toolbar$LayoutParams:
    public void <init>(int,int,int)
    public void <init>(int)
    static final int CUSTOM
    static final int SYSTEM
    static final int EXPANDED
okhttp3.Request:
    public java.util.List headers(java.lang.String)
    public java.lang.Object tag()
com.facebook.internal.FacebookWebFallbackDialog:
    private static final int OS_BACK_BUTTON_RESPONSE_TIMEOUT_MILLISECONDS
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    public static com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1
androidx.recyclerview.widget.DefaultItemAnimator$3
androidx.recyclerview.widget.AsyncListDiffer
android.support.v4.os.IResultReceiver$Stub:
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_send
kotlin.text.RegexOption
android.support.v4.app.INotificationSideChannel$Stub$Proxy
androidx.lifecycle.MediatorLiveData
kotlin.ULongKt
com.google.zxing.client.result.URIResultParser
kotlin.jvm.internal.ArrayFloatIterator
kotlin.jvm.internal.Lambda
com.twitter.sdk.android.tweetcomposer.ScribeConstants:
    private void <init>()
    static final java.lang.String SCRIBE_TFW_CLIENT
    static final java.lang.String SCRIBE_PAGE
    static final java.lang.String SCRIBE_SECTION
    static final java.lang.String SCRIBE_COMPONENT
    static final java.lang.String SCRIBE_IMPRESSION_ELEMENT
    static final java.lang.String SCRIBE_TWEET_ELEMENT
    static final java.lang.String SCRIBE_CANCEL_ELEMENT
    static final java.lang.String SCRIBE_IMPRESSION_ACTION
    static final java.lang.String SCRIBE_CLICK_ACTION
com.facebook.AccessToken:
    public static boolean isDataAccessActive()
    public static void refreshCurrentAccessTokenAsync()
    public static void refreshCurrentAccessTokenAsync(com.facebook.AccessToken$AccessTokenRefreshCallback)
    public static void createFromNativeLinkingIntent(android.content.Intent,java.lang.String,com.facebook.AccessToken$AccessTokenCreationCallback)
    static com.facebook.AccessToken createFromRefresh(com.facebook.AccessToken,android.os.Bundle)
    private static com.facebook.AccessToken createFromBundle(java.util.List,android.os.Bundle,com.facebook.AccessTokenSource,java.util.Date,java.lang.String)
    static synthetic com.facebook.AccessToken access$000(java.util.List,android.os.Bundle,com.facebook.AccessTokenSource,java.util.Date,java.lang.String)
    public boolean isDataAccessExpired()
    public static final java.lang.String ACCESS_TOKEN_KEY
    public static final java.lang.String EXPIRES_IN_KEY
    public static final java.lang.String USER_ID_KEY
    public static final java.lang.String DATA_ACCESS_EXPIRATION_TIME
    private static final int CURRENT_JSON_FORMAT
    private static final java.lang.String VERSION_KEY
    private static final java.lang.String EXPIRES_AT_KEY
    private static final java.lang.String PERMISSIONS_KEY
    private static final java.lang.String DECLINED_PERMISSIONS_KEY
    private static final java.lang.String EXPIRED_PERMISSIONS_KEY
    private static final java.lang.String TOKEN_KEY
    private static final java.lang.String SOURCE_KEY
    private static final java.lang.String LAST_REFRESH_KEY
    private static final java.lang.String APPLICATION_ID_KEY
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy
androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior
io.flutter.embedding.engine.dart.DartMessenger:
    public int getPendingChannelResponseCount()
    private static final java.lang.String TAG
com.google.zxing.common.detector.MathUtils
androidx.loader.R$string
androidx.appcompat.app.WindowDecorActionBar
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$9
androidx.core.os.LocaleListCompat
com.twitter.sdk.android.tweetui.BaseTweetView$2
androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    static void registerListeningView(android.view.View)
    static void unregisterListeningView(android.view.View)
kotlin.contracts.ReturnsNotNull
androidx.core.provider.FontsContractCompat$4$9
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    public void <init>(int,int,float)
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
    public void <init>(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)
androidx.annotation.AnyRes
com.facebook.share.widget.AppInviteDialog$NativeHandler$1
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsKt
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4
kotlin.jvm.internal.Ref$ByteRef
android.support.v4.app.INotificationSideChannel$Stub
androidx.core.app.JobIntentService$JobServiceEngineImpl
androidx.media.MediaBrowserServiceCompat$1
androidx.vectordrawable.R$attr
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    void invalidateAnchorPositionInfo()
android.support.customtabs.ICustomTabsService$Stub$Proxy
androidx.core.app.BundleCompat:
    private void <init>()
kotlin.text.StringsKt__StringBuilderKt
com.twitter.sdk.android.core.internal.scribe.DisabledEventsStrategy:
    public void deleteAllEvents()
    public void scheduleTimeBasedRollOverIfNeeded()
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask
com.facebook.share.R$color
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$3
androidx.loader.content.CursorLoader:
    public void <init>(android.content.Context)
    public android.net.Uri getUri()
    public void setUri(android.net.Uri)
    public java.lang.String[] getProjection()
    public void setProjection(java.lang.String[])
    public java.lang.String getSelection()
    public void setSelection(java.lang.String)
    public java.lang.String[] getSelectionArgs()
    public void setSelectionArgs(java.lang.String[])
    public java.lang.String getSortOrder()
    public void setSortOrder(java.lang.String)
androidx.core.app.NavUtils
com.facebook.share.model.ShareCameraEffectContent:
    private void <init>(com.facebook.share.model.ShareCameraEffectContent$Builder)
    synthetic void <init>(com.facebook.share.model.ShareCameraEffectContent$Builder,com.facebook.share.model.ShareCameraEffectContent$1)
androidx.core.graphics.ColorUtils:
    private void <init>()
    public static android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)
    public static double calculateLuminance(int)
    public static double calculateContrast(int,int)
    public static int calculateMinimumAlpha(int,int,float)
    public static void RGBToHSL(int,int,int,float[])
    public static void colorToHSL(int,float[])
    public static int HSLToColor(float[])
    public static void colorToLAB(int,double[])
    public static void RGBToLAB(int,int,int,double[])
    public static void colorToXYZ(int,double[])
    public static void RGBToXYZ(int,int,int,double[])
    public static void XYZToLAB(double,double,double,double[])
    public static void LABToXYZ(double,double,double,double[])
    public static int XYZToColor(double,double,double)
    public static int LABToColor(double,double,double)
    public static double distanceEuclidean(double[],double[])
    private static float constrain(float,float,float)
    private static int constrain(int,int,int)
    private static double pivotXyzComponent(double)
    public static int blendARGB(int,int,float)
    public static void blendHSL(float[],float[],float,float[])
    public static void blendLAB(double[],double[],double,double[])
    static float circularInterpolate(float,float,float)
    private static double[] getTempDouble3Array()
    private static final double XYZ_WHITE_REFERENCE_X
    private static final double XYZ_WHITE_REFERENCE_Y
    private static final double XYZ_WHITE_REFERENCE_Z
    private static final double XYZ_EPSILON
    private static final double XYZ_KAPPA
    private static final int MIN_ALPHA_SEARCH_MAX_ITERATIONS
    private static final int MIN_ALPHA_SEARCH_PRECISION
okhttp3.internal.framed.Spdy3:
    public okhttp3.Protocol getProtocol()
    static final int TYPE_DATA
    static final int TYPE_SYN_STREAM
    static final int TYPE_SYN_REPLY
    static final int TYPE_RST_STREAM
    static final int TYPE_SETTINGS
    static final int TYPE_PING
    static final int TYPE_GOAWAY
    static final int TYPE_HEADERS
    static final int TYPE_WINDOW_UPDATE
    static final int FLAG_FIN
    static final int FLAG_UNIDIRECTIONAL
    static final int VERSION
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener
com.facebook.share.ShareApi$5$1
androidx.coordinatorlayout.widget.DirectedAcyclicGraph
androidx.media.R$attr
io.flutter.view.FlutterView$1
androidx.core.content.res.ResourcesCompat:
    public static android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
    public static int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.graphics.Typeface getFont(android.content.Context,int)
    public static void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
    private void <init>()
    private static final java.lang.String TAG
org.jetbrains.annotations.Contract
androidx.browser.R$string
com.google.zxing.oned.UPCEReader:
    public void <init>()
    private static void determineNumSysAndCheckDigit(java.lang.StringBuilder,int)
    protected int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
    protected int[] decodeEnd(com.google.zxing.common.BitArray,int)
    protected boolean checkChecksum(java.lang.String)
    com.google.zxing.BarcodeFormat getBarcodeFormat()
    private final int[] decodeMiddleCounters
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21
androidx.arch.core.executor.TaskExecutor:
    public void executeOnMainThread(java.lang.Runnable)
com.facebook.GraphResponse:
    public final org.json.JSONArray getJSONArray()
    public final java.net.HttpURLConnection getConnection()
    public com.facebook.GraphRequest getRequest()
    public java.lang.String getRawResponse()
    public com.facebook.GraphRequest getRequestForPagedResults(com.facebook.GraphResponse$PagingDirection)
    public static final java.lang.String NON_JSON_RESPONSE_PROPERTY
    public static final java.lang.String SUCCESS_KEY
    private static final java.lang.String CODE_KEY
    private static final java.lang.String BODY_KEY
    private static final java.lang.String RESPONSE_LOG_TAG
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper
androidx.core.graphics.PathSegment
com.google.zxing.oned.CodaBarReader:
    public void <init>()
    private void validatePattern(int)
    private void setCounters(com.google.zxing.common.BitArray)
    private void counterAppend(int)
    private int findStartPattern()
    private int toNarrowWidePattern(int)
    public com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
    private final java.lang.StringBuilder decodeRowResult
    private int[] counters
    private int counterLength
    private static final float MAX_ACCEPTABLE
    private static final float PADDING
    private static final java.lang.String ALPHABET_STRING
    private static final int MIN_CHARACTER_LENGTH
kotlin.UnsignedKt
com.facebook.appevents.AppEvent$SerializationProxyV2:
    private static final long serialVersionUID
zhuoyuan.li.fluttershareme.R$dimen
okhttp3.internal.http.RealInterceptorChain:
    public okhttp3.Connection connection()
androidx.core.graphics.drawable.RoundedBitmapDrawable
kotlin.SafePublicationLazyImpl
kotlin.time.DurationUnitKt__DurationUnitJvmKt
com.squareup.picasso.RemoteViewsAction$AppWidgetAction
com.facebook.share.internal.DeviceShareDialogFragment:
    public static final java.lang.String TAG
    private static final java.lang.String DEVICE_SHARE_ENDPOINT
    private static final java.lang.String REQUEST_STATE_KEY
    private static final java.lang.String EXTRA_ERROR
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda
androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent
androidx.media.MediaBrowserServiceCompatApi21
kotlin.text.StringsKt__RegexExtensionsJVMKt
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State
com.squareup.picasso.Utils$BitmapHoneycombMR1:
    private void <init>()
com.dxc.mtahackathon.R$attr
com.google.zxing.client.result.TelParsedResult
androidx.recyclerview.widget.PagerSnapHelper
com.twitter.sdk.android.core.identity.TwitterAuthClient$CallbackWrapper
com.example.connectivity.R$layout
com.twitter.sdk.android.core.models.ModelUtils:
    private void <init>()
    public static java.util.Map getSafeMap(java.util.Map)
androidx.core.database.sqlite.SQLiteCursorCompat
com.google.zxing.datamatrix.detector.Detector
io.flutter.plugins.packageinfo.R$layout
kotlin.coroutines.experimental.CoroutineContext
io.flutter.plugins.packageinfo.R$drawable
androidx.fragment.app.ListFragment$2
android.support.v4.media.MediaBrowserCompat$CustomActionCallback:
    public void <init>()
kotlin.jvm.internal.markers.KMappedMarker
androidx.legacy.v4.R$dimen
io.flutter.embedding.android.FlutterView$RenderMode
kotlin.collections.ReversedList
com.facebook.RequestProgress:
    long getProgress()
    long getMaxProgress()
com.facebook.share.widget.CreateAppGroupDialog$WebHandler
androidx.appcompat.app.AppCompatDialogFragment
com.facebook.share.model.GameRequestContent$Builder
com.facebook.internal.BundleJSONConverter$4:
    public void setOnJSON(org.json.JSONObject,java.lang.String,java.lang.Object)
com.google.zxing.client.result.ISBNResultParser
com.facebook.internal.FetchedAppGateKeepersManager:
    private static final java.lang.String APP_GATEKEEPERS_PREFS_STORE
    private static final java.lang.String APP_GATEKEEPERS_PREFS_KEY_FORMAT
    private static final java.lang.String APP_PLATFORM
    private static final java.lang.String APPLICATION_GATEKEEPER_EDGE
    private static final java.lang.String APPLICATION_GATEKEEPER_FIELD
    private static final java.lang.String APPLICATION_GRAPH_DATA
    private static final java.lang.String APPLICATION_FIELDS
    private static final java.lang.String APPLICATION_PLATFORM
    private static final java.lang.String APPLICATION_SDK_VERSION
    private static final long APPLICATION_GATEKEEPER_CACHE_TIMEOUT
androidx.core.view.ViewPropertyAnimatorListener
kotlin.ranges.LongProgression
com.dxc.mtahackathon.R$dimen
com.facebook.share.model.AppGroupCreationContent
com.twitter.sdk.android.tweetui.FilterTimelineDelegate
com.facebook.share.internal.VideoUploader$FinishUploadWorkItem
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder
com.facebook.share.widget.AppInviteDialog$WebFallbackHandler
com.appleeducate.getversion.R$color
androidx.core.net.TrafficStatsCompat
com.twitter.sdk.android.core.TwitterApiClient:
    public void <init>(okhttp3.OkHttpClient)
    public void <init>(com.twitter.sdk.android.core.TwitterSession,okhttp3.OkHttpClient)
    public com.twitter.sdk.android.core.services.SearchService getSearchService()
    public com.twitter.sdk.android.core.services.ListService getListService()
    public com.twitter.sdk.android.core.services.CollectionService getCollectionService()
    public com.twitter.sdk.android.core.services.ConfigurationService getConfigurationService()
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind
com.facebook.share.internal.VideoUploader$UploadWorkItemBase$2
com.twitter.sdk.android.tweetui.BaseTweetView
androidx.appcompat.widget.ToolbarWidgetWrapper$2
kotlin.ranges.LongRange$Companion
kotlin.ranges.IntProgression$Companion
com.dxc.mtahackathon.R$anim
kotlin.text.StringsKt___StringsKt$withIndex$1
kotlin.text.StringsKt
com.twitter.sdk.android.tweetui.TweetTimelineListAdapter$Builder
kotlin.annotation.MustBeDocumented
androidx.core.app.NotificationCompat$Action$Extender
kotlin.reflect.KFunction$DefaultImpls
com.squareup.picasso.Picasso$CleanupThread:
    void shutdown()
kotlin.ranges.ULongRange
com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder:
    private void <init>()
    private static final int TEXT_COMPACTION
    private static final int BYTE_COMPACTION
    private static final int NUMERIC_COMPACTION
    private static final int SUBMODE_ALPHA
    private static final int SUBMODE_LOWER
    private static final int SUBMODE_MIXED
    private static final int SUBMODE_PUNCTUATION
    private static final int LATCH_TO_TEXT
    private static final int LATCH_TO_BYTE_PADDED
    private static final int LATCH_TO_NUMERIC
    private static final int SHIFT_TO_BYTE
    private static final int LATCH_TO_BYTE
    private static final int ECI_USER_DEFINED
    private static final int ECI_GENERAL_PURPOSE
    private static final int ECI_CHARSET
com.squareup.picasso.PicassoExecutorService:
    private static final int DEFAULT_THREAD_COUNT
io.flutter.plugin.common.BinaryCodec
com.twitter.sdk.android.tweetcomposer.R$drawable
android.support.v4.media.MediaMetadataCompat$BitmapKey
kotlin.reflect.KTypeParameter
com.twitter.Autolink
kotlin.jvm.functions.Function5
kotlin.text.StringsKt__StringsKt
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
bolts.Task$15
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    void setFlags(int,int)
kotlin.coroutines.experimental.SequenceBuilderKt
android.support.v4.media.session.MediaControllerCompat$Callback:
    public void onSessionReady()
    public void onCaptioningEnabledChanged(boolean)
    public void onRepeatModeChanged(int)
    public void onShuffleModeChanged(int)
    public android.support.v4.media.session.IMediaControllerCallback getIControllerCallback()
    void setHandler(android.os.Handler)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
androidx.appcompat.view.menu.BaseMenuPresenter:
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public boolean flagActionItems()
    public int getId()
    public void setId(int)
    private int mId
androidx.annotation.ColorLong
com.facebook.share.internal.VideoUploader
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi24
com.twitter.sdk.android.core.internal.TwitterApiConstants$Errors
kotlin.KotlinVersion
kotlin.Result
okhttp3.internal.platform.Platform:
    static java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)
    public java.lang.String getPrefix()
    public javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
    public static final int INFO
    public static final int WARN
androidx.appcompat.widget.SwitchCompat
androidx.browser.customtabs.CustomTabsService$1
io.flutter.view.FlutterNativeView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,boolean)
    public static java.lang.String getObservatoryUri()
    private void attach(io.flutter.view.FlutterNativeView,boolean)
    static synthetic io.flutter.view.FlutterView access$000(io.flutter.view.FlutterNativeView)
    static synthetic io.flutter.app.FlutterPluginRegistry access$200(io.flutter.view.FlutterNativeView)
    public void detachFromFlutterView()
    public void destroy()
    public io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
    public io.flutter.app.FlutterPluginRegistry getPluginRegistry()
    public void attachViewAndActivity(io.flutter.view.FlutterView,android.app.Activity)
    public boolean isAttached()
    public void assertAttached()
    public void runFromBundle(io.flutter.view.FlutterRunArguments)
    public boolean isApplicationRunning()
    public void send(java.lang.String,java.nio.ByteBuffer)
    public void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
    public void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
    io.flutter.embedding.engine.FlutterJNI getFlutterJNI()
    private final io.flutter.app.FlutterPluginRegistry mPluginRegistry
    private final io.flutter.embedding.engine.dart.DartExecutor dartExecutor
    private io.flutter.view.FlutterView mFlutterView
    private final io.flutter.embedding.engine.FlutterJNI mFlutterJNI
    private final android.content.Context mContext
    private boolean applicationIsRunning
    private final io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
    private static final java.lang.String TAG
androidx.appcompat.view.StandaloneActionMode
io.flutter.plugin.common.PluginRegistry
kotlin.text.StringsKt___StringsKt
com.google.zxing.qrcode.detector.FinderPatternFinder
com.facebook.internal.NativeProtocol:
    public void <init>()
com.twitter.sdk.android.core.internal.scribe.QueueFile$1
com.twitter.sdk.android.core.internal.scribe.ScribeFilesSender$1
retrofit2.http.HeaderMap
com.facebook.appevents.AppEventQueue:
    void <init>()
androidx.appcompat.widget.DrawableUtils:
    public static final android.graphics.Rect INSETS_NONE
    private static java.lang.Class sInsetsClazz
androidx.core.app.ComponentActivity:
    private androidx.collection.SimpleArrayMap mExtraDataMap
com.facebook.share.internal.ShareInternalUtility$2:
    final synthetic int val$requestCode
retrofit2.http.Body
com.twitter.sdk.android.core.AuthTokenAdapter
com.facebook.devicerequests.internal.DeviceRequestsHelper:
    public void <init>()
com.facebook.appevents.aam.MetadataIndexer:
    public void <init>()
com.facebook.GraphRequest$4:
    final synthetic com.facebook.GraphRequest this$0
com.twitter.sdk.android.core.internal.CommonUtils
com.google.gson.internal.ConstructorConstructor$14:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    public void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
com.twitter.sdk.android.core.internal.persistence.PreferenceStoreStrategy
com.twitter.sdk.android.tweetui.TweetRepository$2
com.twitter.Regex:
    public static final java.util.regex.Pattern VALID_HASHTAG
    public static final java.util.regex.Pattern INVALID_HASHTAG_MATCH_END
    public static final java.util.regex.Pattern RTL_CHARACTERS
    public static final java.util.regex.Pattern VALID_MENTION_OR_LIST
    public static final java.util.regex.Pattern VALID_REPLY
    public static final java.util.regex.Pattern INVALID_MENTION_MATCH_END
    public static final java.util.regex.Pattern VALID_CASHTAG
    public static final java.util.regex.Pattern VALID_DOMAIN
com.facebook.appevents.SessionEventsState:
    private final int MAX_ACCUMULATED_LOG_EVENTS
io.flutter.embedding.engine.FlutterEnginePluginRegistry$DefaultFlutterAssets:
    final io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
com.twitter.sdk.android.core.internal.scribe.EnabledScribeStrategy
com.google.gson.internal.ConstructorConstructor$4:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding:
    private final io.flutter.embedding.engine.FlutterEngine flutterEngine
    private final io.flutter.view.TextureRegistry textureRegistry
    private final io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry
    private final io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
androidx.recyclerview.widget.OrientationHelper$2:
    public int getDecoratedMeasurementInOther(android.view.View)
    public int getEndPadding()
    public int getModeInOther()
com.twitter.sdk.android.core.internal.TwitterSessionVerifier
com.facebook.internal.FetchedAppSettingsManager:
    private static boolean isUnityInit
com.twitter.sdk.android.core.internal.scribe.FileRollOverManager
com.squareup.picasso.Dispatcher$DispatcherHandler$1:
    final synthetic com.squareup.picasso.Dispatcher$DispatcherHandler this$0
com.facebook.UserSettingsManager:
    void <init>()
com.facebook.appevents.codeless.internal.UnityReflection:
    public void <init>()
io.flutter.plugins.urllauncher.WebViewActivity$2:
    final synthetic io.flutter.plugins.urllauncher.WebViewActivity this$0
com.google.zxing.aztec.encoder.AztecCode:
    private boolean compact
    private int size
    private int layers
    private int codeWords
okhttp3.internal.cache.CacheInterceptor$2:
    final synthetic okhttp3.internal.cache.CacheInterceptor this$0
com.facebook.appevents.codeless.internal.ViewHierarchy:
    public void <init>()
com.facebook.appevents.internal.InAppPurchaseActivityLifecycleTracker$2$1:
    final synthetic com.facebook.appevents.internal.InAppPurchaseActivityLifecycleTracker$2 this$0
androidx.appcompat.graphics.drawable.DrawableContainer:
    private int mLastIndex
com.twitter.sdk.android.core.internal.SessionMonitor
com.twitter.sdk.android.core.internal.scribe.EventsStrategy
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    private static final java.lang.String LOGTAG
com.twitter.sdk.android.tweetui.TweetUi:
    private void setUpScribeClient()
    public java.lang.String getVersion()
    com.twitter.sdk.android.core.SessionManager sessionManager
    com.twitter.sdk.android.core.GuestSessionProvider guestSessionProvider
    android.content.Context context
androidx.cardview.widget.CardViewApi17Impl$1:
    final synthetic androidx.cardview.widget.CardViewApi17Impl this$0
androidx.arch.core.executor.ArchTaskExecutor:
    private static final java.util.concurrent.Executor sMainThreadExecutor
    private static final java.util.concurrent.Executor sIOThreadExecutor
com.twitter.sdk.android.core.TwitterCore$1
com.google.gson.internal.LinkedTreeMap$KeySet$1:
    final synthetic com.google.gson.internal.LinkedTreeMap$KeySet this$1
com.facebook.FacebookException$1:
    final synthetic com.facebook.FacebookException this$0
io.flutter.embedding.android.DrawableSplashScreen$1:
    final synthetic io.flutter.embedding.android.DrawableSplashScreen this$0
com.twitter.sdk.android.core.internal.IdManager
com.twitter.sdk.android.core.internal.scribe.QueueFile
com.twitter.sdk.android.core.internal.scribe.QueueFile$ElementInputStream
com.twitter.sdk.android.core.internal.ExecutorUtils
com.twitter.sdk.android.core.internal.scribe.ScribeConfig
com.twitter.sdk.android.core.TwitterApiException:
    private final com.twitter.sdk.android.core.TwitterRateLimit twitterRateLimit
    private final int code
    private final retrofit2.Response response
com.facebook.appevents.codeless.RCTCodelessLoggingEventListener$AutoLoggingOnTouchListener$1:
    final synthetic com.facebook.appevents.codeless.RCTCodelessLoggingEventListener$AutoLoggingOnTouchListener this$0
com.google.gson.stream.JsonWriter:
    public final void setHtmlSafe(boolean)
    public final boolean isHtmlSafe()
okhttp3.CipherSuite:
    public static final okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
    public static final okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
    public static final okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
    public static final okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
    public static final okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
    public static final okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
    public static final okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
    public static final okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
    public static final okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
    public static final okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
    public static final okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
    public static final okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
    public static final okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
    public static final okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
    public static final okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
    public static final okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
    public static final okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
    public static final okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
    public static final okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
    public static final okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
    public static final okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
    public static final okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
    public static final okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
    public static final okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
    public static final okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
    public static final okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
    public static final okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
    public static final okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
    public static final okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
    public static final okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
    public static final okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
    public static final okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
    public static final okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
    public static final okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
    public static final okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
    public static final okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
    public static final okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
    public static final okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
    public static final okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
    public static final okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
    public static final okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
    public static final okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
    public static final okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    public static final okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
    public static final okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
    public static final okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    public static final okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
    public static final okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    final synthetic com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0
androidx.recyclerview.widget.RecyclerView$Recycler:
    void updateViewCacheSize()
    public java.util.List getScrapList()
    public int convertPreLayoutPositionToPostLayout(int)
    androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long)
    void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
    void quickRecycleScrapView(android.view.View)
    void scrapView(android.view.View)
    void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    android.view.View getScrapViewAt(int)
    void clearScrap()
    void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
    void markKnownViewsInvalid()
    void clearOldPositions()
    void markItemDecorInsetsDirty()
    java.util.ArrayList mChangedScrap
okhttp3.internal.framed.FramedStream$FramedDataSink:
    static final synthetic boolean $assertionsDisabled
androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    private boolean mCreatingLoader
androidx.appcompat.widget.ActionMenuView:
    private boolean mReserveOverflow
com.google.zxing.oned.Code93Reader:
    private static final char[] ALPHABET
    private static final int ASTERISK_ENCODING
androidx.recyclerview.widget.ViewInfoStore
retrofit2.http.Url
com.google.gson.FieldAttributes:
    private final java.lang.reflect.Field field
com.facebook.appevents.internal.SessionLogger:
    void <init>()
com.facebook.FacebookSdk:
    private static com.facebook.internal.LockOnGetVariable cacheDir
com.google.gson.internal.ConstructorConstructor$3:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
com.twitter.sdk.android.core.internal.ActivityLifecycleManager
com.twitter.sdk.android.core.internal.scribe.TwitterCoreScribeClientHolder
androidx.recyclerview.widget.RecyclerView$ViewHolder:
    void clearOldPosition()
    void saveOldPosition()
    public final int getAdapterPosition()
    public final int getOldPosition()
    public final long getItemId()
    boolean isScrap()
    void unScrap()
    boolean wasReturnedFromScrap()
    void clearReturnedFromScrapFlag()
    boolean isInvalid()
    boolean needsUpdate()
    boolean isBound()
    boolean hasAnyOfTheFlags(int)
    boolean isAdapterPositionUnknown()
    void setFlags(int,int)
    void addFlags(int)
    java.util.List getUnmodifiedPayloads()
    public java.lang.String toString()
    public final void setIsRecyclable(boolean)
    public final boolean isRecyclable()
    public final android.view.View itemView
    java.lang.ref.WeakReference mNestedRecyclerView
    int mPosition
    int mOldPosition
    long mItemId
    int mPreLayoutPosition
    androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder
    androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder
    int mFlags
    java.util.List mPayloads
    java.util.List mUnmodifiedPayloads
    private int mIsRecyclableCount
    androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer
    boolean mInChangeScrap
    int mPendingAccessibilityState
    androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView
android.support.v4.os.ResultReceiver:
    final boolean mLocal
androidx.appcompat.widget.ActionBarContextView:
    private int mCloseItemLayout
androidx.fragment.app.FragmentHostCallback:
    private final int mWindowAnimations
androidx.core.content.res.GrowingArrayUtils:
    private void <init>()
    static final synthetic boolean $assertionsDisabled
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    final synthetic androidx.appcompat.widget.AppCompatSpinner val$this$0
com.twitter.sdk.android.core.internal.scribe.ScribeEvent$Transform
com.facebook.appevents.codeless.RCTCodelessLoggingEventListener:
    public void <init>()
    private static final java.lang.String TAG
com.squareup.picasso.Cache:
    public static final com.squareup.picasso.Cache NONE
com.twitter.sdk.android.core.internal.ExecutorUtils$2
com.google.zxing.qrcode.decoder.Version:
    private final int[] alignmentPatternCenters
    private static final int[] VERSION_DECODE_INFO
com.twitter.sdk.android.core.models.TweetEntities:
    public final java.util.List urls
    public final java.util.List userMentions
    public final java.util.List media
    public final java.util.List hashtags
    public final java.util.List symbols
okhttp3.internal.framed.Hpack$Writer:
    int headerTableSizeSetting
androidx.recyclerview.widget.OrientationHelper:
    public void onLayoutComplete()
    public int getTotalSpaceChange()
    public abstract int getDecoratedMeasurementInOther(android.view.View)
    public abstract int getEndPadding()
    public abstract int getModeInOther()
com.facebook.AccessTokenManager$2:
    final synthetic com.facebook.AccessTokenManager this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager:
    private void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
    private void repositionToWrapContentIfNecessary()
    private void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    private boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    private void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean)
    private void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)
    private int updateSpecWithExtra(int,int,int)
    private void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
    private void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
    private androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int)
    private androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int)
    private void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState)
    private void appendViewToAllSpans(android.view.View)
    private void prependViewToAllSpans(android.view.View)
    private androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState)
    private int calculateScrollDirectionForPosition(int)
    private int findFirstReferenceChildPosition(int)
    private int findLastReferenceChildPosition(int)
    public void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
    public void setMeasuredDimension(android.graphics.Rect,int,int)
    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    void updateMeasureSpecs(int)
    public void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
    boolean areAllEndsEqual()
    boolean areAllStartsEqual()
    private int mSizePerSpan
    private int mFullSizeSpec
androidx.recyclerview.widget.RecyclerView$State:
    void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter)
    public boolean willRunPredictiveAnimations()
    int mPreviousLayoutItemCount
    int mDeletedInvisibleItemCountSincePreviousLayout
    boolean mStructureChanged
    boolean mTrackOldChangeHolders
    boolean mRunSimpleAnimations
    int mFocusedItemPosition
    long mFocusedItemId
    int mFocusedSubChildId
com.twitter.sdk.android.core.models.Tweet:
    public final java.lang.String inReplyToUserIdStr
com.google.gson.Gson$2:
    final synthetic com.google.gson.Gson this$0
okhttp3.ConnectionPool:
    static final synthetic boolean $assertionsDisabled
com.twitter.sdk.android.core.internal.scribe.SyndicationClientEvent
com.google.gson.internal.ConstructorConstructor$1:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
com.twitter.sdk.android.core.internal.scribe.EventsFilesManager$1
com.twitter.sdk.android.core.internal.scribe.EventsManager
androidx.fragment.app.BackStackRecord:
    boolean mAllowAddToBackStack
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
com.twitter.sdk.android.core.Session:
    public long getId()
com.facebook.appevents.internal.InAppPurchaseEventManager:
    void <init>()
    private static final java.lang.String TAG
androidx.fragment.app.FragmentTransitionCompat21$2:
    final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.recyclerview.widget.ViewBoundsCheck:
    boolean isViewWithinBoundFlags(android.view.View,int)
androidx.core.provider.SelfDestructiveThread$3:
    final synthetic androidx.core.provider.SelfDestructiveThread this$0
androidx.fragment.app.FragmentTransitionImpl$3:
    final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
com.google.gson.internal.ConstructorConstructor$2:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
retrofit2.OkHttpCall:
    public retrofit2.Response execute()
okhttp3.MultipartBody:
    private final okhttp3.MediaType originalType
    public static final okhttp3.MediaType ALTERNATIVE
    public static final okhttp3.MediaType DIGEST
    public static final okhttp3.MediaType PARALLEL
com.twitter.sdk.android.core.PersistedSessionManager
com.facebook.GraphRequest$6:
    final synthetic com.facebook.GraphRequest this$0
com.twitter.sdk.android.core.models.SafeListAdapter$1:
    final synthetic com.twitter.sdk.android.core.models.SafeListAdapter this$0
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    final synthetic androidx.appcompat.widget.ActionMenuPresenter val$this$0
androidx.recyclerview.widget.RecyclerView$LayoutParams:
    public boolean isViewInvalid()
com.twitter.sdk.android.tweetcomposer.TweetComposer:
    private void setUpScribeClient()
    public java.lang.String getVersion()
    android.content.Context context
com.facebook.appevents.AnalyticsUserIDStore:
    void <init>()
com.twitter.sdk.android.tweetui.LoggingCallback
com.twitter.sdk.android.core.internal.scribe.QueueFile$Element
com.twitter.sdk.android.core.internal.ExecutorUtils$1
io.flutter.embedding.engine.loader.FlutterLoader:
    private java.lang.String vmSnapshotData
    private java.lang.String isolateSnapshotData
com.twitter.sdk.android.core.Result:
    public final retrofit2.Response response
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    void assignCoordinateFromPadding()
    boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State)
    public void assignFromViewAndKeepVisibleRect(android.view.View,int)
    public void assignFromView(android.view.View,int)
androidx.media.AudioAttributesCompat:
    private static final int[] SDK_USAGES
retrofit2.ParameterHandler$RelativeUrl
com.squareup.picasso.Picasso$CleanupThread$1:
    final synthetic com.squareup.picasso.Picasso$CleanupThread this$0
com.twitter.sdk.android.core.SessionManager:
    public abstract com.twitter.sdk.android.core.Session getSession(long)
okhttp3.internal.framed.FramedStream:
    private final java.util.List requestHeaders
    static final synthetic boolean $assertionsDisabled
com.twitter.sdk.android.core.internal.persistence.FileStoreImpl
androidx.recyclerview.widget.GapWorker$Task:
    public void clear()
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback
com.twitter.sdk.android.core.internal.scribe.EventTransform
com.twitter.sdk.android.core.internal.scribe.QueueFile$ElementReader
androidx.core.graphics.TypefaceCompatBaseImpl$1:
    final synthetic androidx.core.graphics.TypefaceCompatBaseImpl this$0
com.facebook.share.widget.ShareDialog$CameraEffectHandler$1:
    final synthetic com.facebook.share.widget.ShareDialog$CameraEffectHandler this$1
com.twitter.sdk.android.core.internal.persistence.SerializationStrategy
com.twitter.sdk.android.tweetui.TweetRepository:
    void <init>(android.os.Handler,com.twitter.sdk.android.core.SessionManager)
    void <init>(android.os.Handler,com.twitter.sdk.android.core.SessionManager,com.twitter.sdk.android.core.TwitterCore)
    static synthetic com.twitter.sdk.android.core.TwitterCore access$000(com.twitter.sdk.android.tweetui.TweetRepository)
    void getUserSession(com.twitter.sdk.android.core.Callback)
    private final com.twitter.sdk.android.core.TwitterCore twitterCore
    private final android.os.Handler mainHandler
    private final com.twitter.sdk.android.core.SessionManager userSessionManagers
    final androidx.collection.LruCache tweetCache
    final androidx.collection.LruCache formatCache
androidx.viewpager.widget.ViewPager:
    private int mChildWidthMeasureSpec
    private boolean mNeedCalculatePageOffsets
com.twitter.sdk.android.core.internal.scribe.EventsHandler$3
com.twitter.sdk.android.core.internal.scribe.ScribeEventFactory
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    private final int mPlaybackType
    private final int mAudioStream
    private final int mVolumeControl
    private final int mMaxVolume
    private final int mCurrentVolume
androidx.fragment.app.FragmentManagerImpl:
    static final android.view.animation.Interpolator ACCELERATE_QUINT
    static final android.view.animation.Interpolator ACCELERATE_CUBIC
com.facebook.AccessTokenManager$3:
    final synthetic com.facebook.AccessTokenManager this$0
com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    final synthetic com.google.gson.internal.LinkedTreeMap$EntrySet this$1
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    int getSpan(int)
    void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
    int sizeForPosition(int)
    void ensureSize(int)
    public void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem)
com.facebook.internal.ServerProtocol:
    public void <init>()
    private static final java.lang.String TAG
androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    boolean hasValidAnchor()
io.flutter.embedding.engine.FlutterEngine:
    private final io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
com.twitter.sdk.android.core.internal.scribe.EventsStorage
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    void resetInternal()
    public int mConsumed
    public boolean mFinished
    public boolean mIgnoreConsumed
    public boolean mFocusable
androidx.appcompat.view.menu.ListMenuItemView:
    private int mMenuType
com.google.gson.Gson:
    public com.google.gson.JsonElement toJsonTree(java.lang.Object)
    public com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type)
    public java.lang.String toJson(java.lang.Object)
    public java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)
    public void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)
    public void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)
    public java.lang.String toJson(com.google.gson.JsonElement)
    public void toJson(com.google.gson.JsonElement,java.lang.Appendable)
    public void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
    public java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class)
    private final com.google.gson.internal.Excluder excluder
    private final com.google.gson.FieldNamingStrategy fieldNamingStrategy
com.google.gson.Gson$3:
    final synthetic com.google.gson.Gson this$0
com.twitter.sdk.android.core.internal.scribe.QueueFileEventStorage
com.facebook.internal.FacebookDialogBase$ModeHandler:
    final synthetic com.facebook.internal.FacebookDialogBase this$0
androidx.recyclerview.widget.LinearLayoutManager:
    private void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
    private void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    private boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    private boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    private int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
    private int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
    private void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    private void updateLayoutStateToFillEnd(int,int)
    private void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    private void updateLayoutStateToFillStart(int,int)
    private void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
    private void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int)
    private void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int)
    private void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState)
    private android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    private android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    private android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    private android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    private android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    private android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    private android.view.View findFirstPartiallyOrCompletelyInvisibleChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    private android.view.View findLastPartiallyOrCompletelyInvisibleChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
    int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)
    void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
    boolean shouldMeasureTwice()
    android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int)
    android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int)
    private boolean mRecycleChildrenOnDetach
    private int mInitialPrefetchItemCount
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    private android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate
androidx.fragment.app.FragmentTransitionCompat21$4:
    final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
okhttp3.internal.framed.FramedConnection:
    private int nextPingId
    static final synthetic boolean $assertionsDisabled
androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    static int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
    public abstract androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.appevents.internal.AutomaticAnalyticsLogger:
    public void <init>()
com.squareup.picasso.Stats$StatsHandler$1:
    final synthetic com.squareup.picasso.Stats$StatsHandler this$0
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    public abstract int getSpanSize(int)
    int getCachedSpanIndex(int,int)
    public abstract int getSpanIndex(int,int)
    public int getSpanGroupIndex(int,int)
com.twitter.sdk.android.core.internal.scribe.TimeBasedFileRollOverRunnable
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    void prependToSpan(android.view.View)
    void appendToSpan(android.view.View)
    void cacheReferenceLineAndClear(boolean,int)
    void clear()
    void invalidateCache()
    void setLine(int)
com.twitter.sdk.android.core.internal.scribe.ScribeFilesManager
okhttp3.internal.platform.AndroidPlatform:
    private final java.lang.Class sslParametersClass
com.twitter.sdk.android.core.internal.scribe.ScribeClient:
    public void <init>(android.content.Context,java.util.concurrent.ScheduledExecutorService,com.twitter.sdk.android.core.internal.scribe.ScribeConfig,com.twitter.sdk.android.core.internal.scribe.ScribeEvent$Transform,com.twitter.sdk.android.core.TwitterAuthConfig,com.twitter.sdk.android.core.SessionManager,com.twitter.sdk.android.core.GuestSessionProvider,com.twitter.sdk.android.core.internal.IdManager)
    private com.twitter.sdk.android.core.internal.scribe.ScribeHandler newScribeHandler(long)
    public boolean scribe(com.twitter.sdk.android.core.internal.scribe.ScribeEvent,long)
    com.twitter.sdk.android.core.internal.scribe.ScribeHandler getScribeHandler(long)
    com.twitter.sdk.android.core.internal.scribe.EventsStrategy getScribeStrategy(long,com.twitter.sdk.android.core.internal.scribe.ScribeFilesManager)
    java.lang.String getWorkingFileNameForOwner(long)
    java.lang.String getStorageDirForOwner(long)
    final java.util.concurrent.ConcurrentHashMap scribeHandlers
    private final android.content.Context context
    private final java.util.concurrent.ScheduledExecutorService executor
    private final com.twitter.sdk.android.core.internal.scribe.ScribeConfig scribeConfig
    private final com.twitter.sdk.android.core.internal.scribe.ScribeEvent$Transform transform
    private final com.twitter.sdk.android.core.TwitterAuthConfig authConfig
    private final com.twitter.sdk.android.core.SessionManager sessionManager
    private final com.twitter.sdk.android.core.GuestSessionProvider guestSessionProvider
    private final com.twitter.sdk.android.core.internal.IdManager idManager
androidx.recyclerview.widget.ChildHelper:
    void addView(android.view.View,boolean)
    void addView(android.view.View,int,boolean)
    void removeAllViewsUnfiltered()
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)
    android.view.View getUnfilteredChildAt(int)
    void detachViewFromParent(int)
    int indexOfChild(android.view.View)
    void hide(android.view.View)
com.twitter.sdk.android.core.internal.scribe.ScribeFilesSender$ConfigRequestInterceptor
com.twitter.sdk.android.core.internal.scribe.ScribeEvent
androidx.core.provider.SelfDestructiveThread$2:
    final synthetic androidx.core.provider.SelfDestructiveThread this$0
androidx.recyclerview.widget.OrientationHelper$1:
    public int getDecoratedMeasurementInOther(android.view.View)
    public int getEndPadding()
    public int getModeInOther()
com.facebook.appevents.internal.InAppPurchaseActivityLifecycleTracker$2$2:
    final synthetic com.facebook.appevents.internal.InAppPurchaseActivityLifecycleTracker$2 this$0
com.google.gson.internal.ConstructorConstructor$9:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    public int getSpanIndex()
    public int getSpanSize()
com.facebook.share.internal.ShareInternalUtility$3:
    final synthetic int val$requestCode
    final synthetic com.facebook.FacebookCallback val$callback
androidx.core.text.PrecomputedTextCompat:
    private static final java.lang.Object sLock
    private static java.util.concurrent.Executor sExecutor
io.flutter.Log:
    private static int logLevel
retrofit2.ParameterHandler$Body
androidx.appcompat.widget.AbsActionBarView:
    protected final android.content.Context mPopupContext
com.twitter.sdk.android.core.internal.scribe.SyndicatedSdkImpressionEvent
com.facebook.share.model.ShareModelBuilder
com.google.zxing.aztec.encoder.HighLevelEncoder$1:
    final synthetic com.google.zxing.aztec.encoder.HighLevelEncoder this$0
com.twitter.sdk.android.core.internal.scribe.SyndicationClientEvent$ExternalIds
com.twitter.sdk.android.core.internal.SessionMonitor$MonitorState
okhttp3.RealCall:
    public okhttp3.Response execute()
androidx.core.view.accessibility.AccessibilityEventCompat:
    public static void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.recyclerview.widget.AdapterHelper:
    void consumePostponedUpdates()
    boolean hasAnyUpdateTypes(int)
    public int applyPendingUpdatesToPosition(int)
androidx.core.graphics.TypefaceCompatBaseImpl$2:
    final synthetic androidx.core.graphics.TypefaceCompatBaseImpl this$0
com.twitter.sdk.android.core.internal.persistence.PreferenceStore
com.twitter.sdk.android.core.internal.ActivityLifecycleManager$Callbacks
androidx.recyclerview.widget.GapWorker:
    private void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long)
    public void remove(androidx.recyclerview.widget.RecyclerView)
com.facebook.appevents.codeless.internal.EventBinding:
    private final com.facebook.appevents.codeless.internal.EventBinding$MappingMethod method
    private final com.facebook.appevents.codeless.internal.EventBinding$ActionType type
    private final java.lang.String appVersion
    private final java.lang.String componentId
    private final java.lang.String pathType
com.google.gson.JsonPrimitive:
    void <init>(java.lang.Object)
com.twitter.sdk.android.core.internal.scribe.EventsFilesManager
androidx.arch.core.executor.DefaultTaskExecutor$1:
    final synthetic androidx.arch.core.executor.DefaultTaskExecutor this$0
retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall:
    public retrofit2.Response execute()
com.facebook.internal.CallbackManagerImpl:
    private static final java.lang.String TAG
io.flutter.embedding.android.FlutterSplashView$SavedState:
    public static android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView$Adapter:
    public final boolean hasStableIds()
    public abstract void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    public abstract void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
com.twitter.sdk.android.core.internal.SessionVerifier
io.flutter.embedding.engine.plugins.shim.ShimRegistrar:
    private final java.util.Map globalRegistrarMap
    private final java.lang.String pluginId
com.google.gson.internal.LinkedTreeMap:
    static final synthetic boolean $assertionsDisabled
androidx.fragment.app.FragmentTransitionImpl$1:
    final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
com.google.gson.internal.ConstructorConstructor$8:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.core.view.NestedScrollingParentHelper:
    private final android.view.ViewGroup mViewGroup
com.facebook.internal.WebDialog$4:
    final synthetic com.facebook.internal.WebDialog this$0
retrofit2.RequestBuilder:
    void setRelativeUrl(java.lang.Object)
    void setBody(okhttp3.RequestBody)
com.twitter.sdk.android.core.internal.scribe.ScribeHandler
com.google.zxing.datamatrix.encoder.SymbolInfo:
    static final com.google.zxing.datamatrix.encoder.SymbolInfo[] PROD_SYMBOLS
com.twitter.sdk.android.core.TwitterCore:
    void <init>(com.twitter.sdk.android.core.TwitterAuthConfig)
    void <init>(com.twitter.sdk.android.core.TwitterAuthConfig,java.util.concurrent.ConcurrentHashMap,com.twitter.sdk.android.core.TwitterApiClient)
    private void setUpScribeClient()
    void doInBackground()
    public java.lang.String getIdentifier()
    com.twitter.sdk.android.core.internal.SessionMonitor sessionMonitor
    private final android.content.Context context
    private volatile com.twitter.sdk.android.core.TwitterApiClient guestClient
androidx.core.view.ViewConfigurationCompat:
    private static java.lang.reflect.Method sGetScaledScrollFactorMethod
com.twitter.sdk.android.tweetui.LikeTweetAction:
    final com.twitter.sdk.android.tweetui.TweetUi tweetUi
com.twitter.sdk.android.core.DefaultLogger:
    public void w(java.lang.String,java.lang.String,java.lang.Throwable)
    public void w(java.lang.String,java.lang.String)
    public void log(int,java.lang.String,java.lang.String)
    public void log(int,java.lang.String,java.lang.String,boolean)
com.twitter.sdk.android.core.TwitterRateLimit:
    private int requestLimit
    private int remainingRequest
    private long resetSeconds
android.support.v4.media.MediaMetadataCompat:
    private static final java.lang.String[] PREFERRED_DESCRIPTION_ORDER
    private static final java.lang.String[] PREFERRED_BITMAP_ORDER
    private static final java.lang.String[] PREFERRED_URI_ORDER
com.twitter.sdk.android.core.internal.scribe.SyndicatedSdkImpressionEvent$ExternalIds
com.twitter.sdk.android.core.internal.scribe.FilesSender
com.facebook.appevents.aam.MetadataViewObserver:
    private static final java.lang.String TAG
androidx.appcompat.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB:
    final synthetic androidx.appcompat.view.menu.MenuItemWrapperJB this$0
com.twitter.sdk.android.core.internal.scribe.EventsHandler$1
retrofit2.ServiceMethod$Builder:
    private varargs java.lang.RuntimeException parameterError(java.lang.Throwable,int,java.lang.String,java.lang.Object[])
androidx.lifecycle.MethodCallsLogger:
    private java.util.Map mCalledMethods
androidx.appcompat.widget.ListPopupWindow:
    private boolean mIsAnimatedFromAnchor
    private java.lang.Runnable mShowDropDownRunnable
androidx.appcompat.view.menu.ActionMenuItem:
    private final int mCategoryOrder
    private int mIconResId
    private android.view.MenuItem$OnMenuItemClickListener mClickListener
retrofit2.Retrofit:
    private final java.util.concurrent.Executor callbackExecutor
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    public boolean isFullSpan()
com.twitter.sdk.android.core.internal.scribe.EventsHandler
io.flutter.embedding.engine.loader.ResourceExtractor:
    private static final java.lang.String[] SUPPORTED_ABIS
com.facebook.appevents.internal.ActivityLifecycleTracker:
    public void <init>()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1:
    final synthetic io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1 this$1
com.google.gson.internal.ConstructorConstructor$11:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1:
    final synthetic io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl this$0
androidx.appcompat.view.menu.MenuBuilder:
    android.graphics.drawable.Drawable mHeaderIcon
    android.view.View mHeaderView
androidx.appcompat.widget.ThemeUtils:
    static final int[] ACTIVATED_STATE_SET
    static final int[] SELECTED_STATE_SET
    static final int[] NOT_PRESSED_OR_FOCUSED_STATE_SET
androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    private android.view.View nextViewFromScrapList()
    boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
    android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
    public void assignPositionFromScrapList()
    public void assignPositionFromScrapList(android.view.View)
    public android.view.View nextViewInLimitedList(android.view.View)
    int mOffset
    int mAvailable
    int mCurrentPosition
    int mItemDirection
    int mLayoutDirection
    int mScrollingOffset
    boolean mIsPreLayout
    int mLastScrollDelta
androidx.core.view.ActionProvider:
    private final android.content.Context mContext
    private androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener
com.google.gson.internal.ConstructorConstructor$10:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
com.google.gson.internal.Primitives:
    private static final java.util.Map WRAPPER_TO_PRIMITIVE_TYPE
com.twitter.sdk.android.core.internal.CurrentTimeProvider
com.google.gson.internal.Streams:
    public static java.io.Writer writerForAppendable(java.lang.Appendable)
com.facebook.appevents.aam.MetadataRule:
    private static final java.lang.String TAG
androidx.appcompat.widget.ScrollingTabContainerView:
    private static final android.view.animation.Interpolator sAlphaInterpolator
androidx.fragment.app.FragmentTransitionCompat21$1:
    final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.recyclerview.widget.GridLayoutManager:
    private void clearPreLayoutSpanMappingCache()
    private void cachePreLayoutSpanMapping()
    private void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
    private int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)
    private int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)
    private void measureChild(android.view.View,int,boolean)
    private void guessMeasurement(float,int)
    private void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)
    private void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,boolean)
    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    public void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
    public void setMeasuredDimension(android.graphics.Rect,int,int)
    int getSpaceForSpanRange(int,int)
    void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
    android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int)
    void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
com.facebook.appevents.codeless.ViewIndexer:
    private static com.facebook.appevents.codeless.ViewIndexer instance
com.google.gson.JsonObject:
    private com.google.gson.JsonElement createJsonElement(java.lang.Object)
    public void addProperty(java.lang.String,java.lang.String)
    public com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String)
okhttp3.Dispatcher:
    synchronized void executed(okhttp3.RealCall)
    void finished(okhttp3.RealCall)
androidx.fragment.app.FragmentTransitionImpl$2:
    final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
com.facebook.internal.WebDialog$3:
    final synthetic com.facebook.internal.WebDialog this$0
androidx.appcompat.widget.ToolbarWidgetWrapper:
    private int mNavigationMode
com.google.gson.internal.ConstructorConstructor$7:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
com.twitter.sdk.android.core.internal.scribe.EventsFilesManager$FileWithTimestamp
com.twitter.sdk.android.core.Twitter:
    public com.twitter.sdk.android.core.internal.IdManager getIdManager()
    public java.util.concurrent.ExecutorService getExecutorService()
    public com.twitter.sdk.android.core.internal.ActivityLifecycleManager getActivityLifecycleManager()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    private android.animation.Animator$AnimatorListener mAnimatorListener
    java.util.ArrayList mAnimationCallbacks
com.twitter.sdk.android.core.identity.WebViewException:
    private final int errorCode
    private final java.lang.String failingUrl
androidx.appcompat.app.AlertController$RecycleListView:
    private final int mPaddingTopNoTitle
    private final int mPaddingBottomNoButtons
okhttp3.internal.framed.NameValueBlockReader$2:
    final synthetic okhttp3.internal.framed.NameValueBlockReader this$0
com.facebook.appevents.codeless.CodelessLoggingEventListener:
    public void <init>()
    private static final java.lang.String TAG
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    public int getSpanSize(int)
    public int getSpanIndex(int,int)
okhttp3.Call:
    public abstract okhttp3.Response execute()
com.facebook.RequestProgress$1:
    final synthetic com.facebook.RequestProgress this$0
io.flutter.embedding.engine.FlutterEnginePluginRegistry$FlutterEngineActivityPluginBinding:
    private final io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
io.flutter.embedding.engine.loader.ResourceCleaner$2:
    final synthetic io.flutter.embedding.engine.loader.ResourceCleaner this$0
okhttp3.CacheControl:
    public static final okhttp3.CacheControl FORCE_NETWORK
    public static final okhttp3.CacheControl FORCE_CACHE
okhttp3.internal.http.UnrepeatableRequestBody
com.twitter.sdk.android.core.Logger:
    public abstract void w(java.lang.String,java.lang.String)
    public abstract void log(int,java.lang.String,java.lang.String)
com.facebook.login.LoginFragment$2:
    final synthetic com.facebook.login.LoginFragment this$0
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite
com.facebook.appevents.AppEventsLogger:
    private static final java.lang.String TAG
com.twitter.sdk.android.core.internal.scribe.EnabledEventsStrategy
com.facebook.login.LoginLogger:
    private java.lang.String facebookVersion
com.facebook.share.widget.ShareDialog$ShareStoryHandler$1:
    final synthetic com.facebook.share.widget.ShareDialog$ShareStoryHandler this$1
com.twitter.sdk.android.core.internal.scribe.ScribeFilesSender
com.twitter.sdk.android.core.internal.SystemCurrentTimeProvider
com.google.gson.internal.ConstructorConstructor$12:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
retrofit2.Call:
    public abstract retrofit2.Response execute()
com.facebook.internal.FetchedAppSettings$DialogFeatureConfig:
    private android.net.Uri fallbackUrl
androidx.recyclerview.widget.RecyclerView:
    private void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    private boolean hasUpdatedView()
    private void dispatchContentChangedIfNecessary()
    private void saveFocusInfo()
    private void resetFocusInfo()
    private android.view.View findNextViewToFocus()
    private void recoverFocusFromState()
    private int getDeepestFocusedViewWithId(android.view.View)
    private void dispatchLayoutStep3()
    private void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
    private void findMinMaxChildLayoutPositions(int[])
    private boolean didChildRangeChange(int,int)
    private void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)
    static synthetic void access$300(androidx.recyclerview.widget.RecyclerView,int,int)
    void onExitLayoutOrScroll()
    void onExitLayoutOrScroll(boolean)
    boolean isAccessibilityEnabled()
    void postAnimationRunner()
    void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    void markItemDecorInsetsDirty()
    void saveOldPositions()
    void clearOldPositions()
    void processDataSetCompletelyChanged(boolean)
    void markKnownViewsInvalid()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
    android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
    public void onScrolled(int,int)
    void dispatchOnScrolled(int,int)
    void dispatchPendingImportantForAccessibilityChanges()
    int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    final androidx.recyclerview.widget.ViewInfoStore mViewInfoStore
    androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener
    private final android.view.accessibility.AccessibilityManager mAccessibilityManager
    boolean mDispatchItemsChangedEvent
    boolean mItemsAddedOrRemoved
    boolean mItemsChanged
    private final int[] mMinMaxLayoutPositions
    final java.util.List mPendingAccessibilityImportanceChange
    private java.lang.Runnable mItemAnimatorRunner
    private final androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback
    private static final int[] NESTED_SCROLLING_ATTRS
    private static final int[] CLIP_TO_PADDING_ATTR
    static final boolean FORCE_INVALIDATE_DISPLAY_LIST
    static final boolean POST_UPDATES_ON_ANIMATION
    private static final java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
    static final android.view.animation.Interpolator sQuinticInterpolator
com.twitter.sdk.android.core.internal.scribe.EventsStorageListener
retrofit2.ParameterHandler$HeaderMap
com.facebook.share.model.ShareLinkContent$Builder:
    static final java.lang.String TAG
android.support.v4.media.session.MediaSessionCompat$Token:
    private android.os.Bundle mSessionToken2Bundle
com.facebook.appevents.internal.InAppPurchaseActivityLifecycleTracker:
    public void <init>()
com.google.gson.internal.bind.TypeAdapters$26$1:
    final synthetic com.google.gson.internal.bind.TypeAdapters$26 this$0
zhuoyuan.li.fluttershareme.FlutterShareMePlugin$1:
    final synthetic zhuoyuan.li.fluttershareme.FlutterShareMePlugin this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[])
    void assignCoordinateFromPadding()
    void assignCoordinateFromPadding(int)
com.google.zxing.common.reedsolomon.GenericGF:
    private final com.google.zxing.common.reedsolomon.GenericGFPoly one
    public static final com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256
    public static final com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64
com.facebook.internal.FetchedAppSettings:
    private java.lang.String nuxContent
    private boolean nuxEnabled
    private java.lang.String smartLoginBookmarkIconURL
    private java.lang.String smartLoginMenuIconURL
    private boolean trackUninstallEnabled
io.flutter.plugin.platform.VirtualDisplayController$1:
    final synthetic io.flutter.plugin.platform.VirtualDisplayController this$0
okio.Base64:
    private static final byte[] URL_MAP
io.flutter.embedding.engine.loader.ResourceCleaner$1:
    final synthetic io.flutter.embedding.engine.loader.ResourceCleaner this$0
com.twitter.sdk.android.core.GuestSession$Serializer
com.twitter.Extractor$Entity:
    protected final java.lang.String listSlug
    protected java.lang.String displayURL
    protected java.lang.String expandedURL
io.flutter.view.AccessibilityBridge$SemanticsNode:
    private io.flutter.view.AccessibilityBridge$TextDirection textDirection
    private float previousScrollExtentMax
    private float previousScrollExtentMin
com.google.gson.internal.ConstructorConstructor$6:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
com.twitter.sdk.android.core.internal.SessionMonitor$1
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    private final float[] mTempPts
okhttp3.MediaType:
    private final java.lang.String subtype
androidx.recyclerview.widget.RecyclerView$LayoutManager:
    private void addViewInt(android.view.View,int,boolean)
    private void detachViewInternal(int,android.view.View)
    private void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)
    private static boolean isMeasurementUpToDate(int,int,int)
    public static int getChildMeasureSpec(int,int,int,int,boolean)
    void setRecyclerView(androidx.recyclerview.widget.RecyclerView)
    void setMeasuredDimensionFromChildren(int,int)
    public void setMeasuredDimension(android.graphics.Rect,int,int)
    void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
    public boolean removeCallbacks(java.lang.Runnable)
    public void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)
    public void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    public void addDisappearingView(android.view.View)
    public void addDisappearingView(android.view.View,int)
    public void addView(android.view.View)
    public void addView(android.view.View,int)
    public void detachViewAt(int)
    public void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public void attachView(android.view.View,int)
    public void moveView(int,int)
    public android.view.View getFocusedChild()
    public void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler)
    boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
    boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public void measureChildWithMargins(android.view.View,int,int)
    public void layoutDecoratedWithMargins(android.view.View,int,int,int,int)
    public void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
    public boolean isViewPartiallyVisible(android.view.View,boolean,boolean)
    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter)
    public void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
    public void setMeasuredDimension(int,int)
    public int getMinimumWidth()
    public int getMinimumHeight()
    void stopSmoothScroller()
    void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)
    boolean shouldMeasureTwice()
    boolean hasFlexibleChildInBothOrientations()
    private boolean mItemPrefetchEnabled
    int mPrefetchMaxCountObserved
    boolean mPrefetchMaxObservedInInitialPrefetch
androidx.fragment.app.FragmentManagerImpl$4:
    final synthetic androidx.fragment.app.FragmentManagerImpl this$0
com.twitter.sdk.android.core.internal.persistence.PreferenceStoreImpl
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    private boolean mCanceled
    final synthetic androidx.appcompat.widget.AbsActionBarView this$0
com.twitter.sdk.android.tweetui.ShareTweetAction:
    final com.twitter.sdk.android.tweetui.TweetUi tweetUi
io.flutter.app.FlutterApplication:
    private android.app.Activity mCurrentActivity
com.facebook.internal.Validate:
    public void <init>()
androidx.loader.content.ModernAsyncTask:
    private static volatile java.util.concurrent.Executor sDefaultExecutor
com.google.gson.internal.ConstructorConstructor$13:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
com.facebook.FacebookRequestError:
    private final java.lang.String errorRecoveryMessage
    private final org.json.JSONObject requestResult
    private final org.json.JSONObject requestResultBody
    private final java.net.HttpURLConnection connection
com.twitter.sdk.android.core.internal.scribe.DefaultScribeClient:
    public void <init>(android.content.Context,com.twitter.sdk.android.core.SessionManager,com.twitter.sdk.android.core.GuestSessionProvider,com.twitter.sdk.android.core.internal.IdManager,com.twitter.sdk.android.core.internal.scribe.ScribeConfig)
    void <init>(android.content.Context,com.twitter.sdk.android.core.TwitterAuthConfig,com.twitter.sdk.android.core.SessionManager,com.twitter.sdk.android.core.GuestSessionProvider,com.twitter.sdk.android.core.internal.IdManager,com.twitter.sdk.android.core.internal.scribe.ScribeConfig)
    private java.lang.String getLanguage()
    private static com.google.gson.Gson getGson()
    private static java.util.concurrent.ScheduledExecutorService getExecutor()
    public static com.twitter.sdk.android.core.internal.scribe.ScribeConfig getScribeConfig(java.lang.String,java.lang.String)
    private static boolean isEnabled()
    static java.lang.String getUserAgent(java.lang.String,java.lang.String)
    static java.lang.String getScribeUrl(java.lang.String,java.lang.String)
    public void scribe(com.twitter.sdk.android.core.internal.scribe.ScribeEvent)
    com.twitter.sdk.android.core.Session getActiveSession()
    long getScribeSessionId(com.twitter.sdk.android.core.Session)
    private final com.twitter.sdk.android.core.SessionManager sessionManager
    private final java.lang.String advertisingId
    private final android.content.Context context
    private static volatile java.util.concurrent.ScheduledExecutorService executor
io.flutter.plugins.connectivity.ConnectivityMethodChannelHandler:
    static final synthetic boolean $assertionsDisabled
androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    public int mParentVirtualDescendantId
okhttp3.internal.framed.FramedStream$FramedDataSource:
    static final synthetic boolean $assertionsDisabled
androidx.appcompat.widget.SuggestionsAdapter:
    private final android.app.SearchManager mSearchManager
com.twitter.sdk.android.core.TwitterSession$Serializer
com.facebook.appevents.aam.MetadataMatcher:
    void <init>()
    private static final java.lang.String TAG
com.twitter.sdk.android.tweetui.TweetRepository$3
com.google.gson.internal.Streams$AppendableWriter
com.facebook.share.widget.ShareDialog$NativeHandler$1:
    final synthetic com.facebook.share.widget.ShareDialog$NativeHandler this$1
com.google.gson.internal.ConstructorConstructor$5:
    final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.core.view.ViewCompat:
    public static boolean hasTransientState(android.view.View)
    private static final java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
    private static java.util.WeakHashMap sViewPropertyAnimatorMap
    private static boolean sAccessibilityDelegateCheckFailed
androidx.core.os.CancellationSignal:
    private boolean mCancelInProgress
com.google.gson.GsonBuilder:
    public com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)
androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    protected final void stop()
    protected abstract void onChildAttachedToWindow(android.view.View)
com.twitter.sdk.android.core.internal.TwitterSessionVerifier$AccountServiceProvider
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    private static final com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS
com.twitter.sdk.android.core.internal.oauth.OAuth1aService$1:
    final synthetic com.twitter.sdk.android.core.internal.oauth.OAuth1aService this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    void invalidateSpanInfo()
com.twitter.sdk.android.core.internal.scribe.DisabledEventsStrategy
androidx.core.graphics.ColorUtils:
    private static final java.lang.ThreadLocal TEMP_ARRAY
retrofit2.DefaultCallAdapterFactory$1:
    final synthetic retrofit2.DefaultCallAdapterFactory this$0
com.google.zxing.oned.UPCEReader:
    private static final int[] MIDDLE_END_PATTERN
com.facebook.GraphResponse:
    private final org.json.JSONArray graphObjectArray
    private final java.lang.String rawResponse
    private final com.facebook.GraphRequest request
com.google.zxing.oned.CodaBarReader:
    private static final char[] STARTEND_ENCODING
androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    public void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView)
    public void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
com.facebook.internal.FetchedAppGateKeepersManager:
    private static final java.lang.String TAG
com.twitter.sdk.android.core.TwitterApiClient:
    public com.twitter.sdk.android.core.services.FavoriteService getFavoriteService()
com.twitter.sdk.android.core.models.SafeMapAdapter$1:
    final synthetic com.twitter.sdk.android.core.models.SafeMapAdapter this$0
androidx.appcompat.view.menu.BaseMenuPresenter:
    protected android.view.LayoutInflater mInflater
    private int mMenuLayoutRes
io.flutter.plugin.platform.PlatformView$-CC
